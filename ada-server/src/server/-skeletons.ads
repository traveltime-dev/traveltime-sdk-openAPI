--  TravelTime API
--  No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
--
--  The version of the OpenAPI document: 1.2.2
--  Contact: support@igeolise.com
--
--  NOTE: This package is auto generated by OpenAPI-Generator 5.2.0-SNAPSHOT.
--  https://openapi-generator.tech
--  Do not edit the class manually.

pragma Warnings (Off, "*is not referenced");
pragma Warnings (Off, "*no entities of*are referenced");
with Swagger.Servers;
with .Models;
with Security.Permissions;
package .Skeletons is
   pragma Style_Checks ("-mr");
   pragma Warnings (Off, "*use clause for package*");
   use .Models;
   type Server_Type is limited interface;



   --  
   procedure Geocoding_Reverse_Search
      (Server : in out Server_Type;
       Lat : in double;
       Lng : in double;
       Within_Periodcountry : in Swagger.Nullable_UString;
       Result  : out .Models.ResponseGeocoding_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Geocoding_Search
      (Server : in out Server_Type;
       Query : in Swagger.UString;
       Focus_Periodlat : in double;
       Focus_Periodlng : in double;
       Within_Periodcountry : in Swagger.Nullable_UString;
       Result  : out .Models.ResponseGeocoding_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Map_Info
      (Server : in out Server_Type
       ;
       Result  : out .Models.ResponseMapInfo_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Routes
      (Server : in out Server_Type;
       Request_Routes_Type : in RequestRoutes_Type;
       Result  : out .Models.ResponseRoutes_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Supported_Locations
      (Server : in out Server_Type;
       Request_Supported_Locations_Type : in RequestSupportedLocations_Type;
       Result  : out .Models.ResponseSupportedLocations_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Time_Filter
      (Server : in out Server_Type;
       Request_Time_Filter_Type : in RequestTimeFilter_Type;
       Result  : out .Models.ResponseTimeFilter_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Time_Filter_Fast
      (Server : in out Server_Type;
       Request_Time_Filter_Fast_Type : in RequestTimeFilterFast_Type;
       Result  : out .Models.ResponseTimeFilterFast_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Time_Filter_Postcode_Districts
      (Server : in out Server_Type;
       Request_Time_Filter_Postcode_Districts_Type : in RequestTimeFilterPostcodeDistricts_Type;
       Result  : out .Models.ResponseTimeFilterPostcodeDistricts_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Time_Filter_Postcode_Sectors
      (Server : in out Server_Type;
       Request_Time_Filter_Postcode_Sectors_Type : in RequestTimeFilterPostcodeSectors_Type;
       Result  : out .Models.ResponseTimeFilterPostcodeSectors_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Time_Filter_Postcodes
      (Server : in out Server_Type;
       Request_Time_Filter_Postcodes_Type : in RequestTimeFilterPostcodes_Type;
       Result  : out .Models.ResponseTimeFilterPostcodes_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   --  
   procedure Time_Map
      (Server : in out Server_Type;
       Request_Time_Map_Type : in RequestTimeMap_Type;
       Result  : out .Models.ResponseTimeMap_Type;
       Context : in out Swagger.Servers.Context_Type) is abstract;

   generic
      type Implementation_Type is limited new Server_Type with private;
      URI_Prefix : String := "";
   package Skeleton is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  
      procedure Geocoding_Reverse_Search
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Geocoding_Search
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Map_Info
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Routes
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Supported_Locations
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Filter
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Filter_Fast
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Filter_Postcode_Districts
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Filter_Postcode_Sectors
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Filter_Postcodes
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Map
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);

   end Skeleton;

   generic
      type Implementation_Type is limited new Server_Type with private;
      URI_Prefix : String := "";
   package Shared_Instance is

      procedure Register (Server : in out Swagger.Servers.Application_Type'Class);


      --  
      procedure Geocoding_Reverse_Search
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Geocoding_Search
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Map_Info
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Routes
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Supported_Locations
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Filter
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Filter_Fast
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Filter_Postcode_Districts
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Filter_Postcode_Sectors
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Filter_Postcodes
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


      --  
      procedure Time_Map
         (Req     : in out Swagger.Servers.Request'Class;
          Reply   : in out Swagger.Servers.Response'Class;
          Stream  : in out Swagger.Servers.Output_Stream'Class;
          Context : in out Swagger.Servers.Context_Type);


   private
      protected Server is

         --  
         procedure Geocoding_Reverse_Search
            (Lat : in double;
             Lng : in double;
             Within_Periodcountry : in Swagger.Nullable_UString;
             Result  : out .Models.ResponseGeocoding_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Geocoding_Search
            (Query : in Swagger.UString;
             Focus_Periodlat : in double;
             Focus_Periodlng : in double;
             Within_Periodcountry : in Swagger.Nullable_UString;
             Result  : out .Models.ResponseGeocoding_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Map_Info
            (Result  : out .Models.ResponseMapInfo_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Routes
            (Request_Routes_Type : in RequestRoutes_Type;
             Result  : out .Models.ResponseRoutes_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Supported_Locations
            (Request_Supported_Locations_Type : in RequestSupportedLocations_Type;
             Result  : out .Models.ResponseSupportedLocations_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Time_Filter
            (Request_Time_Filter_Type : in RequestTimeFilter_Type;
             Result  : out .Models.ResponseTimeFilter_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Time_Filter_Fast
            (Request_Time_Filter_Fast_Type : in RequestTimeFilterFast_Type;
             Result  : out .Models.ResponseTimeFilterFast_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Time_Filter_Postcode_Districts
            (Request_Time_Filter_Postcode_Districts_Type : in RequestTimeFilterPostcodeDistricts_Type;
             Result  : out .Models.ResponseTimeFilterPostcodeDistricts_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Time_Filter_Postcode_Sectors
            (Request_Time_Filter_Postcode_Sectors_Type : in RequestTimeFilterPostcodeSectors_Type;
             Result  : out .Models.ResponseTimeFilterPostcodeSectors_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Time_Filter_Postcodes
            (Request_Time_Filter_Postcodes_Type : in RequestTimeFilterPostcodes_Type;
             Result  : out .Models.ResponseTimeFilterPostcodes_Type;
             Context : in out Swagger.Servers.Context_Type);

         --  
         procedure Time_Map
            (Request_Time_Map_Type : in RequestTimeMap_Type;
             Result  : out .Models.ResponseTimeMap_Type;
             Context : in out Swagger.Servers.Context_Type);

      private
         Impl : Implementation_Type;
      end Server;
   end Shared_Instance;

end .Skeletons;
