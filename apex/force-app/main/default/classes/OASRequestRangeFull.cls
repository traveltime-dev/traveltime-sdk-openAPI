/*
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASRequestRangeFull
 */
public class OASRequestRangeFull implements OAS.MappedProperties {
    /**
     * Get enabled
     * @return enabled
     */
    public Boolean enabled { get; set; }

    /**
     * Get maxResults
     * minimum: 1
     * maximum: 5
     * @return maxResults
     */
    public Integer maxResults { get; set; }

    /**
     * Get width
     * minimum: 1
     * maximum: 43200
     * @return width
     */
    public Integer width { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'max_results' => 'maxResults'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASRequestRangeFull getExample() {
        OASRequestRangeFull requestRangeFull = new OASRequestRangeFull();
          requestRangeFull.enabled = true;
          requestRangeFull.maxResults = 0;
          requestRangeFull.width = 0;
        return requestRangeFull;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASRequestRangeFull) {           
            OASRequestRangeFull requestRangeFull = (OASRequestRangeFull) obj;
            return this.enabled == requestRangeFull.enabled
                && this.maxResults == requestRangeFull.maxResults
                && this.width == requestRangeFull.width;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (enabled == null ? 0 : System.hashCode(enabled));
        hashCode = (17 * hashCode) + (maxResults == null ? 0 : System.hashCode(maxResults));
        hashCode = (17 * hashCode) + (width == null ? 0 : System.hashCode(width));
        return hashCode;
    }
}

