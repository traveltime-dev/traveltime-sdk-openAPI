/*
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASRequestTimeFilterPostcodeSectorsD
 */
public class OASRequestTimeFilterPostcodeSectorsD implements OAS.MappedProperties {
    /**
     * Get id
     * @return id
     */
    public String id { get; set; }

    /**
     * Get transportation
     * @return transportation
     */
    public OASRequestTransportation transportation { get; set; }

    /**
     * Get travelTime
     * minimum: 60
     * maximum: 14400
     * @return travelTime
     */
    public Integer travelTime { get; set; }

    /**
     * Get departureTime
     * @return departureTime
     */
    public Datetime departureTime { get; set; }

    /**
     * Get reachablePostcodesThreshold
     * @return reachablePostcodesThreshold
     */
    public Double reachablePostcodesThreshold { get; set; }

    /**
     * Get properties
     * @return properties
     */
    public List<OASRequestTimeFilterPostcodeSectorsP> properties { get; set; }

    /**
     * Get range
     * @return range
     */
    public OASRequestRangeFull range { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'travel_time' => 'travelTime',
        'departure_time' => 'departureTime',
        'reachable_postcodes_threshold' => 'reachablePostcodesThreshold'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'travel_time' => 'travelTime',
        'departure_time' => 'departureTime',
        'reachable_postcodes_threshold' => 'reachablePostcodesThreshold'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'travel_time' => 'travelTime',
        'departure_time' => 'departureTime',
        'reachable_postcodes_threshold' => 'reachablePostcodesThreshold'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASRequestTimeFilterPostcodeSectorsD() {
        properties = new List<OASRequestTimeFilterPostcodeSectorsP>();
    }

    public static OASRequestTimeFilterPostcodeSectorsD getExample() {
        OASRequestTimeFilterPostcodeSectorsD requestTimeFilterPostcodeSectorsDepartureSearch = new OASRequestTimeFilterPostcodeSectorsD();
          requestTimeFilterPostcodeSectorsDepartureSearch.id = '';
          requestTimeFilterPostcodeSectorsDepartureSearch.transportation = OASRequestTransportation.getExample();
          requestTimeFilterPostcodeSectorsDepartureSearch.travelTime = 0;
          requestTimeFilterPostcodeSectorsDepartureSearch.departureTime = Datetime.newInstanceGmt(2000, 1, 23, 4, 56, 7);
          requestTimeFilterPostcodeSectorsDepartureSearch.reachablePostcodesThreshold = 1.3579;
          requestTimeFilterPostcodeSectorsDepartureSearch.properties = new List<OASRequestTimeFilterPostcodeSectorsP>{OASRequestTimeFilterPostcodeSectorsP.getExample()};
          requestTimeFilterPostcodeSectorsDepartureSearch.range = OASRequestRangeFull.getExample();
        return requestTimeFilterPostcodeSectorsDepartureSearch;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASRequestTimeFilterPostcodeSectorsD) {           
            OASRequestTimeFilterPostcodeSectorsD requestTimeFilterPostcodeSectorsDepartureSearch = (OASRequestTimeFilterPostcodeSectorsD) obj;
            return this.id == requestTimeFilterPostcodeSectorsDepartureSearch.id
                && this.transportation == requestTimeFilterPostcodeSectorsDepartureSearch.transportation
                && this.travelTime == requestTimeFilterPostcodeSectorsDepartureSearch.travelTime
                && this.departureTime == requestTimeFilterPostcodeSectorsDepartureSearch.departureTime
                && this.reachablePostcodesThreshold == requestTimeFilterPostcodeSectorsDepartureSearch.reachablePostcodesThreshold
                && this.properties == requestTimeFilterPostcodeSectorsDepartureSearch.properties
                && this.range == requestTimeFilterPostcodeSectorsDepartureSearch.range;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (transportation == null ? 0 : System.hashCode(transportation));
        hashCode = (17 * hashCode) + (travelTime == null ? 0 : System.hashCode(travelTime));
        hashCode = (17 * hashCode) + (departureTime == null ? 0 : System.hashCode(departureTime));
        hashCode = (17 * hashCode) + (reachablePostcodesThreshold == null ? 0 : System.hashCode(reachablePostcodesThreshold));
        hashCode = (17 * hashCode) + (properties == null ? 0 : System.hashCode(properties));
        hashCode = (17 * hashCode) + (range == null ? 0 : System.hashCode(range));
        return hashCode;
    }
}

