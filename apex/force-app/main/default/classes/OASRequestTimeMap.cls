/*
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASRequestTimeMap
 */
public class OASRequestTimeMap implements OAS.MappedProperties {
    /**
     * Get departureSearches
     * @return departureSearches
     */
    public List<OASRequestTimeMapDepartureSearch> departureSearches { get; set; }

    /**
     * Get arrivalSearches
     * @return arrivalSearches
     */
    public List<OASRequestTimeMapArrivalSearch> arrivalSearches { get; set; }

    /**
     * Get unions
     * @return unions
     */
    public List<OASRequestUnionOnIntersection> unions { get; set; }

    /**
     * Get intersections
     * @return intersections
     */
    public List<OASRequestUnionOnIntersection> intersections { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'departure_searches' => 'departureSearches',
        'arrival_searches' => 'arrivalSearches'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'departure_searches' => 'departureSearches',
        'arrival_searches' => 'arrivalSearches'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASRequestTimeMap() {
        departureSearches = new List<OASRequestTimeMapDepartureSearch>();
        arrivalSearches = new List<OASRequestTimeMapArrivalSearch>();
        unions = new List<OASRequestUnionOnIntersection>();
        intersections = new List<OASRequestUnionOnIntersection>();
    }

    public static OASRequestTimeMap getExample() {
        OASRequestTimeMap requestTimeMap = new OASRequestTimeMap();
          requestTimeMap.departureSearches = new List<OASRequestTimeMapDepartureSearch>{OASRequestTimeMapDepartureSearch.getExample()};
          requestTimeMap.arrivalSearches = new List<OASRequestTimeMapArrivalSearch>{OASRequestTimeMapArrivalSearch.getExample()};
          requestTimeMap.unions = new List<OASRequestUnionOnIntersection>{OASRequestUnionOnIntersection.getExample()};
          requestTimeMap.intersections = new List<OASRequestUnionOnIntersection>{OASRequestUnionOnIntersection.getExample()};
        return requestTimeMap;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASRequestTimeMap) {           
            OASRequestTimeMap requestTimeMap = (OASRequestTimeMap) obj;
            return this.departureSearches == requestTimeMap.departureSearches
                && this.arrivalSearches == requestTimeMap.arrivalSearches
                && this.unions == requestTimeMap.unions
                && this.intersections == requestTimeMap.intersections;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (departureSearches == null ? 0 : System.hashCode(departureSearches));
        hashCode = (17 * hashCode) + (arrivalSearches == null ? 0 : System.hashCode(arrivalSearches));
        hashCode = (17 * hashCode) + (unions == null ? 0 : System.hashCode(unions));
        hashCode = (17 * hashCode) + (intersections == null ? 0 : System.hashCode(intersections));
        return hashCode;
    }
}

