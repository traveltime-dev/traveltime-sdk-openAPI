/*
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASResponseGeocodingProperties
 */
public class OASResponseGeocodingProperties implements OAS.MappedProperties {
    /**
     * Get name
     * @return name
     */
    public String name { get; set; }

    /**
     * Get label
     * @return label
     */
    public String label { get; set; }

    /**
     * Get score
     * @return score
     */
    public Double score { get; set; }

    /**
     * Get houseNumber
     * @return houseNumber
     */
    public String houseNumber { get; set; }

    /**
     * Get street
     * @return street
     */
    public String street { get; set; }

    /**
     * Get region
     * @return region
     */
    public String region { get; set; }

    /**
     * Get regionCode
     * @return regionCode
     */
    public String regionCode { get; set; }

    /**
     * Get neighbourhood
     * @return neighbourhood
     */
    public String neighbourhood { get; set; }

    /**
     * Get county
     * @return county
     */
    public String county { get; set; }

    /**
     * Get macroregion
     * @return macroregion
     */
    public String macroregion { get; set; }

    /**
     * Get city
     * @return city
     */
    public String city { get; set; }

    /**
     * Get country
     * @return country
     */
    public String country { get; set; }

    /**
     * Get countryCode
     * @return countryCode
     */
    public String countryCode { get; set; }

    /**
     * Get continent
     * @return continent
     */
    public String continent { get; set; }

    /**
     * Get postcode
     * @return postcode
     */
    public String postcode { get; set; }

    /**
     * Get features
     * @return features
     */
    public OASResponseMapInfoFeatures features { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'house_number' => 'houseNumber',
        'region_code' => 'regionCode',
        'country_code' => 'countryCode'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'house_number' => 'houseNumber',
        'region_code' => 'regionCode',
        'country_code' => 'countryCode'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'house_number' => 'houseNumber',
        'region_code' => 'regionCode',
        'country_code' => 'countryCode'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASResponseGeocodingProperties getExample() {
        OASResponseGeocodingProperties responseGeocodingProperties = new OASResponseGeocodingProperties();
          responseGeocodingProperties.name = '';
          responseGeocodingProperties.label = '';
          responseGeocodingProperties.score = 1.3579;
          responseGeocodingProperties.houseNumber = '';
          responseGeocodingProperties.street = '';
          responseGeocodingProperties.region = '';
          responseGeocodingProperties.regionCode = '';
          responseGeocodingProperties.neighbourhood = '';
          responseGeocodingProperties.county = '';
          responseGeocodingProperties.macroregion = '';
          responseGeocodingProperties.city = '';
          responseGeocodingProperties.country = '';
          responseGeocodingProperties.countryCode = '';
          responseGeocodingProperties.continent = '';
          responseGeocodingProperties.postcode = '';
          responseGeocodingProperties.features = OASResponseMapInfoFeatures.getExample();
        return responseGeocodingProperties;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASResponseGeocodingProperties) {           
            OASResponseGeocodingProperties responseGeocodingProperties = (OASResponseGeocodingProperties) obj;
            return this.name == responseGeocodingProperties.name
                && this.label == responseGeocodingProperties.label
                && this.score == responseGeocodingProperties.score
                && this.houseNumber == responseGeocodingProperties.houseNumber
                && this.street == responseGeocodingProperties.street
                && this.region == responseGeocodingProperties.region
                && this.regionCode == responseGeocodingProperties.regionCode
                && this.neighbourhood == responseGeocodingProperties.neighbourhood
                && this.county == responseGeocodingProperties.county
                && this.macroregion == responseGeocodingProperties.macroregion
                && this.city == responseGeocodingProperties.city
                && this.country == responseGeocodingProperties.country
                && this.countryCode == responseGeocodingProperties.countryCode
                && this.continent == responseGeocodingProperties.continent
                && this.postcode == responseGeocodingProperties.postcode
                && this.features == responseGeocodingProperties.features;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (name == null ? 0 : System.hashCode(name));
        hashCode = (17 * hashCode) + (label == null ? 0 : System.hashCode(label));
        hashCode = (17 * hashCode) + (score == null ? 0 : System.hashCode(score));
        hashCode = (17 * hashCode) + (houseNumber == null ? 0 : System.hashCode(houseNumber));
        hashCode = (17 * hashCode) + (street == null ? 0 : System.hashCode(street));
        hashCode = (17 * hashCode) + (region == null ? 0 : System.hashCode(region));
        hashCode = (17 * hashCode) + (regionCode == null ? 0 : System.hashCode(regionCode));
        hashCode = (17 * hashCode) + (neighbourhood == null ? 0 : System.hashCode(neighbourhood));
        hashCode = (17 * hashCode) + (county == null ? 0 : System.hashCode(county));
        hashCode = (17 * hashCode) + (macroregion == null ? 0 : System.hashCode(macroregion));
        hashCode = (17 * hashCode) + (city == null ? 0 : System.hashCode(city));
        hashCode = (17 * hashCode) + (country == null ? 0 : System.hashCode(country));
        hashCode = (17 * hashCode) + (countryCode == null ? 0 : System.hashCode(countryCode));
        hashCode = (17 * hashCode) + (continent == null ? 0 : System.hashCode(continent));
        hashCode = (17 * hashCode) + (postcode == null ? 0 : System.hashCode(postcode));
        hashCode = (17 * hashCode) + (features == null ? 0 : System.hashCode(features));
        return hashCode;
    }
}

