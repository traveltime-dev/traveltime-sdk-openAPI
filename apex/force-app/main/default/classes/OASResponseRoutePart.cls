/*
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASResponseRoutePart
 */
public class OASResponseRoutePart implements OAS.MappedProperties {
    /**
     * Get id
     * @return id
     */
    public String id { get; set; }

    /**
     * Gets or Sets type
     */
    public enum TypeEnum {
        BASIC,
        START_END,
        ROAD,
        PUBLIC_TRANSPORT
    }

    /**
     * Get type
     * @return type
     */
    public TypeEnum type { get; set; }

    /**
     * Get mode
     * @return mode
     */
    public OASResponseTransportationMode mode { get; set; }

    /**
     * Get directions
     * @return directions
     */
    public String directions { get; set; }

    /**
     * Get distance
     * @return distance
     */
    public Integer distance { get; set; }

    /**
     * Get travelTime
     * @return travelTime
     */
    public Integer travelTime { get; set; }

    /**
     * Get coords
     * @return coords
     */
    public List<OASCoords> coords { get; set; }

    /**
     * Get direction
     * @return direction
     */
    public String direction { get; set; }

    /**
     * Get road
     * @return road
     */
    public String road { get; set; }

    /**
     * Get turn
     * @return turn
     */
    public String turn { get; set; }

    /**
     * Get line
     * @return line
     */
    public String line { get; set; }

    /**
     * Get departureStation
     * @return departureStation
     */
    public String departureStation { get; set; }

    /**
     * Get arrivalStation
     * @return arrivalStation
     */
    public String arrivalStation { get; set; }

    /**
     * Get departsAt
     * @return departsAt
     */
    public String departsAt { get; set; }

    /**
     * Get arrivesAt
     * @return arrivesAt
     */
    public String arrivesAt { get; set; }

    /**
     * Get numStops
     * @return numStops
     */
    public Integer numStops { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'travel_time' => 'travelTime',
        'departure_station' => 'departureStation',
        'arrival_station' => 'arrivalStation',
        'departs_at' => 'departsAt',
        'arrives_at' => 'arrivesAt',
        'num_stops' => 'numStops'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'travel_time' => 'travelTime',
        'departure_station' => 'departureStation',
        'arrival_station' => 'arrivalStation',
        'departs_at' => 'departsAt',
        'arrives_at' => 'arrivesAt',
        'num_stops' => 'numStops'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'travel_time' => 'travelTime',
        'departure_station' => 'departureStation',
        'arrival_station' => 'arrivalStation',
        'departs_at' => 'departsAt',
        'arrives_at' => 'arrivesAt',
        'num_stops' => 'numStops'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'travel_time' => 'travelTime',
        'departure_station' => 'departureStation',
        'arrival_station' => 'arrivalStation',
        'departs_at' => 'departsAt',
        'arrives_at' => 'arrivesAt',
        'num_stops' => 'numStops'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'travel_time' => 'travelTime',
        'departure_station' => 'departureStation',
        'arrival_station' => 'arrivalStation',
        'departs_at' => 'departsAt',
        'arrives_at' => 'arrivesAt',
        'num_stops' => 'numStops'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'travel_time' => 'travelTime',
        'departure_station' => 'departureStation',
        'arrival_station' => 'arrivalStation',
        'departs_at' => 'departsAt',
        'arrives_at' => 'arrivesAt',
        'num_stops' => 'numStops'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASResponseRoutePart() {
        coords = new List<OASCoords>();
    }

    public static OASResponseRoutePart getExample() {
        OASResponseRoutePart responseRoutePart = new OASResponseRoutePart();
          responseRoutePart.id = '';
          responseRoutePart.type = TypeEnum.BASIC;
          responseRoutePart.mode = OASResponseTransportationMode.getExample();
          responseRoutePart.directions = '';
          responseRoutePart.distance = 0;
          responseRoutePart.travelTime = 0;
          responseRoutePart.coords = new List<OASCoords>{OASCoords.getExample()};
          responseRoutePart.direction = '';
          responseRoutePart.road = '';
          responseRoutePart.turn = '';
          responseRoutePart.line = '';
          responseRoutePart.departureStation = '';
          responseRoutePart.arrivalStation = '';
          responseRoutePart.departsAt = '';
          responseRoutePart.arrivesAt = '';
          responseRoutePart.numStops = 0;
        return responseRoutePart;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASResponseRoutePart) {           
            OASResponseRoutePart responseRoutePart = (OASResponseRoutePart) obj;
            return this.id == responseRoutePart.id
                && this.type == responseRoutePart.type
                && this.mode == responseRoutePart.mode
                && this.directions == responseRoutePart.directions
                && this.distance == responseRoutePart.distance
                && this.travelTime == responseRoutePart.travelTime
                && this.coords == responseRoutePart.coords
                && this.direction == responseRoutePart.direction
                && this.road == responseRoutePart.road
                && this.turn == responseRoutePart.turn
                && this.line == responseRoutePart.line
                && this.departureStation == responseRoutePart.departureStation
                && this.arrivalStation == responseRoutePart.arrivalStation
                && this.departsAt == responseRoutePart.departsAt
                && this.arrivesAt == responseRoutePart.arrivesAt
                && this.numStops == responseRoutePart.numStops;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        hashCode = (17 * hashCode) + (mode == null ? 0 : System.hashCode(mode));
        hashCode = (17 * hashCode) + (directions == null ? 0 : System.hashCode(directions));
        hashCode = (17 * hashCode) + (distance == null ? 0 : System.hashCode(distance));
        hashCode = (17 * hashCode) + (travelTime == null ? 0 : System.hashCode(travelTime));
        hashCode = (17 * hashCode) + (coords == null ? 0 : System.hashCode(coords));
        hashCode = (17 * hashCode) + (direction == null ? 0 : System.hashCode(direction));
        hashCode = (17 * hashCode) + (road == null ? 0 : System.hashCode(road));
        hashCode = (17 * hashCode) + (turn == null ? 0 : System.hashCode(turn));
        hashCode = (17 * hashCode) + (line == null ? 0 : System.hashCode(line));
        hashCode = (17 * hashCode) + (departureStation == null ? 0 : System.hashCode(departureStation));
        hashCode = (17 * hashCode) + (arrivalStation == null ? 0 : System.hashCode(arrivalStation));
        hashCode = (17 * hashCode) + (departsAt == null ? 0 : System.hashCode(departsAt));
        hashCode = (17 * hashCode) + (arrivesAt == null ? 0 : System.hashCode(arrivesAt));
        hashCode = (17 * hashCode) + (numStops == null ? 0 : System.hashCode(numStops));
        return hashCode;
    }
}

