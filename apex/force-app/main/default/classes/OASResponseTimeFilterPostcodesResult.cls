/*
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASResponseTimeFilterPostcodesResult
 */
public class OASResponseTimeFilterPostcodesResult implements OAS.MappedProperties {
    /**
     * Get searchId
     * @return searchId
     */
    public String searchId { get; set; }

    /**
     * Get postcodes
     * @return postcodes
     */
    public List<OASResponseTimeFilterPostcode> postcodes { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'search_id' => 'searchId'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public OASResponseTimeFilterPostcodesResult() {
        postcodes = new List<OASResponseTimeFilterPostcode>();
    }

    public static OASResponseTimeFilterPostcodesResult getExample() {
        OASResponseTimeFilterPostcodesResult responseTimeFilterPostcodesResult = new OASResponseTimeFilterPostcodesResult();
          responseTimeFilterPostcodesResult.searchId = '';
          responseTimeFilterPostcodesResult.postcodes = new List<OASResponseTimeFilterPostcode>{OASResponseTimeFilterPostcode.getExample()};
        return responseTimeFilterPostcodesResult;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASResponseTimeFilterPostcodesResult) {           
            OASResponseTimeFilterPostcodesResult responseTimeFilterPostcodesResult = (OASResponseTimeFilterPostcodesResult) obj;
            return this.searchId == responseTimeFilterPostcodesResult.searchId
                && this.postcodes == responseTimeFilterPostcodesResult.postcodes;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (searchId == null ? 0 : System.hashCode(searchId));
        hashCode = (17 * hashCode) + (postcodes == null ? 0 : System.hashCode(postcodes));
        return hashCode;
    }
}

