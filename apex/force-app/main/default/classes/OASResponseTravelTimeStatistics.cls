/*
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASResponseTravelTimeStatistics
 */
public class OASResponseTravelTimeStatistics {
    /**
     * Get min
     * @return min
     */
    public Integer min { get; set; }

    /**
     * Get max
     * @return max
     */
    public Integer max { get; set; }

    /**
     * Get mean
     * @return mean
     */
    public Integer mean { get; set; }

    /**
     * Get median
     * @return median
     */
    public Integer median { get; set; }

    public static OASResponseTravelTimeStatistics getExample() {
        OASResponseTravelTimeStatistics responseTravelTimeStatistics = new OASResponseTravelTimeStatistics();
          responseTravelTimeStatistics.min = 0;
          responseTravelTimeStatistics.max = 0;
          responseTravelTimeStatistics.mean = 0;
          responseTravelTimeStatistics.median = 0;
        return responseTravelTimeStatistics;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASResponseTravelTimeStatistics) {           
            OASResponseTravelTimeStatistics responseTravelTimeStatistics = (OASResponseTravelTimeStatistics) obj;
            return this.min == responseTravelTimeStatistics.min
                && this.max == responseTravelTimeStatistics.max
                && this.mean == responseTravelTimeStatistics.mean
                && this.median == responseTravelTimeStatistics.median;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (min == null ? 0 : System.hashCode(min));
        hashCode = (17 * hashCode) + (max == null ? 0 : System.hashCode(max));
        hashCode = (17 * hashCode) + (mean == null ? 0 : System.hashCode(mean));
        hashCode = (17 * hashCode) + (median == null ? 0 : System.hashCode(median));
        return hashCode;
    }
}

