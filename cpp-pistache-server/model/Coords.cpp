/**
* TravelTime API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.2.3
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "Coords.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

Coords::Coords()
{
    m_Lat = 0.0;
    m_Lng = 0.0;
    
}

void Coords::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool Coords::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool Coords::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "Coords" : pathPrefix;

        
    

    return success;
}

bool Coords::operator==(const Coords& rhs) const
{
    return
    
    
    (getLat() == rhs.getLat())
     &&
    
    (getLng() == rhs.getLng())
    
    
    ;
}

bool Coords::operator!=(const Coords& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const Coords& o)
{
    j = nlohmann::json();
    j["lat"] = o.m_Lat;
    j["lng"] = o.m_Lng;
    
}

void from_json(const nlohmann::json& j, Coords& o)
{
    j.at("lat").get_to(o.m_Lat);
    j.at("lng").get_to(o.m_Lng);
    
}

double Coords::getLat() const
{
    return m_Lat;
}
void Coords::setLat(double const value)
{
    m_Lat = value;
}
double Coords::getLng() const
{
    return m_Lng;
}
void Coords::setLng(double const value)
{
    m_Lng = value;
}


} // namespace org::openapitools::server::model

