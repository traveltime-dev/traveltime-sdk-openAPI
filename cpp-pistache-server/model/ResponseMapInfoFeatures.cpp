/**
* TravelTime API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.2.2
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ResponseMapInfoFeatures.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

ResponseMapInfoFeatures::ResponseMapInfoFeatures()
{
    m_Public_transportIsSet = false;
    m_Fares = false;
    m_Postcodes = false;
    
}

void ResponseMapInfoFeatures::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ResponseMapInfoFeatures::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ResponseMapInfoFeatures::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ResponseMapInfoFeatures" : pathPrefix;

        
    
    

    return success;
}

bool ResponseMapInfoFeatures::operator==(const ResponseMapInfoFeatures& rhs) const
{
    return
    
    
    
    ((!publicTransportIsSet() && !rhs.publicTransportIsSet()) || (publicTransportIsSet() && rhs.publicTransportIsSet() && getPublicTransport() == rhs.getPublicTransport())) &&
    
    (isFares() == rhs.isFares())
     &&
    
    (isPostcodes() == rhs.isPostcodes())
    
    
    ;
}

bool ResponseMapInfoFeatures::operator!=(const ResponseMapInfoFeatures& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ResponseMapInfoFeatures& o)
{
    j = nlohmann::json();
    if(o.publicTransportIsSet())
        j["public_transport"] = o.m_Public_transport;
    j["fares"] = o.m_Fares;
    j["postcodes"] = o.m_Postcodes;
    
}

void from_json(const nlohmann::json& j, ResponseMapInfoFeatures& o)
{
    if(j.find("public_transport") != j.end())
    {
        j.at("public_transport").get_to(o.m_Public_transport);
        o.m_Public_transportIsSet = true;
    } 
    j.at("fares").get_to(o.m_Fares);
    j.at("postcodes").get_to(o.m_Postcodes);
    
}

ResponseMapInfoFeaturesPublicTransport ResponseMapInfoFeatures::getPublicTransport() const
{
    return m_Public_transport;
}
void ResponseMapInfoFeatures::setPublicTransport(ResponseMapInfoFeaturesPublicTransport const& value)
{
    m_Public_transport = value;
    m_Public_transportIsSet = true;
}
bool ResponseMapInfoFeatures::publicTransportIsSet() const
{
    return m_Public_transportIsSet;
}
void ResponseMapInfoFeatures::unsetPublic_transport()
{
    m_Public_transportIsSet = false;
}
bool ResponseMapInfoFeatures::isFares() const
{
    return m_Fares;
}
void ResponseMapInfoFeatures::setFares(bool const value)
{
    m_Fares = value;
}
bool ResponseMapInfoFeatures::isPostcodes() const
{
    return m_Postcodes;
}
void ResponseMapInfoFeatures::setPostcodes(bool const value)
{
    m_Postcodes = value;
}


} // namespace org::openapitools::server::model

