/**
* TravelTime API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.2.2
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ResponseTimeFilterPostcode.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

ResponseTimeFilterPostcode::ResponseTimeFilterPostcode()
{
    m_Code = "";
    
}

void ResponseTimeFilterPostcode::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ResponseTimeFilterPostcode::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ResponseTimeFilterPostcode::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ResponseTimeFilterPostcode" : pathPrefix;

        
     
    
    /* Properties */ {
        const std::vector<ResponseTimeFilterPostcodesProperties>& value = m_Properties;
        const std::string currentValuePath = _pathPrefix + ".properties";
                
        
        { // Recursive validation of array elements
            const std::string oldValuePath = currentValuePath;
            int i = 0;
            for (const ResponseTimeFilterPostcodesProperties& value : value)
            { 
                const std::string currentValuePath = oldValuePath + "[" + std::to_string(i) + "]";
                        
        success = value.validate(msg, currentValuePath + ".properties") && success;
 
                i++;
            }
        }

    }
    

    return success;
}

bool ResponseTimeFilterPostcode::operator==(const ResponseTimeFilterPostcode& rhs) const
{
    return
    
    
    (getCode() == rhs.getCode())
     &&
    
    (getProperties() == rhs.getProperties())
    
    
    ;
}

bool ResponseTimeFilterPostcode::operator!=(const ResponseTimeFilterPostcode& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ResponseTimeFilterPostcode& o)
{
    j = nlohmann::json();
    j["code"] = o.m_Code;
    j["properties"] = o.m_Properties;
    
}

void from_json(const nlohmann::json& j, ResponseTimeFilterPostcode& o)
{
    j.at("code").get_to(o.m_Code);
    j.at("properties").get_to(o.m_Properties);
    
}

std::string ResponseTimeFilterPostcode::getCode() const
{
    return m_Code;
}
void ResponseTimeFilterPostcode::setCode(std::string const& value)
{
    m_Code = value;
}
std::vector<ResponseTimeFilterPostcodesProperties> ResponseTimeFilterPostcode::getProperties() const
{
    return m_Properties;
}
void ResponseTimeFilterPostcode::setProperties(std::vector<ResponseTimeFilterPostcodesProperties> const& value)
{
    m_Properties = value;
}


} // namespace org::openapitools::server::model

