/**
* TravelTime API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.2.3
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ResponseTimeMapProperties.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

ResponseTimeMapProperties::ResponseTimeMapProperties()
{
    m_Is_only_walking = false;
    m_Is_only_walkingIsSet = false;
    
}

void ResponseTimeMapProperties::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ResponseTimeMapProperties::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ResponseTimeMapProperties::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ResponseTimeMapProperties" : pathPrefix;

        

    return success;
}

bool ResponseTimeMapProperties::operator==(const ResponseTimeMapProperties& rhs) const
{
    return
    
    
    
    ((!isOnlyWalkingIsSet() && !rhs.isOnlyWalkingIsSet()) || (isOnlyWalkingIsSet() && rhs.isOnlyWalkingIsSet() && isIsOnlyWalking() == rhs.isIsOnlyWalking()))
    
    ;
}

bool ResponseTimeMapProperties::operator!=(const ResponseTimeMapProperties& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ResponseTimeMapProperties& o)
{
    j = nlohmann::json();
    if(o.isOnlyWalkingIsSet())
        j["is_only_walking"] = o.m_Is_only_walking;
    
}

void from_json(const nlohmann::json& j, ResponseTimeMapProperties& o)
{
    if(j.find("is_only_walking") != j.end())
    {
        j.at("is_only_walking").get_to(o.m_Is_only_walking);
        o.m_Is_only_walkingIsSet = true;
    } 
    
}

bool ResponseTimeMapProperties::isIsOnlyWalking() const
{
    return m_Is_only_walking;
}
void ResponseTimeMapProperties::setIsOnlyWalking(bool const value)
{
    m_Is_only_walking = value;
    m_Is_only_walkingIsSet = true;
}
bool ResponseTimeMapProperties::isOnlyWalkingIsSet() const
{
    return m_Is_only_walkingIsSet;
}
void ResponseTimeMapProperties::unsetIs_only_walking()
{
    m_Is_only_walkingIsSet = false;
}


} // namespace org::openapitools::server::model

