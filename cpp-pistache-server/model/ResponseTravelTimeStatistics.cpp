/**
* TravelTime API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.2.3
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/


#include "ResponseTravelTimeStatistics.h"
#include "Helpers.h"

#include <sstream>

namespace org::openapitools::server::model
{

ResponseTravelTimeStatistics::ResponseTravelTimeStatistics()
{
    m_Min = 0;
    m_Max = 0;
    m_Mean = 0;
    m_Median = 0;
    
}

void ResponseTravelTimeStatistics::validate() const
{
    std::stringstream msg;
    if (!validate(msg))
    {
        throw org::openapitools::server::helpers::ValidationException(msg.str());
    }
}

bool ResponseTravelTimeStatistics::validate(std::stringstream& msg) const
{
    return validate(msg, "");
}

bool ResponseTravelTimeStatistics::validate(std::stringstream& msg, const std::string& pathPrefix) const
{
    bool success = true;
    const std::string _pathPrefix = pathPrefix.empty() ? "ResponseTravelTimeStatistics" : pathPrefix;

        
    
    
    

    return success;
}

bool ResponseTravelTimeStatistics::operator==(const ResponseTravelTimeStatistics& rhs) const
{
    return
    
    
    (getMin() == rhs.getMin())
     &&
    
    (getMax() == rhs.getMax())
     &&
    
    (getMean() == rhs.getMean())
     &&
    
    (getMedian() == rhs.getMedian())
    
    
    ;
}

bool ResponseTravelTimeStatistics::operator!=(const ResponseTravelTimeStatistics& rhs) const
{
    return !(*this == rhs);
}

void to_json(nlohmann::json& j, const ResponseTravelTimeStatistics& o)
{
    j = nlohmann::json();
    j["min"] = o.m_Min;
    j["max"] = o.m_Max;
    j["mean"] = o.m_Mean;
    j["median"] = o.m_Median;
    
}

void from_json(const nlohmann::json& j, ResponseTravelTimeStatistics& o)
{
    j.at("min").get_to(o.m_Min);
    j.at("max").get_to(o.m_Max);
    j.at("mean").get_to(o.m_Mean);
    j.at("median").get_to(o.m_Median);
    
}

int32_t ResponseTravelTimeStatistics::getMin() const
{
    return m_Min;
}
void ResponseTravelTimeStatistics::setMin(int32_t const value)
{
    m_Min = value;
}
int32_t ResponseTravelTimeStatistics::getMax() const
{
    return m_Max;
}
void ResponseTravelTimeStatistics::setMax(int32_t const value)
{
    m_Max = value;
}
int32_t ResponseTravelTimeStatistics::getMean() const
{
    return m_Mean;
}
void ResponseTravelTimeStatistics::setMean(int32_t const value)
{
    m_Mean = value;
}
int32_t ResponseTravelTimeStatistics::getMedian() const
{
    return m_Median;
}
void ResponseTravelTimeStatistics::setMedian(int32_t const value)
{
    m_Median = value;
}


} // namespace org::openapitools::server::model

