/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequestRangeFull.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequestRangeFull::OAIRequestRangeFull(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequestRangeFull::OAIRequestRangeFull() {
    this->initializeModel();
}

OAIRequestRangeFull::~OAIRequestRangeFull() {}

void OAIRequestRangeFull::initializeModel() {

    m_enabled_isSet = false;
    m_enabled_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;

    m_width_isSet = false;
    m_width_isValid = false;
}

void OAIRequestRangeFull::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRequestRangeFull::fromJsonObject(QJsonObject json) {

    m_enabled_isValid = ::OpenAPI::fromJsonValue(enabled, json[QString("enabled")]);
    m_enabled_isSet = !json[QString("enabled")].isNull() && m_enabled_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(max_results, json[QString("max_results")]);
    m_max_results_isSet = !json[QString("max_results")].isNull() && m_max_results_isValid;

    m_width_isValid = ::OpenAPI::fromJsonValue(width, json[QString("width")]);
    m_width_isSet = !json[QString("width")].isNull() && m_width_isValid;
}

QString OAIRequestRangeFull::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRequestRangeFull::asJsonObject() const {
    QJsonObject obj;
    if (m_enabled_isSet) {
        obj.insert(QString("enabled"), ::OpenAPI::toJsonValue(enabled));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("max_results"), ::OpenAPI::toJsonValue(max_results));
    }
    if (m_width_isSet) {
        obj.insert(QString("width"), ::OpenAPI::toJsonValue(width));
    }
    return obj;
}

bool OAIRequestRangeFull::isEnabled() const {
    return enabled;
}
void OAIRequestRangeFull::setEnabled(const bool &enabled) {
    this->enabled = enabled;
    this->m_enabled_isSet = true;
}

bool OAIRequestRangeFull::is_enabled_Set() const{
    return m_enabled_isSet;
}

bool OAIRequestRangeFull::is_enabled_Valid() const{
    return m_enabled_isValid;
}

qint32 OAIRequestRangeFull::getMaxResults() const {
    return max_results;
}
void OAIRequestRangeFull::setMaxResults(const qint32 &max_results) {
    this->max_results = max_results;
    this->m_max_results_isSet = true;
}

bool OAIRequestRangeFull::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIRequestRangeFull::is_max_results_Valid() const{
    return m_max_results_isValid;
}

qint32 OAIRequestRangeFull::getWidth() const {
    return width;
}
void OAIRequestRangeFull::setWidth(const qint32 &width) {
    this->width = width;
    this->m_width_isSet = true;
}

bool OAIRequestRangeFull::is_width_Set() const{
    return m_width_isSet;
}

bool OAIRequestRangeFull::is_width_Valid() const{
    return m_width_isValid;
}

bool OAIRequestRangeFull::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_width_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRequestRangeFull::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_enabled_isValid && m_max_results_isValid && m_width_isValid && true;
}

} // namespace OpenAPI
