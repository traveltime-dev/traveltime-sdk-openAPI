/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIDefaultApiHandler_H
#define OAI_OAIDefaultApiHandler_H

#include <QObject>

#include "OAIRequestRoutes.h"
#include "OAIRequestSupportedLocations.h"
#include "OAIRequestTimeFilter.h"
#include "OAIRequestTimeFilterFast.h"
#include "OAIRequestTimeFilterPostcodeDistricts.h"
#include "OAIRequestTimeFilterPostcodeSectors.h"
#include "OAIRequestTimeFilterPostcodes.h"
#include "OAIRequestTimeMap.h"
#include "OAIResponseError.h"
#include "OAIResponseGeocoding.h"
#include "OAIResponseMapInfo.h"
#include "OAIResponseRoutes.h"
#include "OAIResponseSupportedLocations.h"
#include "OAIResponseTimeFilter.h"
#include "OAIResponseTimeFilterFast.h"
#include "OAIResponseTimeFilterPostcodeDistricts.h"
#include "OAIResponseTimeFilterPostcodeSectors.h"
#include "OAIResponseTimeFilterPostcodes.h"
#include "OAIResponseTimeMap.h"
#include <QString>

namespace OpenAPI {

class OAIDefaultApiHandler : public QObject
{
    Q_OBJECT
    
public:
    OAIDefaultApiHandler();
    virtual ~OAIDefaultApiHandler();


public slots:
    virtual void geocodingReverseSearch(double lat, double lng, QString within_country);
    virtual void geocodingSearch(QString query, double focus_lat, double focus_lng, QString within_country);
    virtual void mapInfo();
    virtual void routes(OAIRequestRoutes oai_request_routes);
    virtual void supportedLocations(OAIRequestSupportedLocations oai_request_supported_locations);
    virtual void timeFilter(OAIRequestTimeFilter oai_request_time_filter);
    virtual void timeFilterFast(OAIRequestTimeFilterFast oai_request_time_filter_fast);
    virtual void timeFilterPostcodeDistricts(OAIRequestTimeFilterPostcodeDistricts oai_request_time_filter_postcode_districts);
    virtual void timeFilterPostcodeSectors(OAIRequestTimeFilterPostcodeSectors oai_request_time_filter_postcode_sectors);
    virtual void timeFilterPostcodes(OAIRequestTimeFilterPostcodes oai_request_time_filter_postcodes);
    virtual void timeMap(OAIRequestTimeMap oai_request_time_map);
    

};

}

#endif // OAI_OAIDefaultApiHandler_H
