/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponseBox.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponseBox::OAIResponseBox(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponseBox::OAIResponseBox() {
    this->initializeModel();
}

OAIResponseBox::~OAIResponseBox() {}

void OAIResponseBox::initializeModel() {

    m_min_lat_isSet = false;
    m_min_lat_isValid = false;

    m_max_lat_isSet = false;
    m_max_lat_isValid = false;

    m_min_lng_isSet = false;
    m_min_lng_isValid = false;

    m_max_lng_isSet = false;
    m_max_lng_isValid = false;
}

void OAIResponseBox::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponseBox::fromJsonObject(QJsonObject json) {

    m_min_lat_isValid = ::OpenAPI::fromJsonValue(min_lat, json[QString("min_lat")]);
    m_min_lat_isSet = !json[QString("min_lat")].isNull() && m_min_lat_isValid;

    m_max_lat_isValid = ::OpenAPI::fromJsonValue(max_lat, json[QString("max_lat")]);
    m_max_lat_isSet = !json[QString("max_lat")].isNull() && m_max_lat_isValid;

    m_min_lng_isValid = ::OpenAPI::fromJsonValue(min_lng, json[QString("min_lng")]);
    m_min_lng_isSet = !json[QString("min_lng")].isNull() && m_min_lng_isValid;

    m_max_lng_isValid = ::OpenAPI::fromJsonValue(max_lng, json[QString("max_lng")]);
    m_max_lng_isSet = !json[QString("max_lng")].isNull() && m_max_lng_isValid;
}

QString OAIResponseBox::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponseBox::asJsonObject() const {
    QJsonObject obj;
    if (m_min_lat_isSet) {
        obj.insert(QString("min_lat"), ::OpenAPI::toJsonValue(min_lat));
    }
    if (m_max_lat_isSet) {
        obj.insert(QString("max_lat"), ::OpenAPI::toJsonValue(max_lat));
    }
    if (m_min_lng_isSet) {
        obj.insert(QString("min_lng"), ::OpenAPI::toJsonValue(min_lng));
    }
    if (m_max_lng_isSet) {
        obj.insert(QString("max_lng"), ::OpenAPI::toJsonValue(max_lng));
    }
    return obj;
}

double OAIResponseBox::getMinLat() const {
    return min_lat;
}
void OAIResponseBox::setMinLat(const double &min_lat) {
    this->min_lat = min_lat;
    this->m_min_lat_isSet = true;
}

bool OAIResponseBox::is_min_lat_Set() const{
    return m_min_lat_isSet;
}

bool OAIResponseBox::is_min_lat_Valid() const{
    return m_min_lat_isValid;
}

double OAIResponseBox::getMaxLat() const {
    return max_lat;
}
void OAIResponseBox::setMaxLat(const double &max_lat) {
    this->max_lat = max_lat;
    this->m_max_lat_isSet = true;
}

bool OAIResponseBox::is_max_lat_Set() const{
    return m_max_lat_isSet;
}

bool OAIResponseBox::is_max_lat_Valid() const{
    return m_max_lat_isValid;
}

double OAIResponseBox::getMinLng() const {
    return min_lng;
}
void OAIResponseBox::setMinLng(const double &min_lng) {
    this->min_lng = min_lng;
    this->m_min_lng_isSet = true;
}

bool OAIResponseBox::is_min_lng_Set() const{
    return m_min_lng_isSet;
}

bool OAIResponseBox::is_min_lng_Valid() const{
    return m_min_lng_isValid;
}

double OAIResponseBox::getMaxLng() const {
    return max_lng;
}
void OAIResponseBox::setMaxLng(const double &max_lng) {
    this->max_lng = max_lng;
    this->m_max_lng_isSet = true;
}

bool OAIResponseBox::is_max_lng_Set() const{
    return m_max_lng_isSet;
}

bool OAIResponseBox::is_max_lng_Valid() const{
    return m_max_lng_isValid;
}

bool OAIResponseBox::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_min_lat_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_lat_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_lng_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_lng_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponseBox::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_min_lat_isValid && m_max_lat_isValid && m_min_lng_isValid && m_max_lng_isValid && true;
}

} // namespace OpenAPI
