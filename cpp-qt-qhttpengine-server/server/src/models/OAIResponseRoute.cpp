/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponseRoute.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponseRoute::OAIResponseRoute(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponseRoute::OAIResponseRoute() {
    this->initializeModel();
}

OAIResponseRoute::~OAIResponseRoute() {}

void OAIResponseRoute::initializeModel() {

    m_departure_time_isSet = false;
    m_departure_time_isValid = false;

    m_arrival_time_isSet = false;
    m_arrival_time_isValid = false;

    m_parts_isSet = false;
    m_parts_isValid = false;
}

void OAIResponseRoute::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponseRoute::fromJsonObject(QJsonObject json) {

    m_departure_time_isValid = ::OpenAPI::fromJsonValue(departure_time, json[QString("departure_time")]);
    m_departure_time_isSet = !json[QString("departure_time")].isNull() && m_departure_time_isValid;

    m_arrival_time_isValid = ::OpenAPI::fromJsonValue(arrival_time, json[QString("arrival_time")]);
    m_arrival_time_isSet = !json[QString("arrival_time")].isNull() && m_arrival_time_isValid;

    m_parts_isValid = ::OpenAPI::fromJsonValue(parts, json[QString("parts")]);
    m_parts_isSet = !json[QString("parts")].isNull() && m_parts_isValid;
}

QString OAIResponseRoute::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponseRoute::asJsonObject() const {
    QJsonObject obj;
    if (m_departure_time_isSet) {
        obj.insert(QString("departure_time"), ::OpenAPI::toJsonValue(departure_time));
    }
    if (m_arrival_time_isSet) {
        obj.insert(QString("arrival_time"), ::OpenAPI::toJsonValue(arrival_time));
    }
    if (parts.size() > 0) {
        obj.insert(QString("parts"), ::OpenAPI::toJsonValue(parts));
    }
    return obj;
}

QDateTime OAIResponseRoute::getDepartureTime() const {
    return departure_time;
}
void OAIResponseRoute::setDepartureTime(const QDateTime &departure_time) {
    this->departure_time = departure_time;
    this->m_departure_time_isSet = true;
}

bool OAIResponseRoute::is_departure_time_Set() const{
    return m_departure_time_isSet;
}

bool OAIResponseRoute::is_departure_time_Valid() const{
    return m_departure_time_isValid;
}

QDateTime OAIResponseRoute::getArrivalTime() const {
    return arrival_time;
}
void OAIResponseRoute::setArrivalTime(const QDateTime &arrival_time) {
    this->arrival_time = arrival_time;
    this->m_arrival_time_isSet = true;
}

bool OAIResponseRoute::is_arrival_time_Set() const{
    return m_arrival_time_isSet;
}

bool OAIResponseRoute::is_arrival_time_Valid() const{
    return m_arrival_time_isValid;
}

QList<OAIResponseRoutePart> OAIResponseRoute::getParts() const {
    return parts;
}
void OAIResponseRoute::setParts(const QList<OAIResponseRoutePart> &parts) {
    this->parts = parts;
    this->m_parts_isSet = true;
}

bool OAIResponseRoute::is_parts_Set() const{
    return m_parts_isSet;
}

bool OAIResponseRoute::is_parts_Valid() const{
    return m_parts_isValid;
}

bool OAIResponseRoute::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_departure_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_arrival_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (parts.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponseRoute::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_departure_time_isValid && m_arrival_time_isValid && m_parts_isValid && true;
}

} // namespace OpenAPI
