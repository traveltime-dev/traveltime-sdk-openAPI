/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponseTravelTimeStatistics.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponseTravelTimeStatistics::OAIResponseTravelTimeStatistics(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponseTravelTimeStatistics::OAIResponseTravelTimeStatistics() {
    this->initializeModel();
}

OAIResponseTravelTimeStatistics::~OAIResponseTravelTimeStatistics() {}

void OAIResponseTravelTimeStatistics::initializeModel() {

    m_min_isSet = false;
    m_min_isValid = false;

    m_max_isSet = false;
    m_max_isValid = false;

    m_mean_isSet = false;
    m_mean_isValid = false;

    m_median_isSet = false;
    m_median_isValid = false;
}

void OAIResponseTravelTimeStatistics::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponseTravelTimeStatistics::fromJsonObject(QJsonObject json) {

    m_min_isValid = ::OpenAPI::fromJsonValue(min, json[QString("min")]);
    m_min_isSet = !json[QString("min")].isNull() && m_min_isValid;

    m_max_isValid = ::OpenAPI::fromJsonValue(max, json[QString("max")]);
    m_max_isSet = !json[QString("max")].isNull() && m_max_isValid;

    m_mean_isValid = ::OpenAPI::fromJsonValue(mean, json[QString("mean")]);
    m_mean_isSet = !json[QString("mean")].isNull() && m_mean_isValid;

    m_median_isValid = ::OpenAPI::fromJsonValue(median, json[QString("median")]);
    m_median_isSet = !json[QString("median")].isNull() && m_median_isValid;
}

QString OAIResponseTravelTimeStatistics::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponseTravelTimeStatistics::asJsonObject() const {
    QJsonObject obj;
    if (m_min_isSet) {
        obj.insert(QString("min"), ::OpenAPI::toJsonValue(min));
    }
    if (m_max_isSet) {
        obj.insert(QString("max"), ::OpenAPI::toJsonValue(max));
    }
    if (m_mean_isSet) {
        obj.insert(QString("mean"), ::OpenAPI::toJsonValue(mean));
    }
    if (m_median_isSet) {
        obj.insert(QString("median"), ::OpenAPI::toJsonValue(median));
    }
    return obj;
}

qint32 OAIResponseTravelTimeStatistics::getMin() const {
    return min;
}
void OAIResponseTravelTimeStatistics::setMin(const qint32 &min) {
    this->min = min;
    this->m_min_isSet = true;
}

bool OAIResponseTravelTimeStatistics::is_min_Set() const{
    return m_min_isSet;
}

bool OAIResponseTravelTimeStatistics::is_min_Valid() const{
    return m_min_isValid;
}

qint32 OAIResponseTravelTimeStatistics::getMax() const {
    return max;
}
void OAIResponseTravelTimeStatistics::setMax(const qint32 &max) {
    this->max = max;
    this->m_max_isSet = true;
}

bool OAIResponseTravelTimeStatistics::is_max_Set() const{
    return m_max_isSet;
}

bool OAIResponseTravelTimeStatistics::is_max_Valid() const{
    return m_max_isValid;
}

qint32 OAIResponseTravelTimeStatistics::getMean() const {
    return mean;
}
void OAIResponseTravelTimeStatistics::setMean(const qint32 &mean) {
    this->mean = mean;
    this->m_mean_isSet = true;
}

bool OAIResponseTravelTimeStatistics::is_mean_Set() const{
    return m_mean_isSet;
}

bool OAIResponseTravelTimeStatistics::is_mean_Valid() const{
    return m_mean_isValid;
}

qint32 OAIResponseTravelTimeStatistics::getMedian() const {
    return median;
}
void OAIResponseTravelTimeStatistics::setMedian(const qint32 &median) {
    this->median = median;
    this->m_median_isSet = true;
}

bool OAIResponseTravelTimeStatistics::is_median_Set() const{
    return m_median_isSet;
}

bool OAIResponseTravelTimeStatistics::is_median_Valid() const{
    return m_median_isValid;
}

bool OAIResponseTravelTimeStatistics::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_min_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mean_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_median_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponseTravelTimeStatistics::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_min_isValid && m_max_isValid && m_mean_isValid && m_median_isValid && true;
}

} // namespace OpenAPI
