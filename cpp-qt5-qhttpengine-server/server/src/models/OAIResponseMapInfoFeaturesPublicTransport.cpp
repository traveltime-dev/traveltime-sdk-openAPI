/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponseMapInfoFeaturesPublicTransport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponseMapInfoFeaturesPublicTransport::OAIResponseMapInfoFeaturesPublicTransport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponseMapInfoFeaturesPublicTransport::OAIResponseMapInfoFeaturesPublicTransport() {
    this->initializeModel();
}

OAIResponseMapInfoFeaturesPublicTransport::~OAIResponseMapInfoFeaturesPublicTransport() {}

void OAIResponseMapInfoFeaturesPublicTransport::initializeModel() {

    m_date_start_isSet = false;
    m_date_start_isValid = false;

    m_date_end_isSet = false;
    m_date_end_isValid = false;
}

void OAIResponseMapInfoFeaturesPublicTransport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponseMapInfoFeaturesPublicTransport::fromJsonObject(QJsonObject json) {

    m_date_start_isValid = ::OpenAPI::fromJsonValue(date_start, json[QString("date_start")]);
    m_date_start_isSet = !json[QString("date_start")].isNull() && m_date_start_isValid;

    m_date_end_isValid = ::OpenAPI::fromJsonValue(date_end, json[QString("date_end")]);
    m_date_end_isSet = !json[QString("date_end")].isNull() && m_date_end_isValid;
}

QString OAIResponseMapInfoFeaturesPublicTransport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponseMapInfoFeaturesPublicTransport::asJsonObject() const {
    QJsonObject obj;
    if (m_date_start_isSet) {
        obj.insert(QString("date_start"), ::OpenAPI::toJsonValue(date_start));
    }
    if (m_date_end_isSet) {
        obj.insert(QString("date_end"), ::OpenAPI::toJsonValue(date_end));
    }
    return obj;
}

QDateTime OAIResponseMapInfoFeaturesPublicTransport::getDateStart() const {
    return date_start;
}
void OAIResponseMapInfoFeaturesPublicTransport::setDateStart(const QDateTime &date_start) {
    this->date_start = date_start;
    this->m_date_start_isSet = true;
}

bool OAIResponseMapInfoFeaturesPublicTransport::is_date_start_Set() const{
    return m_date_start_isSet;
}

bool OAIResponseMapInfoFeaturesPublicTransport::is_date_start_Valid() const{
    return m_date_start_isValid;
}

QDateTime OAIResponseMapInfoFeaturesPublicTransport::getDateEnd() const {
    return date_end;
}
void OAIResponseMapInfoFeaturesPublicTransport::setDateEnd(const QDateTime &date_end) {
    this->date_end = date_end;
    this->m_date_end_isSet = true;
}

bool OAIResponseMapInfoFeaturesPublicTransport::is_date_end_Set() const{
    return m_date_end_isSet;
}

bool OAIResponseMapInfoFeaturesPublicTransport::is_date_end_Valid() const{
    return m_date_end_isValid;
}

bool OAIResponseMapInfoFeaturesPublicTransport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_start_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_end_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponseMapInfoFeaturesPublicTransport::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_date_start_isValid && m_date_end_isValid && true;
}

} // namespace OpenAPI
