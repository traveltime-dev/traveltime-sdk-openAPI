/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIResponseTimeFilterPostcodeDistrictsResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIResponseTimeFilterPostcodeDistrictsResult::OAIResponseTimeFilterPostcodeDistrictsResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIResponseTimeFilterPostcodeDistrictsResult::OAIResponseTimeFilterPostcodeDistrictsResult() {
    this->initializeModel();
}

OAIResponseTimeFilterPostcodeDistrictsResult::~OAIResponseTimeFilterPostcodeDistrictsResult() {}

void OAIResponseTimeFilterPostcodeDistrictsResult::initializeModel() {

    m_search_id_isSet = false;
    m_search_id_isValid = false;

    m_districts_isSet = false;
    m_districts_isValid = false;
}

void OAIResponseTimeFilterPostcodeDistrictsResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIResponseTimeFilterPostcodeDistrictsResult::fromJsonObject(QJsonObject json) {

    m_search_id_isValid = ::OpenAPI::fromJsonValue(search_id, json[QString("search_id")]);
    m_search_id_isSet = !json[QString("search_id")].isNull() && m_search_id_isValid;

    m_districts_isValid = ::OpenAPI::fromJsonValue(districts, json[QString("districts")]);
    m_districts_isSet = !json[QString("districts")].isNull() && m_districts_isValid;
}

QString OAIResponseTimeFilterPostcodeDistrictsResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIResponseTimeFilterPostcodeDistrictsResult::asJsonObject() const {
    QJsonObject obj;
    if (m_search_id_isSet) {
        obj.insert(QString("search_id"), ::OpenAPI::toJsonValue(search_id));
    }
    if (districts.size() > 0) {
        obj.insert(QString("districts"), ::OpenAPI::toJsonValue(districts));
    }
    return obj;
}

QString OAIResponseTimeFilterPostcodeDistrictsResult::getSearchId() const {
    return search_id;
}
void OAIResponseTimeFilterPostcodeDistrictsResult::setSearchId(const QString &search_id) {
    this->search_id = search_id;
    this->m_search_id_isSet = true;
}

bool OAIResponseTimeFilterPostcodeDistrictsResult::is_search_id_Set() const{
    return m_search_id_isSet;
}

bool OAIResponseTimeFilterPostcodeDistrictsResult::is_search_id_Valid() const{
    return m_search_id_isValid;
}

QList<OAIResponseTimeFilterPostcodeDistrict> OAIResponseTimeFilterPostcodeDistrictsResult::getDistricts() const {
    return districts;
}
void OAIResponseTimeFilterPostcodeDistrictsResult::setDistricts(const QList<OAIResponseTimeFilterPostcodeDistrict> &districts) {
    this->districts = districts;
    this->m_districts_isSet = true;
}

bool OAIResponseTimeFilterPostcodeDistrictsResult::is_districts_Set() const{
    return m_districts_isSet;
}

bool OAIResponseTimeFilterPostcodeDistrictsResult::is_districts_Valid() const{
    return m_districts_isValid;
}

bool OAIResponseTimeFilterPostcodeDistrictsResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_search_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (districts.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIResponseTimeFilterPostcodeDistrictsResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_search_id_isValid && m_districts_isValid && true;
}

} // namespace OpenAPI
