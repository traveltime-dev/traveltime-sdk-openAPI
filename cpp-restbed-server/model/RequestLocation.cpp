/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "RequestLocation.h"

#include <string>
#include <sstream>
#include <stdexcept>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

RequestLocation::RequestLocation()
{
	m_Id = "";
}

RequestLocation::~RequestLocation()
{
}

std::string RequestLocation::toJsonString(bool prettyJson)
{
	std::stringstream ss;
	write_json(ss, this->toPropertyTree(), prettyJson);
	return ss.str();
}

void RequestLocation::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	this->fromPropertyTree(pt);
}

ptree RequestLocation::toPropertyTree()
{
	ptree pt;
	ptree tmp_node;
	pt.put("id", m_Id);
	if (m_Coords != nullptr) {
		pt.add_child("coords", m_Coords->toPropertyTree());
	}
	return pt;
}

void RequestLocation::fromPropertyTree(ptree const &pt)
{
	ptree tmp_node;
	m_Id = pt.get("id", "");
	if (pt.get_child_optional("coords")) {
		m_Coords = std::make_shared<Coords>();
		m_Coords->fromPropertyTree(pt.get_child("coords"));
	}
}

std::string RequestLocation::getId() const
{
    return m_Id;
}
void RequestLocation::setId(std::string value)
{
	m_Id = value;
}
std::shared_ptr<Coords> RequestLocation::getCoords() const
{
    return m_Coords;
}
void RequestLocation::setCoords(std::shared_ptr<Coords> value)
{
	m_Coords = value;
}

}
}
}
}

