/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ResponseMapInfoFeaturesPublicTransport.h"

#include <string>
#include <sstream>
#include <stdexcept>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ResponseMapInfoFeaturesPublicTransport::ResponseMapInfoFeaturesPublicTransport()
{
	m_Date_start = "";
	m_Date_end = "";
}

ResponseMapInfoFeaturesPublicTransport::~ResponseMapInfoFeaturesPublicTransport()
{
}

std::string ResponseMapInfoFeaturesPublicTransport::toJsonString(bool prettyJson)
{
	std::stringstream ss;
	write_json(ss, this->toPropertyTree(), prettyJson);
	return ss.str();
}

void ResponseMapInfoFeaturesPublicTransport::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	this->fromPropertyTree(pt);
}

ptree ResponseMapInfoFeaturesPublicTransport::toPropertyTree()
{
	ptree pt;
	ptree tmp_node;
	pt.put("date_start", m_Date_start);
	pt.put("date_end", m_Date_end);
	return pt;
}

void ResponseMapInfoFeaturesPublicTransport::fromPropertyTree(ptree const &pt)
{
	ptree tmp_node;
	m_Date_start = pt.get("date_start", "");
	m_Date_end = pt.get("date_end", "");
}

std::string ResponseMapInfoFeaturesPublicTransport::getDateStart() const
{
    return m_Date_start;
}
void ResponseMapInfoFeaturesPublicTransport::setDateStart(std::string value)
{
	m_Date_start = value;
}
std::string ResponseMapInfoFeaturesPublicTransport::getDateEnd() const
{
    return m_Date_end;
}
void ResponseMapInfoFeaturesPublicTransport::setDateEnd(std::string value)
{
	m_Date_end = value;
}

}
}
}
}

