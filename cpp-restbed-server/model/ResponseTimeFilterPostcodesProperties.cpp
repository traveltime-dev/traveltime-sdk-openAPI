/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "ResponseTimeFilterPostcodesProperties.h"

#include <string>
#include <sstream>
#include <stdexcept>
#include <boost/property_tree/ptree.hpp>
#include <boost/property_tree/json_parser.hpp>

using boost::property_tree::ptree;
using boost::property_tree::read_json;
using boost::property_tree::write_json;

namespace org {
namespace openapitools {
namespace server {
namespace model {

ResponseTimeFilterPostcodesProperties::ResponseTimeFilterPostcodesProperties()
{
	m_Travel_time = 0;
	m_Distance = 0;
}

ResponseTimeFilterPostcodesProperties::~ResponseTimeFilterPostcodesProperties()
{
}

std::string ResponseTimeFilterPostcodesProperties::toJsonString(bool prettyJson)
{
	std::stringstream ss;
	write_json(ss, this->toPropertyTree(), prettyJson);
	return ss.str();
}

void ResponseTimeFilterPostcodesProperties::fromJsonString(std::string const& jsonString)
{
	std::stringstream ss(jsonString);
	ptree pt;
	read_json(ss,pt);
	this->fromPropertyTree(pt);
}

ptree ResponseTimeFilterPostcodesProperties::toPropertyTree()
{
	ptree pt;
	ptree tmp_node;
	pt.put("travel_time", m_Travel_time);
	pt.put("distance", m_Distance);
	return pt;
}

void ResponseTimeFilterPostcodesProperties::fromPropertyTree(ptree const &pt)
{
	ptree tmp_node;
	m_Travel_time = pt.get("travel_time", 0);
	m_Distance = pt.get("distance", 0);
}

int32_t ResponseTimeFilterPostcodesProperties::getTravelTime() const
{
    return m_Travel_time;
}
void ResponseTimeFilterPostcodesProperties::setTravelTime(int32_t value)
{
	m_Travel_time = value;
}
int32_t ResponseTimeFilterPostcodesProperties::getDistance() const
{
    return m_Distance;
}
void ResponseTimeFilterPostcodesProperties::setDistance(int32_t value)
{
	m_Distance = value;
}

}
}
}
}

