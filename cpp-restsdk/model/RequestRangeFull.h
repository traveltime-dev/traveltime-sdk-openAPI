/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RequestRangeFull.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_RequestRangeFull_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_RequestRangeFull_H_


#include "../ModelBase.h"


namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  RequestRangeFull
    : public ModelBase
{
public:
    RequestRangeFull();
    virtual ~RequestRangeFull();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// RequestRangeFull members

    /// <summary>
    /// 
    /// </summary>
    bool isEnabled() const;
    bool enabledIsSet() const;
    void unsetEnabled();

    void setEnabled(bool value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getMaxResults() const;
    bool maxResultsIsSet() const;
    void unsetMax_results();

    void setMaxResults(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getWidth() const;
    bool widthIsSet() const;
    void unsetWidth();

    void setWidth(int32_t value);


protected:
    bool m_Enabled;
    bool m_EnabledIsSet;
    int32_t m_Max_results;
    bool m_Max_resultsIsSet;
    int32_t m_Width;
    bool m_WidthIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_RequestRangeFull_H_ */
