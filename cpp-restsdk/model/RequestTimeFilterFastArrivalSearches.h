/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RequestTimeFilterFastArrivalSearches.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_RequestTimeFilterFastArrivalSearches_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_RequestTimeFilterFastArrivalSearches_H_


#include "../ModelBase.h"

#include "RequestTimeFilterFastArrivalManyToOneSearch.h"
#include "RequestTimeFilterFastArrivalOneToManySearch.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  RequestTimeFilterFastArrivalSearches
    : public ModelBase
{
public:
    RequestTimeFilterFastArrivalSearches();
    virtual ~RequestTimeFilterFastArrivalSearches();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// RequestTimeFilterFastArrivalSearches members

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<RequestTimeFilterFastArrivalManyToOneSearch>>& getManyToOne();
    bool manyToOneIsSet() const;
    void unsetMany_to_one();

    void setManyToOne(const std::vector<std::shared_ptr<RequestTimeFilterFastArrivalManyToOneSearch>>& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<RequestTimeFilterFastArrivalOneToManySearch>>& getOneToMany();
    bool oneToManyIsSet() const;
    void unsetOne_to_many();

    void setOneToMany(const std::vector<std::shared_ptr<RequestTimeFilterFastArrivalOneToManySearch>>& value);


protected:
    std::vector<std::shared_ptr<RequestTimeFilterFastArrivalManyToOneSearch>> m_Many_to_one;
    bool m_Many_to_oneIsSet;
    std::vector<std::shared_ptr<RequestTimeFilterFastArrivalOneToManySearch>> m_One_to_many;
    bool m_One_to_manyIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_RequestTimeFilterFastArrivalSearches_H_ */
