/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */



#include "RequestTimeFilterPostcodeSectorsProperty.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {



RequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty()
{
}

RequestTimeFilterPostcodeSectorsProperty::~RequestTimeFilterPostcodeSectorsProperty()
{
}

void RequestTimeFilterPostcodeSectorsProperty::validate()
{
    // TODO: implement validation
}

web::json::value RequestTimeFilterPostcodeSectorsProperty::toJson() const
{
    web::json::value val = web::json::value::object();

    
    if (m_value == eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_TRAVEL_TIME_REACHABLE) val = web::json::value::string(U(travel_time_reachable));
    if (m_value == eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_TRAVEL_TIME_ALL) val = web::json::value::string(U(travel_time_all));
    if (m_value == eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_COVERAGE) val = web::json::value::string(U(coverage));

    return val;
}

bool RequestTimeFilterPostcodeSectorsProperty::fromJson(const web::json::value& val)
{
    auto s = val.as_string();

    
    if (s == utility::conversions::to_string_t(travel_time_reachable)) m_value = eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_TRAVEL_TIME_REACHABLE;
    if (s == utility::conversions::to_string_t(travel_time_all)) m_value = eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_TRAVEL_TIME_ALL;
    if (s == utility::conversions::to_string_t(coverage)) m_value = eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_COVERAGE;
    return true;
}

void RequestTimeFilterPostcodeSectorsProperty::toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix) const
{
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }

    utility::string_t s;

    
    if (m_value == eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_TRAVEL_TIME_REACHABLE) s = utility::conversions::to_string_t(travel_time_reachable);
    if (m_value == eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_TRAVEL_TIME_ALL) s = utility::conversions::to_string_t(travel_time_all);
    if (m_value == eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_COVERAGE) s = utility::conversions::to_string_t(coverage);

    multipart->add(ModelBase::toHttpContent(namePrefix, s));
}

bool RequestTimeFilterPostcodeSectorsProperty::fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& prefix)
{
    bool ok = true;
    utility::string_t namePrefix = prefix;
    if(namePrefix.size() > 0 && namePrefix.substr(namePrefix.size() - 1) != utility::conversions::to_string_t("."))
    {
        namePrefix += utility::conversions::to_string_t(".");
    }
    {
        utility::string_t s;
        ok = ModelBase::fromHttpContent(multipart->getContent(namePrefix), s);
        eRequestTimeFilterPostcodeSectorsProperty v;

        
        if (s == utility::conversions::to_string_t(travel_time_reachable)) v = eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_TRAVEL_TIME_REACHABLE;
        if (s == utility::conversions::to_string_t(travel_time_all)) v = eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_TRAVEL_TIME_ALL;
        if (s == utility::conversions::to_string_t(coverage)) v = eRequestTimeFilterPostcodeSectorsProperty::RequestTimeFilterPostcodeSectorsProperty_COVERAGE;

        setValue(v);
    }
    return ok;
}

RequestTimeFilterPostcodeSectorsProperty::eRequestTimeFilterPostcodeSectorsProperty RequestTimeFilterPostcodeSectorsProperty::getValue() const
{
   return m_value;
}

void RequestTimeFilterPostcodeSectorsProperty::setValue(RequestTimeFilterPostcodeSectorsProperty::eRequestTimeFilterPostcodeSectorsProperty const value)
{
   m_value = value;
}


}
}
}
}


