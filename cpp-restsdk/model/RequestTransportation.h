/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * RequestTransportation.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_RequestTransportation_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_RequestTransportation_H_


#include "../ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  RequestTransportation
    : public ModelBase
{
public:
    RequestTransportation();
    virtual ~RequestTransportation();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// RequestTransportation members

    /// <summary>
    /// 
    /// </summary>
    utility::string_t getType() const;
    bool typeIsSet() const;
    void unsetType();

    void setType(const utility::string_t& value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getPtChangeDelay() const;
    bool ptChangeDelayIsSet() const;
    void unsetPt_change_delay();

    void setPtChangeDelay(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getWalkingTime() const;
    bool walkingTimeIsSet() const;
    void unsetWalking_time();

    void setWalkingTime(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getDrivingTimeToStation() const;
    bool drivingTimeToStationIsSet() const;
    void unsetDriving_time_to_station();

    void setDrivingTimeToStation(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getParkingTime() const;
    bool parkingTimeIsSet() const;
    void unsetParking_time();

    void setParkingTime(int32_t value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getBoardingTime() const;
    bool boardingTimeIsSet() const;
    void unsetBoarding_time();

    void setBoardingTime(int32_t value);


protected:
    utility::string_t m_Type;
    bool m_TypeIsSet;
    int32_t m_Pt_change_delay;
    bool m_Pt_change_delayIsSet;
    int32_t m_Walking_time;
    bool m_Walking_timeIsSet;
    int32_t m_Driving_time_to_station;
    bool m_Driving_time_to_stationIsSet;
    int32_t m_Parking_time;
    bool m_Parking_timeIsSet;
    int32_t m_Boarding_time;
    bool m_Boarding_timeIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_RequestTransportation_H_ */
