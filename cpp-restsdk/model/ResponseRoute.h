/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 5.2.0-SNAPSHOT.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ResponseRoute.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_ResponseRoute_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_ResponseRoute_H_


#include "../ModelBase.h"

#include "ResponseRoutePart.h"
#include <cpprest/details/basic_types.h>
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  ResponseRoute
    : public ModelBase
{
public:
    ResponseRoute();
    virtual ~ResponseRoute();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// ResponseRoute members

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getDepartureTime() const;
    bool departureTimeIsSet() const;
    void unsetDeparture_time();

    void setDepartureTime(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    utility::datetime getArrivalTime() const;
    bool arrivalTimeIsSet() const;
    void unsetArrival_time();

    void setArrivalTime(const utility::datetime& value);

    /// <summary>
    /// 
    /// </summary>
    std::vector<std::shared_ptr<ResponseRoutePart>>& getParts();
    bool partsIsSet() const;
    void unsetParts();

    void setParts(const std::vector<std::shared_ptr<ResponseRoutePart>>& value);


protected:
    utility::datetime m_Departure_time;
    bool m_Departure_timeIsSet;
    utility::datetime m_Arrival_time;
    bool m_Arrival_timeIsSet;
    std::vector<std::shared_ptr<ResponseRoutePart>> m_Parts;
    bool m_PartsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_ResponseRoute_H_ */
