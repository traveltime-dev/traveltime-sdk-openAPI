/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIResponseTimeFilterProperties.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI 
{

void OpenAPIResponseTimeFilterProperties::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (TravelTime.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("travel_time")); WriteJsonValue(Writer, TravelTime.GetValue());	
	}
	if (Distance.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("distance")); WriteJsonValue(Writer, Distance.GetValue());	
	}
	if (DistanceBreakdown.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("distance_breakdown")); WriteJsonValue(Writer, DistanceBreakdown.GetValue());	
	}
	if (Fares.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("fares")); WriteJsonValue(Writer, Fares.GetValue());	
	}
	if (Route.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("route")); WriteJsonValue(Writer, Route.GetValue());	
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIResponseTimeFilterProperties::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("travel_time"), TravelTime);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("distance"), Distance);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("distance_breakdown"), DistanceBreakdown);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("fares"), Fares);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("route"), Route);

	return ParseSuccess;
}

}
