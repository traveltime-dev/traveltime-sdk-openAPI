/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * OpenAPI spec version: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#pragma once

#include "OpenAPIBaseModel.h"
#include "OpenAPIDefaultApi.h"

#include "OpenAPIRequestRoutes.h"
#include "OpenAPIRequestSupportedLocations.h"
#include "OpenAPIRequestTimeFilter.h"
#include "OpenAPIRequestTimeFilterFast.h"
#include "OpenAPIRequestTimeFilterPostcodeDistricts.h"
#include "OpenAPIRequestTimeFilterPostcodeSectors.h"
#include "OpenAPIRequestTimeFilterPostcodes.h"
#include "OpenAPIRequestTimeMap.h"
#include "OpenAPIResponseError.h"
#include "OpenAPIResponseGeocoding.h"
#include "OpenAPIResponseMapInfo.h"
#include "OpenAPIResponseRoutes.h"
#include "OpenAPIResponseSupportedLocations.h"
#include "OpenAPIResponseTimeFilter.h"
#include "OpenAPIResponseTimeFilterFast.h"
#include "OpenAPIResponseTimeFilterPostcodeDistricts.h"
#include "OpenAPIResponseTimeFilterPostcodeSectors.h"
#include "OpenAPIResponseTimeFilterPostcodes.h"
#include "OpenAPIResponseTimeMap.h"

namespace OpenAPI 
{

/* 

*/
class OPENAPI_API OpenAPIDefaultApi::GeocodingReverseSearchRequest : public Request
{
public:
    virtual ~GeocodingReverseSearchRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	double Lat = 0.0;
	double Lng = 0.0;
	TOptional<FString> WithinCountry;
};

class OPENAPI_API OpenAPIDefaultApi::GeocodingReverseSearchResponse : public Response
{
public:
    virtual ~GeocodingReverseSearchResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIResponseGeocoding Content;
};

/* 

*/
class OPENAPI_API OpenAPIDefaultApi::GeocodingSearchRequest : public Request
{
public:
    virtual ~GeocodingSearchRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	FString Query;
	TOptional<double> FocusLat;
	TOptional<double> FocusLng;
	TOptional<FString> WithinCountry;
};

class OPENAPI_API OpenAPIDefaultApi::GeocodingSearchResponse : public Response
{
public:
    virtual ~GeocodingSearchResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIResponseGeocoding Content;
};

/* 

*/
class OPENAPI_API OpenAPIDefaultApi::MapInfoRequest : public Request
{
public:
    virtual ~MapInfoRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
};

class OPENAPI_API OpenAPIDefaultApi::MapInfoResponse : public Response
{
public:
    virtual ~MapInfoResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIResponseMapInfo Content;
};

/* 

*/
class OPENAPI_API OpenAPIDefaultApi::RoutesRequest : public Request
{
public:
    virtual ~RoutesRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	OpenAPIRequestRoutes OpenAPIRequestRoutes;
};

class OPENAPI_API OpenAPIDefaultApi::RoutesResponse : public Response
{
public:
    virtual ~RoutesResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIResponseRoutes Content;
};

/* 

*/
class OPENAPI_API OpenAPIDefaultApi::SupportedLocationsRequest : public Request
{
public:
    virtual ~SupportedLocationsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	OpenAPIRequestSupportedLocations OpenAPIRequestSupportedLocations;
};

class OPENAPI_API OpenAPIDefaultApi::SupportedLocationsResponse : public Response
{
public:
    virtual ~SupportedLocationsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIResponseSupportedLocations Content;
};

/* 

*/
class OPENAPI_API OpenAPIDefaultApi::TimeFilterRequest : public Request
{
public:
    virtual ~TimeFilterRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	OpenAPIRequestTimeFilter OpenAPIRequestTimeFilter;
};

class OPENAPI_API OpenAPIDefaultApi::TimeFilterResponse : public Response
{
public:
    virtual ~TimeFilterResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIResponseTimeFilter Content;
};

/* 

*/
class OPENAPI_API OpenAPIDefaultApi::TimeFilterFastRequest : public Request
{
public:
    virtual ~TimeFilterFastRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	OpenAPIRequestTimeFilterFast OpenAPIRequestTimeFilterFast;
};

class OPENAPI_API OpenAPIDefaultApi::TimeFilterFastResponse : public Response
{
public:
    virtual ~TimeFilterFastResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIResponseTimeFilterFast Content;
};

/* 

*/
class OPENAPI_API OpenAPIDefaultApi::TimeFilterPostcodeDistrictsRequest : public Request
{
public:
    virtual ~TimeFilterPostcodeDistrictsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	OpenAPIRequestTimeFilterPostcodeDistricts OpenAPIRequestTimeFilterPostcodeDistricts;
};

class OPENAPI_API OpenAPIDefaultApi::TimeFilterPostcodeDistrictsResponse : public Response
{
public:
    virtual ~TimeFilterPostcodeDistrictsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIResponseTimeFilterPostcodeDistricts Content;
};

/* 

*/
class OPENAPI_API OpenAPIDefaultApi::TimeFilterPostcodeSectorsRequest : public Request
{
public:
    virtual ~TimeFilterPostcodeSectorsRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	OpenAPIRequestTimeFilterPostcodeSectors OpenAPIRequestTimeFilterPostcodeSectors;
};

class OPENAPI_API OpenAPIDefaultApi::TimeFilterPostcodeSectorsResponse : public Response
{
public:
    virtual ~TimeFilterPostcodeSectorsResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIResponseTimeFilterPostcodeSectors Content;
};

/* 

*/
class OPENAPI_API OpenAPIDefaultApi::TimeFilterPostcodesRequest : public Request
{
public:
    virtual ~TimeFilterPostcodesRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	OpenAPIRequestTimeFilterPostcodes OpenAPIRequestTimeFilterPostcodes;
};

class OPENAPI_API OpenAPIDefaultApi::TimeFilterPostcodesResponse : public Response
{
public:
    virtual ~TimeFilterPostcodesResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIResponseTimeFilterPostcodes Content;
};

/* 

*/
class OPENAPI_API OpenAPIDefaultApi::TimeMapRequest : public Request
{
public:
    virtual ~TimeMapRequest() {}
	void SetupHttpRequest(const FHttpRequestRef& HttpRequest) const final;
	FString ComputePath() const final;
    
	OpenAPIRequestTimeMap OpenAPIRequestTimeMap;
};

class OPENAPI_API OpenAPIDefaultApi::TimeMapResponse : public Response
{
public:
    virtual ~TimeMapResponse() {}
	void SetHttpResponseCode(EHttpResponseCodes::Type InHttpResponseCode) final;
	bool FromJson(const TSharedPtr<FJsonValue>& JsonValue) final;
    
    OpenAPIResponseTimeMap Content;
};

}
