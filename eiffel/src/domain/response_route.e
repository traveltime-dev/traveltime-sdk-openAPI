note
 description:"[
		TravelTime API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: 1.2.3
 	    Contact: support@igeolise.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class RESPONSE_ROUTE 




feature --Access

    departure_time: detachable DATE_TIME 
      
    arrival_time: detachable DATE_TIME 
      
    parts: detachable LIST [RESPONSE_ROUTE_PART] 
      

feature -- Change Element  
 
    set_departure_time (a_name: like departure_time)
        -- Set 'departure_time' with 'a_name'.
      do
        departure_time := a_name
      ensure
        departure_time_set: departure_time = a_name		
      end

    set_arrival_time (a_name: like arrival_time)
        -- Set 'arrival_time' with 'a_name'.
      do
        arrival_time := a_name
      ensure
        arrival_time_set: arrival_time = a_name		
      end

    set_parts (a_name: like parts)
        -- Set 'parts' with 'a_name'.
      do
        parts := a_name
      ensure
        parts_set: parts = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass RESPONSE_ROUTE%N")
        if attached departure_time as l_departure_time then
          Result.append ("%Ndeparture_time:")
          Result.append (l_departure_time.out)
          Result.append ("%N")    
        end  
        if attached arrival_time as l_arrival_time then
          Result.append ("%Narrival_time:")
          Result.append (l_arrival_time.out)
          Result.append ("%N")    
        end  
        if attached parts as l_parts then
          across l_parts as ic loop
            Result.append ("%N parts:")
            Result.append (ic.item.out)
            Result.append ("%N")
          end
        end 
      end
end


