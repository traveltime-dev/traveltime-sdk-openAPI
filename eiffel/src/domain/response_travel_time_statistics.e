note
 description:"[
		TravelTime API
 		No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
  		The version of the OpenAPI document: 1.2.3
 	    Contact: support@igeolise.com

  	NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

 		 Do not edit the class manually.
 	]"
	date: "$Date$"
	revision: "$Revision$"
	EIS:"Eiffel openapi generator", "src=https://openapi-generator.tech", "protocol=uri"
class RESPONSE_TRAVEL_TIME_STATISTICS 




feature --Access

 	min: INTEGER_32 
    	 
 	max: INTEGER_32 
    	 
 	mean: INTEGER_32 
    	 
 	median: INTEGER_32 
    	 

feature -- Change Element  
 
    set_min (a_name: like min)
        -- Set 'min' with 'a_name'.
      do
        min := a_name
      ensure
        min_set: min = a_name		
      end

    set_max (a_name: like max)
        -- Set 'max' with 'a_name'.
      do
        max := a_name
      ensure
        max_set: max = a_name		
      end

    set_mean (a_name: like mean)
        -- Set 'mean' with 'a_name'.
      do
        mean := a_name
      ensure
        mean_set: mean = a_name		
      end

    set_median (a_name: like median)
        -- Set 'median' with 'a_name'.
      do
        median := a_name
      ensure
        median_set: median = a_name		
      end


 feature -- Status Report

    output: STRING
          -- <Precursor>
      do
        create Result.make_empty
        Result.append("%Nclass RESPONSE_TRAVEL_TIME_STATISTICS%N")
        if attached min as l_min then
          Result.append ("%Nmin:")
          Result.append (l_min.out)
          Result.append ("%N")    
        end  
        if attached max as l_max then
          Result.append ("%Nmax:")
          Result.append (l_max.out)
          Result.append ("%N")    
        end  
        if attached mean as l_mean then
          Result.append ("%Nmean:")
          Result.append (l_mean.out)
          Result.append ("%N")    
        end  
        if attached median as l_median then
          Result.append ("%Nmedian:")
          Result.append (l_median.out)
          Result.append ("%N")    
        end  
      end
end


