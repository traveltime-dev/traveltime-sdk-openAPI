/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.2
 * Contact: support@igeolise.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"net/http"

	"github.com/gin-gonic/gin"
)

// Route is the information for every URI.
type Route struct {
	// Name is the name of this Route.
	Name        string
	// Method is the string for the HTTP method. ex) GET, POST etc..
	Method      string
	// Pattern is the pattern of the URI.
	Pattern     string
	// HandlerFunc is the handler function of this route.
	HandlerFunc gin.HandlerFunc
}

// Routes is the list of the generated Route.
type Routes []Route

// NewRouter returns a new router.
func NewRouter() *gin.Engine {
	router := gin.Default()
	for _, route := range routes {
		switch route.Method {
		case http.MethodGet:
			router.GET(route.Pattern, route.HandlerFunc)
		case http.MethodPost:
			router.POST(route.Pattern, route.HandlerFunc)
		case http.MethodPut:
			router.PUT(route.Pattern, route.HandlerFunc)
		case http.MethodDelete:
			router.DELETE(route.Pattern, route.HandlerFunc)
		}
	}

	return router
}

// Index is the index handler.
func Index(c *gin.Context) {
	c.String(http.StatusOK, "Hello World!")
}

var routes = Routes{
	{
		"Index",
		http.MethodGet,
		"/",
		Index,
	},

	{
		"GeocodingReverseSearch",
		http.MethodGet,
		"/v4/geocoding/reverse",
		GeocodingReverseSearch,
	},

	{
		"GeocodingSearch",
		http.MethodGet,
		"/v4/geocoding/search",
		GeocodingSearch,
	},

	{
		"MapInfo",
		http.MethodGet,
		"/v4/map-info",
		MapInfo,
	},

	{
		"Routes",
		http.MethodPost,
		"/v4/routes",
		Routes,
	},

	{
		"SupportedLocations",
		http.MethodPost,
		"/v4/supported-locations",
		SupportedLocations,
	},

	{
		"TimeFilter",
		http.MethodPost,
		"/v4/time-filter",
		TimeFilter,
	},

	{
		"TimeFilterFast",
		http.MethodPost,
		"/v4/time-filter/fast",
		TimeFilterFast,
	},

	{
		"TimeFilterPostcodeDistricts",
		http.MethodPost,
		"/v4/time-filter/postcode-districts",
		TimeFilterPostcodeDistricts,
	},

	{
		"TimeFilterPostcodeSectors",
		http.MethodPost,
		"/v4/time-filter/postcode-sectors",
		TimeFilterPostcodeSectors,
	},

	{
		"TimeFilterPostcodes",
		http.MethodPost,
		"/v4/time-filter/postcodes",
		TimeFilterPostcodes,
	},

	{
		"TimeMap",
		http.MethodPost,
		"/v4/time-map",
		TimeMap,
	},
}
