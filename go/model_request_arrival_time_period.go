/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.3
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// RequestArrivalTimePeriod the model 'RequestArrivalTimePeriod'
type RequestArrivalTimePeriod string

// List of RequestArrivalTimePeriod
const (
	WEEKDAY_MORNING RequestArrivalTimePeriod = "weekday_morning"
)

var allowedRequestArrivalTimePeriodEnumValues = []RequestArrivalTimePeriod{
	"weekday_morning",
}

func (v *RequestArrivalTimePeriod) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RequestArrivalTimePeriod(value)
	for _, existing := range allowedRequestArrivalTimePeriodEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RequestArrivalTimePeriod", value)
}

// NewRequestArrivalTimePeriodFromValue returns a pointer to a valid RequestArrivalTimePeriod
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRequestArrivalTimePeriodFromValue(v string) (*RequestArrivalTimePeriod, error) {
	ev := RequestArrivalTimePeriod(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RequestArrivalTimePeriod: valid values are %v", v, allowedRequestArrivalTimePeriodEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RequestArrivalTimePeriod) IsValid() bool {
	for _, existing := range allowedRequestArrivalTimePeriodEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RequestArrivalTimePeriod value
func (v RequestArrivalTimePeriod) Ptr() *RequestArrivalTimePeriod {
	return &v
}

type NullableRequestArrivalTimePeriod struct {
	value *RequestArrivalTimePeriod
	isSet bool
}

func (v NullableRequestArrivalTimePeriod) Get() *RequestArrivalTimePeriod {
	return v.value
}

func (v *NullableRequestArrivalTimePeriod) Set(val *RequestArrivalTimePeriod) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestArrivalTimePeriod) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestArrivalTimePeriod) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestArrivalTimePeriod(val *RequestArrivalTimePeriod) *NullableRequestArrivalTimePeriod {
	return &NullableRequestArrivalTimePeriod{value: val, isSet: true}
}

func (v NullableRequestArrivalTimePeriod) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestArrivalTimePeriod) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

