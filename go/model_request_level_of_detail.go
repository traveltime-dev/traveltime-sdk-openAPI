/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.3
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RequestLevelOfDetail struct for RequestLevelOfDetail
type RequestLevelOfDetail struct {
	ScaleType string `json:"scale_type"`
	Level string `json:"level"`
}

// NewRequestLevelOfDetail instantiates a new RequestLevelOfDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestLevelOfDetail(scaleType string, level string) *RequestLevelOfDetail {
	this := RequestLevelOfDetail{}
	this.ScaleType = scaleType
	this.Level = level
	return &this
}

// NewRequestLevelOfDetailWithDefaults instantiates a new RequestLevelOfDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestLevelOfDetailWithDefaults() *RequestLevelOfDetail {
	this := RequestLevelOfDetail{}
	return &this
}

// GetScaleType returns the ScaleType field value
func (o *RequestLevelOfDetail) GetScaleType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScaleType
}

// GetScaleTypeOk returns a tuple with the ScaleType field value
// and a boolean to check if the value has been set.
func (o *RequestLevelOfDetail) GetScaleTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ScaleType, true
}

// SetScaleType sets field value
func (o *RequestLevelOfDetail) SetScaleType(v string) {
	o.ScaleType = v
}

// GetLevel returns the Level field value
func (o *RequestLevelOfDetail) GetLevel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Level
}

// GetLevelOk returns a tuple with the Level field value
// and a boolean to check if the value has been set.
func (o *RequestLevelOfDetail) GetLevelOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Level, true
}

// SetLevel sets field value
func (o *RequestLevelOfDetail) SetLevel(v string) {
	o.Level = v
}

func (o RequestLevelOfDetail) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["scale_type"] = o.ScaleType
	}
	if true {
		toSerialize["level"] = o.Level
	}
	return json.Marshal(toSerialize)
}

type NullableRequestLevelOfDetail struct {
	value *RequestLevelOfDetail
	isSet bool
}

func (v NullableRequestLevelOfDetail) Get() *RequestLevelOfDetail {
	return v.value
}

func (v *NullableRequestLevelOfDetail) Set(val *RequestLevelOfDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestLevelOfDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestLevelOfDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestLevelOfDetail(val *RequestLevelOfDetail) *NullableRequestLevelOfDetail {
	return &NullableRequestLevelOfDetail{value: val, isSet: true}
}

func (v NullableRequestLevelOfDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestLevelOfDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


