/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.3
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RequestLocation struct for RequestLocation
type RequestLocation struct {
	Id string `json:"id"`
	Coords Coords `json:"coords"`
}

// NewRequestLocation instantiates a new RequestLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestLocation(id string, coords Coords) *RequestLocation {
	this := RequestLocation{}
	this.Id = id
	this.Coords = coords
	return &this
}

// NewRequestLocationWithDefaults instantiates a new RequestLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestLocationWithDefaults() *RequestLocation {
	this := RequestLocation{}
	return &this
}

// GetId returns the Id field value
func (o *RequestLocation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RequestLocation) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RequestLocation) SetId(v string) {
	o.Id = v
}

// GetCoords returns the Coords field value
func (o *RequestLocation) GetCoords() Coords {
	if o == nil {
		var ret Coords
		return ret
	}

	return o.Coords
}

// GetCoordsOk returns a tuple with the Coords field value
// and a boolean to check if the value has been set.
func (o *RequestLocation) GetCoordsOk() (*Coords, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Coords, true
}

// SetCoords sets field value
func (o *RequestLocation) SetCoords(v Coords) {
	o.Coords = v
}

func (o RequestLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["coords"] = o.Coords
	}
	return json.Marshal(toSerialize)
}

type NullableRequestLocation struct {
	value *RequestLocation
	isSet bool
}

func (v NullableRequestLocation) Get() *RequestLocation {
	return v.value
}

func (v *NullableRequestLocation) Set(val *RequestLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestLocation(val *RequestLocation) *NullableRequestLocation {
	return &NullableRequestLocation{value: val, isSet: true}
}

func (v NullableRequestLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


