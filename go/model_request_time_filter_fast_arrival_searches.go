/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.2
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RequestTimeFilterFastArrivalSearches struct for RequestTimeFilterFastArrivalSearches
type RequestTimeFilterFastArrivalSearches struct {
	ManyToOne *[]RequestTimeFilterFastArrivalManyToOneSearch `json:"many_to_one,omitempty"`
	OneToMany *[]RequestTimeFilterFastArrivalOneToManySearch `json:"one_to_many,omitempty"`
}

// NewRequestTimeFilterFastArrivalSearches instantiates a new RequestTimeFilterFastArrivalSearches object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestTimeFilterFastArrivalSearches() *RequestTimeFilterFastArrivalSearches {
	this := RequestTimeFilterFastArrivalSearches{}
	return &this
}

// NewRequestTimeFilterFastArrivalSearchesWithDefaults instantiates a new RequestTimeFilterFastArrivalSearches object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestTimeFilterFastArrivalSearchesWithDefaults() *RequestTimeFilterFastArrivalSearches {
	this := RequestTimeFilterFastArrivalSearches{}
	return &this
}

// GetManyToOne returns the ManyToOne field value if set, zero value otherwise.
func (o *RequestTimeFilterFastArrivalSearches) GetManyToOne() []RequestTimeFilterFastArrivalManyToOneSearch {
	if o == nil || o.ManyToOne == nil {
		var ret []RequestTimeFilterFastArrivalManyToOneSearch
		return ret
	}
	return *o.ManyToOne
}

// GetManyToOneOk returns a tuple with the ManyToOne field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTimeFilterFastArrivalSearches) GetManyToOneOk() (*[]RequestTimeFilterFastArrivalManyToOneSearch, bool) {
	if o == nil || o.ManyToOne == nil {
		return nil, false
	}
	return o.ManyToOne, true
}

// HasManyToOne returns a boolean if a field has been set.
func (o *RequestTimeFilterFastArrivalSearches) HasManyToOne() bool {
	if o != nil && o.ManyToOne != nil {
		return true
	}

	return false
}

// SetManyToOne gets a reference to the given []RequestTimeFilterFastArrivalManyToOneSearch and assigns it to the ManyToOne field.
func (o *RequestTimeFilterFastArrivalSearches) SetManyToOne(v []RequestTimeFilterFastArrivalManyToOneSearch) {
	o.ManyToOne = &v
}

// GetOneToMany returns the OneToMany field value if set, zero value otherwise.
func (o *RequestTimeFilterFastArrivalSearches) GetOneToMany() []RequestTimeFilterFastArrivalOneToManySearch {
	if o == nil || o.OneToMany == nil {
		var ret []RequestTimeFilterFastArrivalOneToManySearch
		return ret
	}
	return *o.OneToMany
}

// GetOneToManyOk returns a tuple with the OneToMany field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTimeFilterFastArrivalSearches) GetOneToManyOk() (*[]RequestTimeFilterFastArrivalOneToManySearch, bool) {
	if o == nil || o.OneToMany == nil {
		return nil, false
	}
	return o.OneToMany, true
}

// HasOneToMany returns a boolean if a field has been set.
func (o *RequestTimeFilterFastArrivalSearches) HasOneToMany() bool {
	if o != nil && o.OneToMany != nil {
		return true
	}

	return false
}

// SetOneToMany gets a reference to the given []RequestTimeFilterFastArrivalOneToManySearch and assigns it to the OneToMany field.
func (o *RequestTimeFilterFastArrivalSearches) SetOneToMany(v []RequestTimeFilterFastArrivalOneToManySearch) {
	o.OneToMany = &v
}

func (o RequestTimeFilterFastArrivalSearches) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ManyToOne != nil {
		toSerialize["many_to_one"] = o.ManyToOne
	}
	if o.OneToMany != nil {
		toSerialize["one_to_many"] = o.OneToMany
	}
	return json.Marshal(toSerialize)
}

type NullableRequestTimeFilterFastArrivalSearches struct {
	value *RequestTimeFilterFastArrivalSearches
	isSet bool
}

func (v NullableRequestTimeFilterFastArrivalSearches) Get() *RequestTimeFilterFastArrivalSearches {
	return v.value
}

func (v *NullableRequestTimeFilterFastArrivalSearches) Set(val *RequestTimeFilterFastArrivalSearches) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestTimeFilterFastArrivalSearches) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestTimeFilterFastArrivalSearches) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestTimeFilterFastArrivalSearches(val *RequestTimeFilterFastArrivalSearches) *NullableRequestTimeFilterFastArrivalSearches {
	return &NullableRequestTimeFilterFastArrivalSearches{value: val, isSet: true}
}

func (v NullableRequestTimeFilterFastArrivalSearches) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestTimeFilterFastArrivalSearches) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


