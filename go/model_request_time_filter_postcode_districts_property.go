/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.2
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// RequestTimeFilterPostcodeDistrictsProperty the model 'RequestTimeFilterPostcodeDistrictsProperty'
type RequestTimeFilterPostcodeDistrictsProperty string

// List of RequestTimeFilterPostcodeDistrictsProperty
const (
	TRAVEL_TIME_REACHABLE RequestTimeFilterPostcodeDistrictsProperty = "travel_time_reachable"
	TRAVEL_TIME_ALL RequestTimeFilterPostcodeDistrictsProperty = "travel_time_all"
	COVERAGE RequestTimeFilterPostcodeDistrictsProperty = "coverage"
)

var allowedRequestTimeFilterPostcodeDistrictsPropertyEnumValues = []RequestTimeFilterPostcodeDistrictsProperty{
	"travel_time_reachable",
	"travel_time_all",
	"coverage",
}

func (v *RequestTimeFilterPostcodeDistrictsProperty) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RequestTimeFilterPostcodeDistrictsProperty(value)
	for _, existing := range allowedRequestTimeFilterPostcodeDistrictsPropertyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RequestTimeFilterPostcodeDistrictsProperty", value)
}

// NewRequestTimeFilterPostcodeDistrictsPropertyFromValue returns a pointer to a valid RequestTimeFilterPostcodeDistrictsProperty
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRequestTimeFilterPostcodeDistrictsPropertyFromValue(v string) (*RequestTimeFilterPostcodeDistrictsProperty, error) {
	ev := RequestTimeFilterPostcodeDistrictsProperty(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RequestTimeFilterPostcodeDistrictsProperty: valid values are %v", v, allowedRequestTimeFilterPostcodeDistrictsPropertyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RequestTimeFilterPostcodeDistrictsProperty) IsValid() bool {
	for _, existing := range allowedRequestTimeFilterPostcodeDistrictsPropertyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RequestTimeFilterPostcodeDistrictsProperty value
func (v RequestTimeFilterPostcodeDistrictsProperty) Ptr() *RequestTimeFilterPostcodeDistrictsProperty {
	return &v
}

type NullableRequestTimeFilterPostcodeDistrictsProperty struct {
	value *RequestTimeFilterPostcodeDistrictsProperty
	isSet bool
}

func (v NullableRequestTimeFilterPostcodeDistrictsProperty) Get() *RequestTimeFilterPostcodeDistrictsProperty {
	return v.value
}

func (v *NullableRequestTimeFilterPostcodeDistrictsProperty) Set(val *RequestTimeFilterPostcodeDistrictsProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestTimeFilterPostcodeDistrictsProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestTimeFilterPostcodeDistrictsProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestTimeFilterPostcodeDistrictsProperty(val *RequestTimeFilterPostcodeDistrictsProperty) *NullableRequestTimeFilterPostcodeDistrictsProperty {
	return &NullableRequestTimeFilterPostcodeDistrictsProperty{value: val, isSet: true}
}

func (v NullableRequestTimeFilterPostcodeDistrictsProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestTimeFilterPostcodeDistrictsProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

