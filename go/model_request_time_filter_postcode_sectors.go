/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.3
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RequestTimeFilterPostcodeSectors struct for RequestTimeFilterPostcodeSectors
type RequestTimeFilterPostcodeSectors struct {
	DepartureSearches *[]RequestTimeFilterPostcodeSectorsDepartureSearch `json:"departure_searches,omitempty"`
	ArrivalSearches *[]RequestTimeFilterPostcodeSectorsArrivalSearch `json:"arrival_searches,omitempty"`
}

// NewRequestTimeFilterPostcodeSectors instantiates a new RequestTimeFilterPostcodeSectors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestTimeFilterPostcodeSectors() *RequestTimeFilterPostcodeSectors {
	this := RequestTimeFilterPostcodeSectors{}
	return &this
}

// NewRequestTimeFilterPostcodeSectorsWithDefaults instantiates a new RequestTimeFilterPostcodeSectors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestTimeFilterPostcodeSectorsWithDefaults() *RequestTimeFilterPostcodeSectors {
	this := RequestTimeFilterPostcodeSectors{}
	return &this
}

// GetDepartureSearches returns the DepartureSearches field value if set, zero value otherwise.
func (o *RequestTimeFilterPostcodeSectors) GetDepartureSearches() []RequestTimeFilterPostcodeSectorsDepartureSearch {
	if o == nil || o.DepartureSearches == nil {
		var ret []RequestTimeFilterPostcodeSectorsDepartureSearch
		return ret
	}
	return *o.DepartureSearches
}

// GetDepartureSearchesOk returns a tuple with the DepartureSearches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTimeFilterPostcodeSectors) GetDepartureSearchesOk() (*[]RequestTimeFilterPostcodeSectorsDepartureSearch, bool) {
	if o == nil || o.DepartureSearches == nil {
		return nil, false
	}
	return o.DepartureSearches, true
}

// HasDepartureSearches returns a boolean if a field has been set.
func (o *RequestTimeFilterPostcodeSectors) HasDepartureSearches() bool {
	if o != nil && o.DepartureSearches != nil {
		return true
	}

	return false
}

// SetDepartureSearches gets a reference to the given []RequestTimeFilterPostcodeSectorsDepartureSearch and assigns it to the DepartureSearches field.
func (o *RequestTimeFilterPostcodeSectors) SetDepartureSearches(v []RequestTimeFilterPostcodeSectorsDepartureSearch) {
	o.DepartureSearches = &v
}

// GetArrivalSearches returns the ArrivalSearches field value if set, zero value otherwise.
func (o *RequestTimeFilterPostcodeSectors) GetArrivalSearches() []RequestTimeFilterPostcodeSectorsArrivalSearch {
	if o == nil || o.ArrivalSearches == nil {
		var ret []RequestTimeFilterPostcodeSectorsArrivalSearch
		return ret
	}
	return *o.ArrivalSearches
}

// GetArrivalSearchesOk returns a tuple with the ArrivalSearches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTimeFilterPostcodeSectors) GetArrivalSearchesOk() (*[]RequestTimeFilterPostcodeSectorsArrivalSearch, bool) {
	if o == nil || o.ArrivalSearches == nil {
		return nil, false
	}
	return o.ArrivalSearches, true
}

// HasArrivalSearches returns a boolean if a field has been set.
func (o *RequestTimeFilterPostcodeSectors) HasArrivalSearches() bool {
	if o != nil && o.ArrivalSearches != nil {
		return true
	}

	return false
}

// SetArrivalSearches gets a reference to the given []RequestTimeFilterPostcodeSectorsArrivalSearch and assigns it to the ArrivalSearches field.
func (o *RequestTimeFilterPostcodeSectors) SetArrivalSearches(v []RequestTimeFilterPostcodeSectorsArrivalSearch) {
	o.ArrivalSearches = &v
}

func (o RequestTimeFilterPostcodeSectors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DepartureSearches != nil {
		toSerialize["departure_searches"] = o.DepartureSearches
	}
	if o.ArrivalSearches != nil {
		toSerialize["arrival_searches"] = o.ArrivalSearches
	}
	return json.Marshal(toSerialize)
}

type NullableRequestTimeFilterPostcodeSectors struct {
	value *RequestTimeFilterPostcodeSectors
	isSet bool
}

func (v NullableRequestTimeFilterPostcodeSectors) Get() *RequestTimeFilterPostcodeSectors {
	return v.value
}

func (v *NullableRequestTimeFilterPostcodeSectors) Set(val *RequestTimeFilterPostcodeSectors) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestTimeFilterPostcodeSectors) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestTimeFilterPostcodeSectors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestTimeFilterPostcodeSectors(val *RequestTimeFilterPostcodeSectors) *NullableRequestTimeFilterPostcodeSectors {
	return &NullableRequestTimeFilterPostcodeSectors{value: val, isSet: true}
}

func (v NullableRequestTimeFilterPostcodeSectors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestTimeFilterPostcodeSectors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


