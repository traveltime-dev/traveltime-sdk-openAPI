/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.2
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RequestTimeFilterPostcodes struct for RequestTimeFilterPostcodes
type RequestTimeFilterPostcodes struct {
	DepartureSearches *[]RequestTimeFilterPostcodesDepartureSearch `json:"departure_searches,omitempty"`
	ArrivalSearches *[]RequestTimeFilterPostcodesArrivalSearch `json:"arrival_searches,omitempty"`
}

// NewRequestTimeFilterPostcodes instantiates a new RequestTimeFilterPostcodes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestTimeFilterPostcodes() *RequestTimeFilterPostcodes {
	this := RequestTimeFilterPostcodes{}
	return &this
}

// NewRequestTimeFilterPostcodesWithDefaults instantiates a new RequestTimeFilterPostcodes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestTimeFilterPostcodesWithDefaults() *RequestTimeFilterPostcodes {
	this := RequestTimeFilterPostcodes{}
	return &this
}

// GetDepartureSearches returns the DepartureSearches field value if set, zero value otherwise.
func (o *RequestTimeFilterPostcodes) GetDepartureSearches() []RequestTimeFilterPostcodesDepartureSearch {
	if o == nil || o.DepartureSearches == nil {
		var ret []RequestTimeFilterPostcodesDepartureSearch
		return ret
	}
	return *o.DepartureSearches
}

// GetDepartureSearchesOk returns a tuple with the DepartureSearches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTimeFilterPostcodes) GetDepartureSearchesOk() (*[]RequestTimeFilterPostcodesDepartureSearch, bool) {
	if o == nil || o.DepartureSearches == nil {
		return nil, false
	}
	return o.DepartureSearches, true
}

// HasDepartureSearches returns a boolean if a field has been set.
func (o *RequestTimeFilterPostcodes) HasDepartureSearches() bool {
	if o != nil && o.DepartureSearches != nil {
		return true
	}

	return false
}

// SetDepartureSearches gets a reference to the given []RequestTimeFilterPostcodesDepartureSearch and assigns it to the DepartureSearches field.
func (o *RequestTimeFilterPostcodes) SetDepartureSearches(v []RequestTimeFilterPostcodesDepartureSearch) {
	o.DepartureSearches = &v
}

// GetArrivalSearches returns the ArrivalSearches field value if set, zero value otherwise.
func (o *RequestTimeFilterPostcodes) GetArrivalSearches() []RequestTimeFilterPostcodesArrivalSearch {
	if o == nil || o.ArrivalSearches == nil {
		var ret []RequestTimeFilterPostcodesArrivalSearch
		return ret
	}
	return *o.ArrivalSearches
}

// GetArrivalSearchesOk returns a tuple with the ArrivalSearches field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTimeFilterPostcodes) GetArrivalSearchesOk() (*[]RequestTimeFilterPostcodesArrivalSearch, bool) {
	if o == nil || o.ArrivalSearches == nil {
		return nil, false
	}
	return o.ArrivalSearches, true
}

// HasArrivalSearches returns a boolean if a field has been set.
func (o *RequestTimeFilterPostcodes) HasArrivalSearches() bool {
	if o != nil && o.ArrivalSearches != nil {
		return true
	}

	return false
}

// SetArrivalSearches gets a reference to the given []RequestTimeFilterPostcodesArrivalSearch and assigns it to the ArrivalSearches field.
func (o *RequestTimeFilterPostcodes) SetArrivalSearches(v []RequestTimeFilterPostcodesArrivalSearch) {
	o.ArrivalSearches = &v
}

func (o RequestTimeFilterPostcodes) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DepartureSearches != nil {
		toSerialize["departure_searches"] = o.DepartureSearches
	}
	if o.ArrivalSearches != nil {
		toSerialize["arrival_searches"] = o.ArrivalSearches
	}
	return json.Marshal(toSerialize)
}

type NullableRequestTimeFilterPostcodes struct {
	value *RequestTimeFilterPostcodes
	isSet bool
}

func (v NullableRequestTimeFilterPostcodes) Get() *RequestTimeFilterPostcodes {
	return v.value
}

func (v *NullableRequestTimeFilterPostcodes) Set(val *RequestTimeFilterPostcodes) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestTimeFilterPostcodes) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestTimeFilterPostcodes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestTimeFilterPostcodes(val *RequestTimeFilterPostcodes) *NullableRequestTimeFilterPostcodes {
	return &NullableRequestTimeFilterPostcodes{value: val, isSet: true}
}

func (v NullableRequestTimeFilterPostcodes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestTimeFilterPostcodes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


