/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.2
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// RequestTimeMapProperty the model 'RequestTimeMapProperty'
type RequestTimeMapProperty string

// List of RequestTimeMapProperty
const (
	IS_ONLY_WALKING RequestTimeMapProperty = "is_only_walking"
)

var allowedRequestTimeMapPropertyEnumValues = []RequestTimeMapProperty{
	"is_only_walking",
}

func (v *RequestTimeMapProperty) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RequestTimeMapProperty(value)
	for _, existing := range allowedRequestTimeMapPropertyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RequestTimeMapProperty", value)
}

// NewRequestTimeMapPropertyFromValue returns a pointer to a valid RequestTimeMapProperty
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRequestTimeMapPropertyFromValue(v string) (*RequestTimeMapProperty, error) {
	ev := RequestTimeMapProperty(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RequestTimeMapProperty: valid values are %v", v, allowedRequestTimeMapPropertyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RequestTimeMapProperty) IsValid() bool {
	for _, existing := range allowedRequestTimeMapPropertyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RequestTimeMapProperty value
func (v RequestTimeMapProperty) Ptr() *RequestTimeMapProperty {
	return &v
}

type NullableRequestTimeMapProperty struct {
	value *RequestTimeMapProperty
	isSet bool
}

func (v NullableRequestTimeMapProperty) Get() *RequestTimeMapProperty {
	return v.value
}

func (v *NullableRequestTimeMapProperty) Set(val *RequestTimeMapProperty) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestTimeMapProperty) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestTimeMapProperty) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestTimeMapProperty(val *RequestTimeMapProperty) *NullableRequestTimeMapProperty {
	return &NullableRequestTimeMapProperty{value: val, isSet: true}
}

func (v NullableRequestTimeMapProperty) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestTimeMapProperty) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

