/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.3
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RequestTransportation struct for RequestTransportation
type RequestTransportation struct {
	Type string `json:"type"`
	DisableBorderCrossing *bool `json:"disable_border_crossing,omitempty"`
	PtChangeDelay *int32 `json:"pt_change_delay,omitempty"`
	WalkingTime *int32 `json:"walking_time,omitempty"`
	DrivingTimeToStation *int32 `json:"driving_time_to_station,omitempty"`
	CyclingTimeToStation *int32 `json:"cycling_time_to_station,omitempty"`
	ParkingTime *int32 `json:"parking_time,omitempty"`
	BoardingTime *int32 `json:"boarding_time,omitempty"`
}

// NewRequestTransportation instantiates a new RequestTransportation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRequestTransportation(type_ string) *RequestTransportation {
	this := RequestTransportation{}
	this.Type = type_
	return &this
}

// NewRequestTransportationWithDefaults instantiates a new RequestTransportation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRequestTransportationWithDefaults() *RequestTransportation {
	this := RequestTransportation{}
	return &this
}

// GetType returns the Type field value
func (o *RequestTransportation) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *RequestTransportation) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *RequestTransportation) SetType(v string) {
	o.Type = v
}

// GetDisableBorderCrossing returns the DisableBorderCrossing field value if set, zero value otherwise.
func (o *RequestTransportation) GetDisableBorderCrossing() bool {
	if o == nil || o.DisableBorderCrossing == nil {
		var ret bool
		return ret
	}
	return *o.DisableBorderCrossing
}

// GetDisableBorderCrossingOk returns a tuple with the DisableBorderCrossing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTransportation) GetDisableBorderCrossingOk() (*bool, bool) {
	if o == nil || o.DisableBorderCrossing == nil {
		return nil, false
	}
	return o.DisableBorderCrossing, true
}

// HasDisableBorderCrossing returns a boolean if a field has been set.
func (o *RequestTransportation) HasDisableBorderCrossing() bool {
	if o != nil && o.DisableBorderCrossing != nil {
		return true
	}

	return false
}

// SetDisableBorderCrossing gets a reference to the given bool and assigns it to the DisableBorderCrossing field.
func (o *RequestTransportation) SetDisableBorderCrossing(v bool) {
	o.DisableBorderCrossing = &v
}

// GetPtChangeDelay returns the PtChangeDelay field value if set, zero value otherwise.
func (o *RequestTransportation) GetPtChangeDelay() int32 {
	if o == nil || o.PtChangeDelay == nil {
		var ret int32
		return ret
	}
	return *o.PtChangeDelay
}

// GetPtChangeDelayOk returns a tuple with the PtChangeDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTransportation) GetPtChangeDelayOk() (*int32, bool) {
	if o == nil || o.PtChangeDelay == nil {
		return nil, false
	}
	return o.PtChangeDelay, true
}

// HasPtChangeDelay returns a boolean if a field has been set.
func (o *RequestTransportation) HasPtChangeDelay() bool {
	if o != nil && o.PtChangeDelay != nil {
		return true
	}

	return false
}

// SetPtChangeDelay gets a reference to the given int32 and assigns it to the PtChangeDelay field.
func (o *RequestTransportation) SetPtChangeDelay(v int32) {
	o.PtChangeDelay = &v
}

// GetWalkingTime returns the WalkingTime field value if set, zero value otherwise.
func (o *RequestTransportation) GetWalkingTime() int32 {
	if o == nil || o.WalkingTime == nil {
		var ret int32
		return ret
	}
	return *o.WalkingTime
}

// GetWalkingTimeOk returns a tuple with the WalkingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTransportation) GetWalkingTimeOk() (*int32, bool) {
	if o == nil || o.WalkingTime == nil {
		return nil, false
	}
	return o.WalkingTime, true
}

// HasWalkingTime returns a boolean if a field has been set.
func (o *RequestTransportation) HasWalkingTime() bool {
	if o != nil && o.WalkingTime != nil {
		return true
	}

	return false
}

// SetWalkingTime gets a reference to the given int32 and assigns it to the WalkingTime field.
func (o *RequestTransportation) SetWalkingTime(v int32) {
	o.WalkingTime = &v
}

// GetDrivingTimeToStation returns the DrivingTimeToStation field value if set, zero value otherwise.
func (o *RequestTransportation) GetDrivingTimeToStation() int32 {
	if o == nil || o.DrivingTimeToStation == nil {
		var ret int32
		return ret
	}
	return *o.DrivingTimeToStation
}

// GetDrivingTimeToStationOk returns a tuple with the DrivingTimeToStation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTransportation) GetDrivingTimeToStationOk() (*int32, bool) {
	if o == nil || o.DrivingTimeToStation == nil {
		return nil, false
	}
	return o.DrivingTimeToStation, true
}

// HasDrivingTimeToStation returns a boolean if a field has been set.
func (o *RequestTransportation) HasDrivingTimeToStation() bool {
	if o != nil && o.DrivingTimeToStation != nil {
		return true
	}

	return false
}

// SetDrivingTimeToStation gets a reference to the given int32 and assigns it to the DrivingTimeToStation field.
func (o *RequestTransportation) SetDrivingTimeToStation(v int32) {
	o.DrivingTimeToStation = &v
}

// GetCyclingTimeToStation returns the CyclingTimeToStation field value if set, zero value otherwise.
func (o *RequestTransportation) GetCyclingTimeToStation() int32 {
	if o == nil || o.CyclingTimeToStation == nil {
		var ret int32
		return ret
	}
	return *o.CyclingTimeToStation
}

// GetCyclingTimeToStationOk returns a tuple with the CyclingTimeToStation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTransportation) GetCyclingTimeToStationOk() (*int32, bool) {
	if o == nil || o.CyclingTimeToStation == nil {
		return nil, false
	}
	return o.CyclingTimeToStation, true
}

// HasCyclingTimeToStation returns a boolean if a field has been set.
func (o *RequestTransportation) HasCyclingTimeToStation() bool {
	if o != nil && o.CyclingTimeToStation != nil {
		return true
	}

	return false
}

// SetCyclingTimeToStation gets a reference to the given int32 and assigns it to the CyclingTimeToStation field.
func (o *RequestTransportation) SetCyclingTimeToStation(v int32) {
	o.CyclingTimeToStation = &v
}

// GetParkingTime returns the ParkingTime field value if set, zero value otherwise.
func (o *RequestTransportation) GetParkingTime() int32 {
	if o == nil || o.ParkingTime == nil {
		var ret int32
		return ret
	}
	return *o.ParkingTime
}

// GetParkingTimeOk returns a tuple with the ParkingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTransportation) GetParkingTimeOk() (*int32, bool) {
	if o == nil || o.ParkingTime == nil {
		return nil, false
	}
	return o.ParkingTime, true
}

// HasParkingTime returns a boolean if a field has been set.
func (o *RequestTransportation) HasParkingTime() bool {
	if o != nil && o.ParkingTime != nil {
		return true
	}

	return false
}

// SetParkingTime gets a reference to the given int32 and assigns it to the ParkingTime field.
func (o *RequestTransportation) SetParkingTime(v int32) {
	o.ParkingTime = &v
}

// GetBoardingTime returns the BoardingTime field value if set, zero value otherwise.
func (o *RequestTransportation) GetBoardingTime() int32 {
	if o == nil || o.BoardingTime == nil {
		var ret int32
		return ret
	}
	return *o.BoardingTime
}

// GetBoardingTimeOk returns a tuple with the BoardingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RequestTransportation) GetBoardingTimeOk() (*int32, bool) {
	if o == nil || o.BoardingTime == nil {
		return nil, false
	}
	return o.BoardingTime, true
}

// HasBoardingTime returns a boolean if a field has been set.
func (o *RequestTransportation) HasBoardingTime() bool {
	if o != nil && o.BoardingTime != nil {
		return true
	}

	return false
}

// SetBoardingTime gets a reference to the given int32 and assigns it to the BoardingTime field.
func (o *RequestTransportation) SetBoardingTime(v int32) {
	o.BoardingTime = &v
}

func (o RequestTransportation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if o.DisableBorderCrossing != nil {
		toSerialize["disable_border_crossing"] = o.DisableBorderCrossing
	}
	if o.PtChangeDelay != nil {
		toSerialize["pt_change_delay"] = o.PtChangeDelay
	}
	if o.WalkingTime != nil {
		toSerialize["walking_time"] = o.WalkingTime
	}
	if o.DrivingTimeToStation != nil {
		toSerialize["driving_time_to_station"] = o.DrivingTimeToStation
	}
	if o.CyclingTimeToStation != nil {
		toSerialize["cycling_time_to_station"] = o.CyclingTimeToStation
	}
	if o.ParkingTime != nil {
		toSerialize["parking_time"] = o.ParkingTime
	}
	if o.BoardingTime != nil {
		toSerialize["boarding_time"] = o.BoardingTime
	}
	return json.Marshal(toSerialize)
}

type NullableRequestTransportation struct {
	value *RequestTransportation
	isSet bool
}

func (v NullableRequestTransportation) Get() *RequestTransportation {
	return v.value
}

func (v *NullableRequestTransportation) Set(val *RequestTransportation) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestTransportation) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestTransportation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestTransportation(val *RequestTransportation) *NullableRequestTransportation {
	return &NullableRequestTransportation{value: val, isSet: true}
}

func (v NullableRequestTransportation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestTransportation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


