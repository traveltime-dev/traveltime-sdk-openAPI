/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.2
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseFareTicket struct for ResponseFareTicket
type ResponseFareTicket struct {
	Type string `json:"type"`
	Price float64 `json:"price"`
	Currency string `json:"currency"`
}

// NewResponseFareTicket instantiates a new ResponseFareTicket object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseFareTicket(type_ string, price float64, currency string) *ResponseFareTicket {
	this := ResponseFareTicket{}
	this.Type = type_
	this.Price = price
	this.Currency = currency
	return &this
}

// NewResponseFareTicketWithDefaults instantiates a new ResponseFareTicket object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseFareTicketWithDefaults() *ResponseFareTicket {
	this := ResponseFareTicket{}
	return &this
}

// GetType returns the Type field value
func (o *ResponseFareTicket) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ResponseFareTicket) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ResponseFareTicket) SetType(v string) {
	o.Type = v
}

// GetPrice returns the Price field value
func (o *ResponseFareTicket) GetPrice() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *ResponseFareTicket) GetPriceOk() (*float64, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *ResponseFareTicket) SetPrice(v float64) {
	o.Price = v
}

// GetCurrency returns the Currency field value
func (o *ResponseFareTicket) GetCurrency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value
// and a boolean to check if the value has been set.
func (o *ResponseFareTicket) GetCurrencyOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Currency, true
}

// SetCurrency sets field value
func (o *ResponseFareTicket) SetCurrency(v string) {
	o.Currency = v
}

func (o ResponseFareTicket) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["price"] = o.Price
	}
	if true {
		toSerialize["currency"] = o.Currency
	}
	return json.Marshal(toSerialize)
}

type NullableResponseFareTicket struct {
	value *ResponseFareTicket
	isSet bool
}

func (v NullableResponseFareTicket) Get() *ResponseFareTicket {
	return v.value
}

func (v *NullableResponseFareTicket) Set(val *ResponseFareTicket) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseFareTicket) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseFareTicket) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseFareTicket(val *ResponseFareTicket) *NullableResponseFareTicket {
	return &NullableResponseFareTicket{value: val, isSet: true}
}

func (v NullableResponseFareTicket) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseFareTicket) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


