/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.2
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseFares struct for ResponseFares
type ResponseFares struct {
	Breakdown []ResponseFaresBreakdownItem `json:"breakdown"`
	TicketsTotal []ResponseFareTicket `json:"tickets_total"`
}

// NewResponseFares instantiates a new ResponseFares object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseFares(breakdown []ResponseFaresBreakdownItem, ticketsTotal []ResponseFareTicket) *ResponseFares {
	this := ResponseFares{}
	this.Breakdown = breakdown
	this.TicketsTotal = ticketsTotal
	return &this
}

// NewResponseFaresWithDefaults instantiates a new ResponseFares object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseFaresWithDefaults() *ResponseFares {
	this := ResponseFares{}
	return &this
}

// GetBreakdown returns the Breakdown field value
func (o *ResponseFares) GetBreakdown() []ResponseFaresBreakdownItem {
	if o == nil {
		var ret []ResponseFaresBreakdownItem
		return ret
	}

	return o.Breakdown
}

// GetBreakdownOk returns a tuple with the Breakdown field value
// and a boolean to check if the value has been set.
func (o *ResponseFares) GetBreakdownOk() (*[]ResponseFaresBreakdownItem, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Breakdown, true
}

// SetBreakdown sets field value
func (o *ResponseFares) SetBreakdown(v []ResponseFaresBreakdownItem) {
	o.Breakdown = v
}

// GetTicketsTotal returns the TicketsTotal field value
func (o *ResponseFares) GetTicketsTotal() []ResponseFareTicket {
	if o == nil {
		var ret []ResponseFareTicket
		return ret
	}

	return o.TicketsTotal
}

// GetTicketsTotalOk returns a tuple with the TicketsTotal field value
// and a boolean to check if the value has been set.
func (o *ResponseFares) GetTicketsTotalOk() (*[]ResponseFareTicket, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TicketsTotal, true
}

// SetTicketsTotal sets field value
func (o *ResponseFares) SetTicketsTotal(v []ResponseFareTicket) {
	o.TicketsTotal = v
}

func (o ResponseFares) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["breakdown"] = o.Breakdown
	}
	if true {
		toSerialize["tickets_total"] = o.TicketsTotal
	}
	return json.Marshal(toSerialize)
}

type NullableResponseFares struct {
	value *ResponseFares
	isSet bool
}

func (v NullableResponseFares) Get() *ResponseFares {
	return v.value
}

func (v *NullableResponseFares) Set(val *ResponseFares) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseFares) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseFares) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseFares(val *ResponseFares) *NullableResponseFares {
	return &NullableResponseFares{value: val, isSet: true}
}

func (v NullableResponseFares) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseFares) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


