/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.2
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseGeocodingGeoJsonFeature struct for ResponseGeocodingGeoJsonFeature
type ResponseGeocodingGeoJsonFeature struct {
	Type string `json:"type"`
	Geometry ResponseGeocodingGeometry `json:"geometry"`
	Properties ResponseGeocodingProperties `json:"properties"`
}

// NewResponseGeocodingGeoJsonFeature instantiates a new ResponseGeocodingGeoJsonFeature object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseGeocodingGeoJsonFeature(type_ string, geometry ResponseGeocodingGeometry, properties ResponseGeocodingProperties) *ResponseGeocodingGeoJsonFeature {
	this := ResponseGeocodingGeoJsonFeature{}
	this.Type = type_
	this.Geometry = geometry
	this.Properties = properties
	return &this
}

// NewResponseGeocodingGeoJsonFeatureWithDefaults instantiates a new ResponseGeocodingGeoJsonFeature object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseGeocodingGeoJsonFeatureWithDefaults() *ResponseGeocodingGeoJsonFeature {
	this := ResponseGeocodingGeoJsonFeature{}
	return &this
}

// GetType returns the Type field value
func (o *ResponseGeocodingGeoJsonFeature) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ResponseGeocodingGeoJsonFeature) GetTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ResponseGeocodingGeoJsonFeature) SetType(v string) {
	o.Type = v
}

// GetGeometry returns the Geometry field value
func (o *ResponseGeocodingGeoJsonFeature) GetGeometry() ResponseGeocodingGeometry {
	if o == nil {
		var ret ResponseGeocodingGeometry
		return ret
	}

	return o.Geometry
}

// GetGeometryOk returns a tuple with the Geometry field value
// and a boolean to check if the value has been set.
func (o *ResponseGeocodingGeoJsonFeature) GetGeometryOk() (*ResponseGeocodingGeometry, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Geometry, true
}

// SetGeometry sets field value
func (o *ResponseGeocodingGeoJsonFeature) SetGeometry(v ResponseGeocodingGeometry) {
	o.Geometry = v
}

// GetProperties returns the Properties field value
func (o *ResponseGeocodingGeoJsonFeature) GetProperties() ResponseGeocodingProperties {
	if o == nil {
		var ret ResponseGeocodingProperties
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *ResponseGeocodingGeoJsonFeature) GetPropertiesOk() (*ResponseGeocodingProperties, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *ResponseGeocodingGeoJsonFeature) SetProperties(v ResponseGeocodingProperties) {
	o.Properties = v
}

func (o ResponseGeocodingGeoJsonFeature) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["geometry"] = o.Geometry
	}
	if true {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableResponseGeocodingGeoJsonFeature struct {
	value *ResponseGeocodingGeoJsonFeature
	isSet bool
}

func (v NullableResponseGeocodingGeoJsonFeature) Get() *ResponseGeocodingGeoJsonFeature {
	return v.value
}

func (v *NullableResponseGeocodingGeoJsonFeature) Set(val *ResponseGeocodingGeoJsonFeature) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseGeocodingGeoJsonFeature) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseGeocodingGeoJsonFeature) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseGeocodingGeoJsonFeature(val *ResponseGeocodingGeoJsonFeature) *NullableResponseGeocodingGeoJsonFeature {
	return &NullableResponseGeocodingGeoJsonFeature{value: val, isSet: true}
}

func (v NullableResponseGeocodingGeoJsonFeature) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseGeocodingGeoJsonFeature) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


