/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.2
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseMapInfo struct for ResponseMapInfo
type ResponseMapInfo struct {
	Maps []ResponseMapInfoMap `json:"maps"`
}

// NewResponseMapInfo instantiates a new ResponseMapInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseMapInfo(maps []ResponseMapInfoMap) *ResponseMapInfo {
	this := ResponseMapInfo{}
	this.Maps = maps
	return &this
}

// NewResponseMapInfoWithDefaults instantiates a new ResponseMapInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseMapInfoWithDefaults() *ResponseMapInfo {
	this := ResponseMapInfo{}
	return &this
}

// GetMaps returns the Maps field value
func (o *ResponseMapInfo) GetMaps() []ResponseMapInfoMap {
	if o == nil {
		var ret []ResponseMapInfoMap
		return ret
	}

	return o.Maps
}

// GetMapsOk returns a tuple with the Maps field value
// and a boolean to check if the value has been set.
func (o *ResponseMapInfo) GetMapsOk() (*[]ResponseMapInfoMap, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Maps, true
}

// SetMaps sets field value
func (o *ResponseMapInfo) SetMaps(v []ResponseMapInfoMap) {
	o.Maps = v
}

func (o ResponseMapInfo) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["maps"] = o.Maps
	}
	return json.Marshal(toSerialize)
}

type NullableResponseMapInfo struct {
	value *ResponseMapInfo
	isSet bool
}

func (v NullableResponseMapInfo) Get() *ResponseMapInfo {
	return v.value
}

func (v *NullableResponseMapInfo) Set(val *ResponseMapInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseMapInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseMapInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseMapInfo(val *ResponseMapInfo) *NullableResponseMapInfo {
	return &NullableResponseMapInfo{value: val, isSet: true}
}

func (v NullableResponseMapInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseMapInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


