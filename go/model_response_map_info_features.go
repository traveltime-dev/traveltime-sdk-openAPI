/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.3
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseMapInfoFeatures struct for ResponseMapInfoFeatures
type ResponseMapInfoFeatures struct {
	PublicTransport *ResponseMapInfoFeaturesPublicTransport `json:"public_transport,omitempty"`
	Fares bool `json:"fares"`
	Postcodes bool `json:"postcodes"`
}

// NewResponseMapInfoFeatures instantiates a new ResponseMapInfoFeatures object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseMapInfoFeatures(fares bool, postcodes bool) *ResponseMapInfoFeatures {
	this := ResponseMapInfoFeatures{}
	this.Fares = fares
	this.Postcodes = postcodes
	return &this
}

// NewResponseMapInfoFeaturesWithDefaults instantiates a new ResponseMapInfoFeatures object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseMapInfoFeaturesWithDefaults() *ResponseMapInfoFeatures {
	this := ResponseMapInfoFeatures{}
	return &this
}

// GetPublicTransport returns the PublicTransport field value if set, zero value otherwise.
func (o *ResponseMapInfoFeatures) GetPublicTransport() ResponseMapInfoFeaturesPublicTransport {
	if o == nil || o.PublicTransport == nil {
		var ret ResponseMapInfoFeaturesPublicTransport
		return ret
	}
	return *o.PublicTransport
}

// GetPublicTransportOk returns a tuple with the PublicTransport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseMapInfoFeatures) GetPublicTransportOk() (*ResponseMapInfoFeaturesPublicTransport, bool) {
	if o == nil || o.PublicTransport == nil {
		return nil, false
	}
	return o.PublicTransport, true
}

// HasPublicTransport returns a boolean if a field has been set.
func (o *ResponseMapInfoFeatures) HasPublicTransport() bool {
	if o != nil && o.PublicTransport != nil {
		return true
	}

	return false
}

// SetPublicTransport gets a reference to the given ResponseMapInfoFeaturesPublicTransport and assigns it to the PublicTransport field.
func (o *ResponseMapInfoFeatures) SetPublicTransport(v ResponseMapInfoFeaturesPublicTransport) {
	o.PublicTransport = &v
}

// GetFares returns the Fares field value
func (o *ResponseMapInfoFeatures) GetFares() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Fares
}

// GetFaresOk returns a tuple with the Fares field value
// and a boolean to check if the value has been set.
func (o *ResponseMapInfoFeatures) GetFaresOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Fares, true
}

// SetFares sets field value
func (o *ResponseMapInfoFeatures) SetFares(v bool) {
	o.Fares = v
}

// GetPostcodes returns the Postcodes field value
func (o *ResponseMapInfoFeatures) GetPostcodes() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Postcodes
}

// GetPostcodesOk returns a tuple with the Postcodes field value
// and a boolean to check if the value has been set.
func (o *ResponseMapInfoFeatures) GetPostcodesOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Postcodes, true
}

// SetPostcodes sets field value
func (o *ResponseMapInfoFeatures) SetPostcodes(v bool) {
	o.Postcodes = v
}

func (o ResponseMapInfoFeatures) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PublicTransport != nil {
		toSerialize["public_transport"] = o.PublicTransport
	}
	if true {
		toSerialize["fares"] = o.Fares
	}
	if true {
		toSerialize["postcodes"] = o.Postcodes
	}
	return json.Marshal(toSerialize)
}

type NullableResponseMapInfoFeatures struct {
	value *ResponseMapInfoFeatures
	isSet bool
}

func (v NullableResponseMapInfoFeatures) Get() *ResponseMapInfoFeatures {
	return v.value
}

func (v *NullableResponseMapInfoFeatures) Set(val *ResponseMapInfoFeatures) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseMapInfoFeatures) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseMapInfoFeatures) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseMapInfoFeatures(val *ResponseMapInfoFeatures) *NullableResponseMapInfoFeatures {
	return &NullableResponseMapInfoFeatures{value: val, isSet: true}
}

func (v NullableResponseMapInfoFeatures) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseMapInfoFeatures) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


