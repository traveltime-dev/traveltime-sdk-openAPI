/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.3
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseRoutesLocation struct for ResponseRoutesLocation
type ResponseRoutesLocation struct {
	Id string `json:"id"`
	Properties []ResponseRoutesProperties `json:"properties"`
}

// NewResponseRoutesLocation instantiates a new ResponseRoutesLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseRoutesLocation(id string, properties []ResponseRoutesProperties) *ResponseRoutesLocation {
	this := ResponseRoutesLocation{}
	this.Id = id
	this.Properties = properties
	return &this
}

// NewResponseRoutesLocationWithDefaults instantiates a new ResponseRoutesLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseRoutesLocationWithDefaults() *ResponseRoutesLocation {
	this := ResponseRoutesLocation{}
	return &this
}

// GetId returns the Id field value
func (o *ResponseRoutesLocation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResponseRoutesLocation) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResponseRoutesLocation) SetId(v string) {
	o.Id = v
}

// GetProperties returns the Properties field value
func (o *ResponseRoutesLocation) GetProperties() []ResponseRoutesProperties {
	if o == nil {
		var ret []ResponseRoutesProperties
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *ResponseRoutesLocation) GetPropertiesOk() (*[]ResponseRoutesProperties, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *ResponseRoutesLocation) SetProperties(v []ResponseRoutesProperties) {
	o.Properties = v
}

func (o ResponseRoutesLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["properties"] = o.Properties
	}
	return json.Marshal(toSerialize)
}

type NullableResponseRoutesLocation struct {
	value *ResponseRoutesLocation
	isSet bool
}

func (v NullableResponseRoutesLocation) Get() *ResponseRoutesLocation {
	return v.value
}

func (v *NullableResponseRoutesLocation) Set(val *ResponseRoutesLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseRoutesLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseRoutesLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseRoutesLocation(val *ResponseRoutesLocation) *NullableResponseRoutesLocation {
	return &NullableResponseRoutesLocation{value: val, isSet: true}
}

func (v NullableResponseRoutesLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseRoutesLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


