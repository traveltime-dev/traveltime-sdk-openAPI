/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.3
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseShape struct for ResponseShape
type ResponseShape struct {
	Shell []Coords `json:"shell"`
	Holes [][]Coords `json:"holes"`
}

// NewResponseShape instantiates a new ResponseShape object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseShape(shell []Coords, holes [][]Coords) *ResponseShape {
	this := ResponseShape{}
	this.Shell = shell
	this.Holes = holes
	return &this
}

// NewResponseShapeWithDefaults instantiates a new ResponseShape object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseShapeWithDefaults() *ResponseShape {
	this := ResponseShape{}
	return &this
}

// GetShell returns the Shell field value
func (o *ResponseShape) GetShell() []Coords {
	if o == nil {
		var ret []Coords
		return ret
	}

	return o.Shell
}

// GetShellOk returns a tuple with the Shell field value
// and a boolean to check if the value has been set.
func (o *ResponseShape) GetShellOk() (*[]Coords, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Shell, true
}

// SetShell sets field value
func (o *ResponseShape) SetShell(v []Coords) {
	o.Shell = v
}

// GetHoles returns the Holes field value
func (o *ResponseShape) GetHoles() [][]Coords {
	if o == nil {
		var ret [][]Coords
		return ret
	}

	return o.Holes
}

// GetHolesOk returns a tuple with the Holes field value
// and a boolean to check if the value has been set.
func (o *ResponseShape) GetHolesOk() (*[][]Coords, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Holes, true
}

// SetHoles sets field value
func (o *ResponseShape) SetHoles(v [][]Coords) {
	o.Holes = v
}

func (o ResponseShape) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["shell"] = o.Shell
	}
	if true {
		toSerialize["holes"] = o.Holes
	}
	return json.Marshal(toSerialize)
}

type NullableResponseShape struct {
	value *ResponseShape
	isSet bool
}

func (v NullableResponseShape) Get() *ResponseShape {
	return v.value
}

func (v *NullableResponseShape) Set(val *ResponseShape) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseShape) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseShape) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseShape(val *ResponseShape) *NullableResponseShape {
	return &NullableResponseShape{value: val, isSet: true}
}

func (v NullableResponseShape) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseShape) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


