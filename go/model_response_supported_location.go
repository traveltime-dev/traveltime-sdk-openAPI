/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.2
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseSupportedLocation struct for ResponseSupportedLocation
type ResponseSupportedLocation struct {
	Id string `json:"id"`
	MapName string `json:"map_name"`
}

// NewResponseSupportedLocation instantiates a new ResponseSupportedLocation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseSupportedLocation(id string, mapName string) *ResponseSupportedLocation {
	this := ResponseSupportedLocation{}
	this.Id = id
	this.MapName = mapName
	return &this
}

// NewResponseSupportedLocationWithDefaults instantiates a new ResponseSupportedLocation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseSupportedLocationWithDefaults() *ResponseSupportedLocation {
	this := ResponseSupportedLocation{}
	return &this
}

// GetId returns the Id field value
func (o *ResponseSupportedLocation) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ResponseSupportedLocation) GetIdOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ResponseSupportedLocation) SetId(v string) {
	o.Id = v
}

// GetMapName returns the MapName field value
func (o *ResponseSupportedLocation) GetMapName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MapName
}

// GetMapNameOk returns a tuple with the MapName field value
// and a boolean to check if the value has been set.
func (o *ResponseSupportedLocation) GetMapNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.MapName, true
}

// SetMapName sets field value
func (o *ResponseSupportedLocation) SetMapName(v string) {
	o.MapName = v
}

func (o ResponseSupportedLocation) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["map_name"] = o.MapName
	}
	return json.Marshal(toSerialize)
}

type NullableResponseSupportedLocation struct {
	value *ResponseSupportedLocation
	isSet bool
}

func (v NullableResponseSupportedLocation) Get() *ResponseSupportedLocation {
	return v.value
}

func (v *NullableResponseSupportedLocation) Set(val *ResponseSupportedLocation) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseSupportedLocation) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseSupportedLocation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseSupportedLocation(val *ResponseSupportedLocation) *NullableResponseSupportedLocation {
	return &NullableResponseSupportedLocation{value: val, isSet: true}
}

func (v NullableResponseSupportedLocation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseSupportedLocation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


