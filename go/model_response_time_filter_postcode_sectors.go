/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.3
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseTimeFilterPostcodeSectors struct for ResponseTimeFilterPostcodeSectors
type ResponseTimeFilterPostcodeSectors struct {
	Results []ResponseTimeFilterPostcodeSectorsResult `json:"results"`
}

// NewResponseTimeFilterPostcodeSectors instantiates a new ResponseTimeFilterPostcodeSectors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseTimeFilterPostcodeSectors(results []ResponseTimeFilterPostcodeSectorsResult) *ResponseTimeFilterPostcodeSectors {
	this := ResponseTimeFilterPostcodeSectors{}
	this.Results = results
	return &this
}

// NewResponseTimeFilterPostcodeSectorsWithDefaults instantiates a new ResponseTimeFilterPostcodeSectors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseTimeFilterPostcodeSectorsWithDefaults() *ResponseTimeFilterPostcodeSectors {
	this := ResponseTimeFilterPostcodeSectors{}
	return &this
}

// GetResults returns the Results field value
func (o *ResponseTimeFilterPostcodeSectors) GetResults() []ResponseTimeFilterPostcodeSectorsResult {
	if o == nil {
		var ret []ResponseTimeFilterPostcodeSectorsResult
		return ret
	}

	return o.Results
}

// GetResultsOk returns a tuple with the Results field value
// and a boolean to check if the value has been set.
func (o *ResponseTimeFilterPostcodeSectors) GetResultsOk() (*[]ResponseTimeFilterPostcodeSectorsResult, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Results, true
}

// SetResults sets field value
func (o *ResponseTimeFilterPostcodeSectors) SetResults(v []ResponseTimeFilterPostcodeSectorsResult) {
	o.Results = v
}

func (o ResponseTimeFilterPostcodeSectors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["results"] = o.Results
	}
	return json.Marshal(toSerialize)
}

type NullableResponseTimeFilterPostcodeSectors struct {
	value *ResponseTimeFilterPostcodeSectors
	isSet bool
}

func (v NullableResponseTimeFilterPostcodeSectors) Get() *ResponseTimeFilterPostcodeSectors {
	return v.value
}

func (v *NullableResponseTimeFilterPostcodeSectors) Set(val *ResponseTimeFilterPostcodeSectors) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseTimeFilterPostcodeSectors) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseTimeFilterPostcodeSectors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseTimeFilterPostcodeSectors(val *ResponseTimeFilterPostcodeSectors) *NullableResponseTimeFilterPostcodeSectors {
	return &NullableResponseTimeFilterPostcodeSectors{value: val, isSet: true}
}

func (v NullableResponseTimeFilterPostcodeSectors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseTimeFilterPostcodeSectors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


