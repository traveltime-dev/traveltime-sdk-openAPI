/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.2
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseTimeFilterPostcodesProperties struct for ResponseTimeFilterPostcodesProperties
type ResponseTimeFilterPostcodesProperties struct {
	TravelTime *int32 `json:"travel_time,omitempty"`
	Distance *int32 `json:"distance,omitempty"`
}

// NewResponseTimeFilterPostcodesProperties instantiates a new ResponseTimeFilterPostcodesProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseTimeFilterPostcodesProperties() *ResponseTimeFilterPostcodesProperties {
	this := ResponseTimeFilterPostcodesProperties{}
	return &this
}

// NewResponseTimeFilterPostcodesPropertiesWithDefaults instantiates a new ResponseTimeFilterPostcodesProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseTimeFilterPostcodesPropertiesWithDefaults() *ResponseTimeFilterPostcodesProperties {
	this := ResponseTimeFilterPostcodesProperties{}
	return &this
}

// GetTravelTime returns the TravelTime field value if set, zero value otherwise.
func (o *ResponseTimeFilterPostcodesProperties) GetTravelTime() int32 {
	if o == nil || o.TravelTime == nil {
		var ret int32
		return ret
	}
	return *o.TravelTime
}

// GetTravelTimeOk returns a tuple with the TravelTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseTimeFilterPostcodesProperties) GetTravelTimeOk() (*int32, bool) {
	if o == nil || o.TravelTime == nil {
		return nil, false
	}
	return o.TravelTime, true
}

// HasTravelTime returns a boolean if a field has been set.
func (o *ResponseTimeFilterPostcodesProperties) HasTravelTime() bool {
	if o != nil && o.TravelTime != nil {
		return true
	}

	return false
}

// SetTravelTime gets a reference to the given int32 and assigns it to the TravelTime field.
func (o *ResponseTimeFilterPostcodesProperties) SetTravelTime(v int32) {
	o.TravelTime = &v
}

// GetDistance returns the Distance field value if set, zero value otherwise.
func (o *ResponseTimeFilterPostcodesProperties) GetDistance() int32 {
	if o == nil || o.Distance == nil {
		var ret int32
		return ret
	}
	return *o.Distance
}

// GetDistanceOk returns a tuple with the Distance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseTimeFilterPostcodesProperties) GetDistanceOk() (*int32, bool) {
	if o == nil || o.Distance == nil {
		return nil, false
	}
	return o.Distance, true
}

// HasDistance returns a boolean if a field has been set.
func (o *ResponseTimeFilterPostcodesProperties) HasDistance() bool {
	if o != nil && o.Distance != nil {
		return true
	}

	return false
}

// SetDistance gets a reference to the given int32 and assigns it to the Distance field.
func (o *ResponseTimeFilterPostcodesProperties) SetDistance(v int32) {
	o.Distance = &v
}

func (o ResponseTimeFilterPostcodesProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TravelTime != nil {
		toSerialize["travel_time"] = o.TravelTime
	}
	if o.Distance != nil {
		toSerialize["distance"] = o.Distance
	}
	return json.Marshal(toSerialize)
}

type NullableResponseTimeFilterPostcodesProperties struct {
	value *ResponseTimeFilterPostcodesProperties
	isSet bool
}

func (v NullableResponseTimeFilterPostcodesProperties) Get() *ResponseTimeFilterPostcodesProperties {
	return v.value
}

func (v *NullableResponseTimeFilterPostcodesProperties) Set(val *ResponseTimeFilterPostcodesProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseTimeFilterPostcodesProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseTimeFilterPostcodesProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseTimeFilterPostcodesProperties(val *ResponseTimeFilterPostcodesProperties) *NullableResponseTimeFilterPostcodesProperties {
	return &NullableResponseTimeFilterPostcodesProperties{value: val, isSet: true}
}

func (v NullableResponseTimeFilterPostcodesProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseTimeFilterPostcodesProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


