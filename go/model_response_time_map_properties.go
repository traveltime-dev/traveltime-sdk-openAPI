/*
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.2.3
 * Contact: support@igeolise.com
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ResponseTimeMapProperties struct for ResponseTimeMapProperties
type ResponseTimeMapProperties struct {
	IsOnlyWalking *bool `json:"is_only_walking,omitempty"`
}

// NewResponseTimeMapProperties instantiates a new ResponseTimeMapProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResponseTimeMapProperties() *ResponseTimeMapProperties {
	this := ResponseTimeMapProperties{}
	return &this
}

// NewResponseTimeMapPropertiesWithDefaults instantiates a new ResponseTimeMapProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResponseTimeMapPropertiesWithDefaults() *ResponseTimeMapProperties {
	this := ResponseTimeMapProperties{}
	return &this
}

// GetIsOnlyWalking returns the IsOnlyWalking field value if set, zero value otherwise.
func (o *ResponseTimeMapProperties) GetIsOnlyWalking() bool {
	if o == nil || o.IsOnlyWalking == nil {
		var ret bool
		return ret
	}
	return *o.IsOnlyWalking
}

// GetIsOnlyWalkingOk returns a tuple with the IsOnlyWalking field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResponseTimeMapProperties) GetIsOnlyWalkingOk() (*bool, bool) {
	if o == nil || o.IsOnlyWalking == nil {
		return nil, false
	}
	return o.IsOnlyWalking, true
}

// HasIsOnlyWalking returns a boolean if a field has been set.
func (o *ResponseTimeMapProperties) HasIsOnlyWalking() bool {
	if o != nil && o.IsOnlyWalking != nil {
		return true
	}

	return false
}

// SetIsOnlyWalking gets a reference to the given bool and assigns it to the IsOnlyWalking field.
func (o *ResponseTimeMapProperties) SetIsOnlyWalking(v bool) {
	o.IsOnlyWalking = &v
}

func (o ResponseTimeMapProperties) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.IsOnlyWalking != nil {
		toSerialize["is_only_walking"] = o.IsOnlyWalking
	}
	return json.Marshal(toSerialize)
}

type NullableResponseTimeMapProperties struct {
	value *ResponseTimeMapProperties
	isSet bool
}

func (v NullableResponseTimeMapProperties) Get() *ResponseTimeMapProperties {
	return v.value
}

func (v *NullableResponseTimeMapProperties) Set(val *ResponseTimeMapProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseTimeMapProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseTimeMapProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseTimeMapProperties(val *ResponseTimeMapProperties) *NullableResponseTimeMapProperties {
	return &NullableResponseTimeMapProperties{value: val, isSet: true}
}

func (v NullableResponseTimeMapProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseTimeMapProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


