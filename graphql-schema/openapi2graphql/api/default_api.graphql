# TravelTime API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# The version of the OpenAPI document: 1.2.3
# Contact: support@igeolise.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# default_api

type mutation {
  # @param RequestRoutes requestRoutes 
  # @return [ResponseRoutes]
  Routes(requestRoutes: RequestRoutes): ResponseRoutes

  # @param RequestSupportedLocations requestSupportedLocations 
  # @return [ResponseSupportedLocations]
  SupportedLocations(requestSupportedLocations: RequestSupportedLocations): ResponseSupportedLocations

  # @param RequestTimeFilter requestTimeFilter 
  # @return [ResponseTimeFilter]
  TimeFilter(requestTimeFilter: RequestTimeFilter): ResponseTimeFilter

  # @param RequestTimeFilterFast requestTimeFilterFast 
  # @return [ResponseTimeFilterFast]
  TimeFilterFast(requestTimeFilterFast: RequestTimeFilterFast): ResponseTimeFilterFast

  # @param RequestTimeFilterPostcodeDistricts requestTimeFilterPostcodeDistricts 
  # @return [ResponseTimeFilterPostcodeDistricts]
  TimeFilterPostcodeDistricts(requestTimeFilterPostcodeDistricts: RequestTimeFilterPostcodeDistricts): ResponseTimeFilterPostcodeDistricts

  # @param RequestTimeFilterPostcodeSectors requestTimeFilterPostcodeSectors 
  # @return [ResponseTimeFilterPostcodeSectors]
  TimeFilterPostcodeSectors(requestTimeFilterPostcodeSectors: RequestTimeFilterPostcodeSectors): ResponseTimeFilterPostcodeSectors

  # @param RequestTimeFilterPostcodes requestTimeFilterPostcodes 
  # @return [ResponseTimeFilterPostcodes]
  TimeFilterPostcodes(requestTimeFilterPostcodes: RequestTimeFilterPostcodes): ResponseTimeFilterPostcodes

  # @param RequestTimeMap requestTimeMap 
  # @return [ResponseTimeMap]
  TimeMap(requestTimeMap: RequestTimeMap): ResponseTimeMap

}

type query {
  # @param Float! lat 
  # @param Float! lng 
  # @param String! withinCountry 
  # @return [ResponseGeocoding]
  GeocodingReverseSearch(lat: Float!, lng: Float!, withinCountry: String!): ResponseGeocoding

  # @param String! Query_ 
  # @param Float! focusLat 
  # @param Float! focusLng 
  # @param String! withinCountry 
  # @return [ResponseGeocoding]
  GeocodingSearch(Query_: String!, focusLat: Float!, focusLng: Float!, withinCountry: String!): ResponseGeocoding

  # @return [ResponseMapInfo]
  MapInfo(): ResponseMapInfo

}

