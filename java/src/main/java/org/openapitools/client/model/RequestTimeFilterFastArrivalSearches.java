/*
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.RequestTimeFilterFastArrivalManyToOneSearch;
import org.openapitools.client.model.RequestTimeFilterFastArrivalOneToManySearch;

/**
 * RequestTimeFilterFastArrivalSearches
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2021-05-26T18:49:54.230Z[Etc/UTC]")
public class RequestTimeFilterFastArrivalSearches {
  public static final String SERIALIZED_NAME_MANY_TO_ONE = "many_to_one";
  @SerializedName(SERIALIZED_NAME_MANY_TO_ONE)
  private List<RequestTimeFilterFastArrivalManyToOneSearch> manyToOne = null;

  public static final String SERIALIZED_NAME_ONE_TO_MANY = "one_to_many";
  @SerializedName(SERIALIZED_NAME_ONE_TO_MANY)
  private List<RequestTimeFilterFastArrivalOneToManySearch> oneToMany = null;


  public RequestTimeFilterFastArrivalSearches manyToOne(List<RequestTimeFilterFastArrivalManyToOneSearch> manyToOne) {
    
    this.manyToOne = manyToOne;
    return this;
  }

  public RequestTimeFilterFastArrivalSearches addManyToOneItem(RequestTimeFilterFastArrivalManyToOneSearch manyToOneItem) {
    if (this.manyToOne == null) {
      this.manyToOne = new ArrayList<RequestTimeFilterFastArrivalManyToOneSearch>();
    }
    this.manyToOne.add(manyToOneItem);
    return this;
  }

   /**
   * Get manyToOne
   * @return manyToOne
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RequestTimeFilterFastArrivalManyToOneSearch> getManyToOne() {
    return manyToOne;
  }


  public void setManyToOne(List<RequestTimeFilterFastArrivalManyToOneSearch> manyToOne) {
    this.manyToOne = manyToOne;
  }


  public RequestTimeFilterFastArrivalSearches oneToMany(List<RequestTimeFilterFastArrivalOneToManySearch> oneToMany) {
    
    this.oneToMany = oneToMany;
    return this;
  }

  public RequestTimeFilterFastArrivalSearches addOneToManyItem(RequestTimeFilterFastArrivalOneToManySearch oneToManyItem) {
    if (this.oneToMany == null) {
      this.oneToMany = new ArrayList<RequestTimeFilterFastArrivalOneToManySearch>();
    }
    this.oneToMany.add(oneToManyItem);
    return this;
  }

   /**
   * Get oneToMany
   * @return oneToMany
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<RequestTimeFilterFastArrivalOneToManySearch> getOneToMany() {
    return oneToMany;
  }


  public void setOneToMany(List<RequestTimeFilterFastArrivalOneToManySearch> oneToMany) {
    this.oneToMany = oneToMany;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RequestTimeFilterFastArrivalSearches requestTimeFilterFastArrivalSearches = (RequestTimeFilterFastArrivalSearches) o;
    return Objects.equals(this.manyToOne, requestTimeFilterFastArrivalSearches.manyToOne) &&
        Objects.equals(this.oneToMany, requestTimeFilterFastArrivalSearches.oneToMany);
  }

  @Override
  public int hashCode() {
    return Objects.hash(manyToOne, oneToMany);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RequestTimeFilterFastArrivalSearches {\n");
    sb.append("    manyToOne: ").append(toIndentedString(manyToOne)).append("\n");
    sb.append("    oneToMany: ").append(toIndentedString(oneToMany)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

