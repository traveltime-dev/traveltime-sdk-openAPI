/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RequestTransportation model module.
 * @module model/RequestTransportation
 * @version 1.2.2
 */
class RequestTransportation {
    /**
     * @member {RequestTransportation.TypeEnum} type
     * @type {RequestTransportation.TypeEnum}
     */
    type;
    /**
     * @member {Number} pt_change_delay
     * @type {Number}
     */
    pt_change_delay;
    /**
     * @member {Number} walking_time
     * @type {Number}
     */
    walking_time;
    /**
     * @member {Number} driving_time_to_station
     * @type {Number}
     */
    driving_time_to_station;
    /**
     * @member {Number} parking_time
     * @type {Number}
     */
    parking_time;
    /**
     * @member {Number} boarding_time
     * @type {Number}
     */
    boarding_time;

    

    /**
     * Constructs a new <code>RequestTransportation</code>.
     * @alias module:model/RequestTransportation
     * @param type {RequestTransportation.TypeEnum} 
     */
    constructor(type) { 
        
        RequestTransportation.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['type'] = type;
    }

    /**
     * Constructs a <code>RequestTransportation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestTransportation} obj Optional instance to populate.
     * @return {module:model/RequestTransportation} The populated <code>RequestTransportation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestTransportation();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('pt_change_delay')) {
                obj['pt_change_delay'] = ApiClient.convertToType(data['pt_change_delay'], 'Number');
            }
            if (data.hasOwnProperty('walking_time')) {
                obj['walking_time'] = ApiClient.convertToType(data['walking_time'], 'Number');
            }
            if (data.hasOwnProperty('driving_time_to_station')) {
                obj['driving_time_to_station'] = ApiClient.convertToType(data['driving_time_to_station'], 'Number');
            }
            if (data.hasOwnProperty('parking_time')) {
                obj['parking_time'] = ApiClient.convertToType(data['parking_time'], 'Number');
            }
            if (data.hasOwnProperty('boarding_time')) {
                obj['boarding_time'] = ApiClient.convertToType(data['boarding_time'], 'Number');
            }
        }
        return obj;
    }
}


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
RequestTransportation['TypeEnum'] = {

    /**
     * value: "cycling"
     * @const
     */
    "cycling": "cycling",

    /**
     * value: "driving"
     * @const
     */
    "driving": "driving",

    /**
     * value: "driving+train"
     * @const
     */
    "driving+train": "driving+train",

    /**
     * value: "public_transport"
     * @const
     */
    "public_transport": "public_transport",

    /**
     * value: "walking"
     * @const
     */
    "walking": "walking",

    /**
     * value: "coach"
     * @const
     */
    "coach": "coach",

    /**
     * value: "bus"
     * @const
     */
    "bus": "bus",

    /**
     * value: "train"
     * @const
     */
    "train": "train",

    /**
     * value: "ferry"
     * @const
     */
    "ferry": "ferry",

    /**
     * value: "driving+ferry"
     * @const
     */
    "driving+ferry": "driving+ferry",

    /**
     * value: "cycling+ferry"
     * @const
     */
    "cycling+ferry": "cycling+ferry"
};



export default RequestTransportation;

