/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RequestRangeFull from './RequestRangeFull';
import RequestTimeFilterPostcodeDistrictsProperty from './RequestTimeFilterPostcodeDistrictsProperty';
import RequestTransportation from './RequestTransportation';

/**
 * The RequestTimeFilterPostcodeDistrictsDepartureSearch model module.
 * @module model/RequestTimeFilterPostcodeDistrictsDepartureSearch
 * @version 1.2.3
 */
class RequestTimeFilterPostcodeDistrictsDepartureSearch {
    /**
     * Constructs a new <code>RequestTimeFilterPostcodeDistrictsDepartureSearch</code>.
     * @alias module:model/RequestTimeFilterPostcodeDistrictsDepartureSearch
     * @param id {String} 
     * @param transportation {module:model/RequestTransportation} 
     * @param travelTime {Number} 
     * @param departureTime {Date} 
     * @param reachablePostcodesThreshold {Number} 
     * @param properties {Array.<module:model/RequestTimeFilterPostcodeDistrictsProperty>} 
     */
    constructor(id, transportation, travelTime, departureTime, reachablePostcodesThreshold, properties) { 
        
        RequestTimeFilterPostcodeDistrictsDepartureSearch.initialize(this, id, transportation, travelTime, departureTime, reachablePostcodesThreshold, properties);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, transportation, travelTime, departureTime, reachablePostcodesThreshold, properties) { 
        obj['id'] = id;
        obj['transportation'] = transportation;
        obj['travel_time'] = travelTime;
        obj['departure_time'] = departureTime;
        obj['reachable_postcodes_threshold'] = reachablePostcodesThreshold;
        obj['properties'] = properties;
    }

    /**
     * Constructs a <code>RequestTimeFilterPostcodeDistrictsDepartureSearch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequestTimeFilterPostcodeDistrictsDepartureSearch} obj Optional instance to populate.
     * @return {module:model/RequestTimeFilterPostcodeDistrictsDepartureSearch} The populated <code>RequestTimeFilterPostcodeDistrictsDepartureSearch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequestTimeFilterPostcodeDistrictsDepartureSearch();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('transportation')) {
                obj['transportation'] = RequestTransportation.constructFromObject(data['transportation']);
            }
            if (data.hasOwnProperty('travel_time')) {
                obj['travel_time'] = ApiClient.convertToType(data['travel_time'], 'Number');
            }
            if (data.hasOwnProperty('departure_time')) {
                obj['departure_time'] = ApiClient.convertToType(data['departure_time'], 'Date');
            }
            if (data.hasOwnProperty('reachable_postcodes_threshold')) {
                obj['reachable_postcodes_threshold'] = ApiClient.convertToType(data['reachable_postcodes_threshold'], 'Number');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], [RequestTimeFilterPostcodeDistrictsProperty]);
            }
            if (data.hasOwnProperty('range')) {
                obj['range'] = RequestRangeFull.constructFromObject(data['range']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
RequestTimeFilterPostcodeDistrictsDepartureSearch.prototype['id'] = undefined;

/**
 * @member {module:model/RequestTransportation} transportation
 */
RequestTimeFilterPostcodeDistrictsDepartureSearch.prototype['transportation'] = undefined;

/**
 * @member {Number} travel_time
 */
RequestTimeFilterPostcodeDistrictsDepartureSearch.prototype['travel_time'] = undefined;

/**
 * @member {Date} departure_time
 */
RequestTimeFilterPostcodeDistrictsDepartureSearch.prototype['departure_time'] = undefined;

/**
 * @member {Number} reachable_postcodes_threshold
 */
RequestTimeFilterPostcodeDistrictsDepartureSearch.prototype['reachable_postcodes_threshold'] = undefined;

/**
 * @member {Array.<module:model/RequestTimeFilterPostcodeDistrictsProperty>} properties
 */
RequestTimeFilterPostcodeDistrictsDepartureSearch.prototype['properties'] = undefined;

/**
 * @member {module:model/RequestRangeFull} range
 */
RequestTimeFilterPostcodeDistrictsDepartureSearch.prototype['range'] = undefined;






export default RequestTimeFilterPostcodeDistrictsDepartureSearch;

