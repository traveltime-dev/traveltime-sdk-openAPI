/**
* TravelTime API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* The version of the OpenAPI document: 1.2.3
* Contact: support@igeolise.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server

import io.ktor.locations.KtorExperimentalLocationsAPI
import io.ktor.locations.Location
import org.openapitools.server.models.*

object Paths {
    /**
     * 
     * 
     * @param lat  
     * @param lng  
     * @param withinCountry  (optional)
     */
    @KtorExperimentalLocationsAPI
    @Location("/v4/geocoding/reverse") class geocodingReverseSearch(val lat: kotlin.Double, val lng: kotlin.Double, val withinCountry: kotlin.String? = null)

    /**
     * 
     * 
     * @param query  
     * @param focusLat  (optional)
     * @param focusLng  (optional)
     * @param withinCountry  (optional)
     */
    @KtorExperimentalLocationsAPI
    @Location("/v4/geocoding/search") class geocodingSearch(val query: kotlin.String, val focusLat: kotlin.Double? = null, val focusLng: kotlin.Double? = null, val withinCountry: kotlin.String? = null)

    /**
     * 
     * 
     */
    @KtorExperimentalLocationsAPI
    @Location("/v4/map-info") class mapInfo()

    /**
     * 
     * 
     * @param requestRoutes  
     */
    @KtorExperimentalLocationsAPI
    @Location("/v4/routes") class routes(val requestRoutes: RequestRoutes)

    /**
     * 
     * 
     * @param requestSupportedLocations  
     */
    @KtorExperimentalLocationsAPI
    @Location("/v4/supported-locations") class supportedLocations(val requestSupportedLocations: RequestSupportedLocations)

    /**
     * 
     * 
     * @param requestTimeFilter  
     */
    @KtorExperimentalLocationsAPI
    @Location("/v4/time-filter") class timeFilter(val requestTimeFilter: RequestTimeFilter)

    /**
     * 
     * 
     * @param requestTimeFilterFast  
     */
    @KtorExperimentalLocationsAPI
    @Location("/v4/time-filter/fast") class timeFilterFast(val requestTimeFilterFast: RequestTimeFilterFast)

    /**
     * 
     * 
     * @param requestTimeFilterPostcodeDistricts  
     */
    @KtorExperimentalLocationsAPI
    @Location("/v4/time-filter/postcode-districts") class timeFilterPostcodeDistricts(val requestTimeFilterPostcodeDistricts: RequestTimeFilterPostcodeDistricts)

    /**
     * 
     * 
     * @param requestTimeFilterPostcodeSectors  
     */
    @KtorExperimentalLocationsAPI
    @Location("/v4/time-filter/postcode-sectors") class timeFilterPostcodeSectors(val requestTimeFilterPostcodeSectors: RequestTimeFilterPostcodeSectors)

    /**
     * 
     * 
     * @param requestTimeFilterPostcodes  
     */
    @KtorExperimentalLocationsAPI
    @Location("/v4/time-filter/postcodes") class timeFilterPostcodes(val requestTimeFilterPostcodes: RequestTimeFilterPostcodes)

    /**
     * 
     * 
     * @param requestTimeMap  
     */
    @KtorExperimentalLocationsAPI
    @Location("/v4/time-map") class timeMap(val requestTimeMap: RequestTimeMap)

}
