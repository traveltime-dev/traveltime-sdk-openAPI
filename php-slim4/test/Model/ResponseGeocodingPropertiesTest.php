<?php

/**
 * TravelTime API
 * PHP version 7.2
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\ResponseGeocodingProperties;

/**
 * ResponseGeocodingPropertiesTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\ResponseGeocodingProperties
 */
class ResponseGeocodingPropertiesTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "ResponseGeocodingProperties"
     */
    public function testResponseGeocodingProperties()
    {
        $testResponseGeocodingProperties = new ResponseGeocodingProperties();
        $namespacedClassname = ResponseGeocodingProperties::getModelsNamespace() . '\\ResponseGeocodingProperties';
        $this->assertSame('\\' . ResponseGeocodingProperties::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        $this->markTestIncomplete(
            'Test of "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
        $this->markTestIncomplete(
            'Test of "name" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "label"
     */
    public function testPropertyLabel()
    {
        $this->markTestIncomplete(
            'Test of "label" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "score"
     */
    public function testPropertyScore()
    {
        $this->markTestIncomplete(
            'Test of "score" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "houseNumber"
     */
    public function testPropertyHouseNumber()
    {
        $this->markTestIncomplete(
            'Test of "houseNumber" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "street"
     */
    public function testPropertyStreet()
    {
        $this->markTestIncomplete(
            'Test of "street" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "region"
     */
    public function testPropertyRegion()
    {
        $this->markTestIncomplete(
            'Test of "region" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "regionCode"
     */
    public function testPropertyRegionCode()
    {
        $this->markTestIncomplete(
            'Test of "regionCode" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "neighbourhood"
     */
    public function testPropertyNeighbourhood()
    {
        $this->markTestIncomplete(
            'Test of "neighbourhood" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "county"
     */
    public function testPropertyCounty()
    {
        $this->markTestIncomplete(
            'Test of "county" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "macroregion"
     */
    public function testPropertyMacroregion()
    {
        $this->markTestIncomplete(
            'Test of "macroregion" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "city"
     */
    public function testPropertyCity()
    {
        $this->markTestIncomplete(
            'Test of "city" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "country"
     */
    public function testPropertyCountry()
    {
        $this->markTestIncomplete(
            'Test of "country" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "countryCode"
     */
    public function testPropertyCountryCode()
    {
        $this->markTestIncomplete(
            'Test of "countryCode" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "continent"
     */
    public function testPropertyContinent()
    {
        $this->markTestIncomplete(
            'Test of "continent" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "postcode"
     */
    public function testPropertyPostcode()
    {
        $this->markTestIncomplete(
            'Test of "postcode" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "features"
     */
    public function testPropertyFeatures()
    {
        $this->markTestIncomplete(
            'Test of "features" property in "ResponseGeocodingProperties" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = ResponseGeocodingProperties::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}
