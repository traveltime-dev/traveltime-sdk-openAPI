<?php
/**
 * ResponseGeocodingPropertiesTest
 *
 * PHP version 7.1.3
 *
 * @category Class
 * @package  OpenAPI\Server\Tests\Model
 * @author   openapi-generator contributors
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * TravelTime API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */

namespace OpenAPI\Server\Model;

use PHPUnit\Framework\TestCase;

/**
 * ResponseGeocodingPropertiesTest Class Doc Comment
 *
 * @category    Class */
// * @description ResponseGeocodingProperties
/**
 * @package     OpenAPI\Server\Tests\Model
 * @author      openapi-generator contributors
 * @link        https://github.com/openapitools/openapi-generator
 */
class ResponseGeocodingPropertiesTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "ResponseGeocodingProperties"
     */
    public function testResponseGeocodingProperties()
    {
        $testResponseGeocodingProperties = new ResponseGeocodingProperties();
    }

    /**
     * Test attribute "name"
     */
    public function testPropertyName()
    {
    }

    /**
     * Test attribute "label"
     */
    public function testPropertyLabel()
    {
    }

    /**
     * Test attribute "score"
     */
    public function testPropertyScore()
    {
    }

    /**
     * Test attribute "houseNumber"
     */
    public function testPropertyHouseNumber()
    {
    }

    /**
     * Test attribute "street"
     */
    public function testPropertyStreet()
    {
    }

    /**
     * Test attribute "region"
     */
    public function testPropertyRegion()
    {
    }

    /**
     * Test attribute "regionCode"
     */
    public function testPropertyRegionCode()
    {
    }

    /**
     * Test attribute "neighbourhood"
     */
    public function testPropertyNeighbourhood()
    {
    }

    /**
     * Test attribute "county"
     */
    public function testPropertyCounty()
    {
    }

    /**
     * Test attribute "macroregion"
     */
    public function testPropertyMacroregion()
    {
    }

    /**
     * Test attribute "city"
     */
    public function testPropertyCity()
    {
    }

    /**
     * Test attribute "country"
     */
    public function testPropertyCountry()
    {
    }

    /**
     * Test attribute "countryCode"
     */
    public function testPropertyCountryCode()
    {
    }

    /**
     * Test attribute "continent"
     */
    public function testPropertyContinent()
    {
    }

    /**
     * Test attribute "postcode"
     */
    public function testPropertyPostcode()
    {
    }

    /**
     * Test attribute "features"
     */
    public function testPropertyFeatures()
    {
    }
}
