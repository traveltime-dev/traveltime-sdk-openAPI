#
# TravelTime API
# No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
# Version: 1.2.2
# Contact: support@igeolise.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER HttpStatus
No description available.
.PARAMETER ErrorCode
No description available.
.PARAMETER Description
No description available.
.PARAMETER DocumentationLink
No description available.
.PARAMETER AdditionalInfo
No description available.
.OUTPUTS

ResponseError<PSCustomObject>
#>

function Initialize-ResponseError {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${HttpStatus},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ErrorCode},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Description},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DocumentationLink},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${AdditionalInfo}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ResponseError' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "http_status" = ${HttpStatus}
            "error_code" = ${ErrorCode}
            "description" = ${Description}
            "documentation_link" = ${DocumentationLink}
            "additional_info" = ${AdditionalInfo}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ResponseError<PSCustomObject>

.DESCRIPTION

Convert from JSON to ResponseError<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ResponseError<PSCustomObject>
#>
function ConvertFrom-JsonToResponseError {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ResponseError' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ResponseError
        $AllProperties = ("http_status", "error_code", "description", "documentation_link", "additional_info")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "http_status"))) { #optional property not found
            $HttpStatus = $null
        } else {
            $HttpStatus = $JsonParameters.PSobject.Properties["http_status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "error_code"))) { #optional property not found
            $ErrorCode = $null
        } else {
            $ErrorCode = $JsonParameters.PSobject.Properties["error_code"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "description"))) { #optional property not found
            $Description = $null
        } else {
            $Description = $JsonParameters.PSobject.Properties["description"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "documentation_link"))) { #optional property not found
            $DocumentationLink = $null
        } else {
            $DocumentationLink = $JsonParameters.PSobject.Properties["documentation_link"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "additional_info"))) { #optional property not found
            $AdditionalInfo = $null
        } else {
            $AdditionalInfo = $JsonParameters.PSobject.Properties["additional_info"].value
        }

        $PSO = [PSCustomObject]@{
            "http_status" = ${HttpStatus}
            "error_code" = ${ErrorCode}
            "description" = ${Description}
            "documentation_link" = ${DocumentationLink}
            "additional_info" = ${AdditionalInfo}
        }

        return $PSO
    }

}

