# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.openapi_server.models.base_model_ import Model
from app.openapi_server.models.request_location import RequestLocation  # noqa: F401,E501
from app.openapi_server.models.request_time_filter_fast_arrival_searches import RequestTimeFilterFastArrivalSearches  # noqa: F401,E501
from openapi_server import util


class RequestTimeFilterFast(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, locations: List[RequestLocation]=None, arrival_searches: RequestTimeFilterFastArrivalSearches=None):  # noqa: E501
        """RequestTimeFilterFast - a model defined in Swagger

        :param locations: The locations of this RequestTimeFilterFast.  # noqa: E501
        :type locations: List[RequestLocation]
        :param arrival_searches: The arrival_searches of this RequestTimeFilterFast.  # noqa: E501
        :type arrival_searches: RequestTimeFilterFastArrivalSearches
        """
        self.swagger_types = {
            'locations': List[RequestLocation],
            'arrival_searches': RequestTimeFilterFastArrivalSearches
        }

        self.attribute_map = {
            'locations': 'locations',
            'arrival_searches': 'arrival_searches'
        }

        self._locations = locations
        self._arrival_searches = arrival_searches

    @classmethod
    def from_dict(cls, dikt) -> 'RequestTimeFilterFast':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestTimeFilterFast of this RequestTimeFilterFast.  # noqa: E501
        :rtype: RequestTimeFilterFast
        """
        return util.deserialize_model(dikt, cls)

    @property
    def locations(self) -> List[RequestLocation]:
        """Gets the locations of this RequestTimeFilterFast.


        :return: The locations of this RequestTimeFilterFast.
        :rtype: List[RequestLocation]
        """
        return self._locations

    @locations.setter
    def locations(self, locations: List[RequestLocation]):
        """Sets the locations of this RequestTimeFilterFast.


        :param locations: The locations of this RequestTimeFilterFast.
        :type locations: List[RequestLocation]
        """
        if locations is None:
            raise ValueError("Invalid value for `locations`, must not be `None`")  # noqa: E501
        if locations is not None and len(locations) < 1:
            raise ValueError("Invalid value for `locations`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._locations = locations

    @property
    def arrival_searches(self) -> RequestTimeFilterFastArrivalSearches:
        """Gets the arrival_searches of this RequestTimeFilterFast.


        :return: The arrival_searches of this RequestTimeFilterFast.
        :rtype: RequestTimeFilterFastArrivalSearches
        """
        return self._arrival_searches

    @arrival_searches.setter
    def arrival_searches(self, arrival_searches: RequestTimeFilterFastArrivalSearches):
        """Sets the arrival_searches of this RequestTimeFilterFast.


        :param arrival_searches: The arrival_searches of this RequestTimeFilterFast.
        :type arrival_searches: RequestTimeFilterFastArrivalSearches
        """
        if arrival_searches is None:
            raise ValueError("Invalid value for `arrival_searches`, must not be `None`")  # noqa: E501

        self._arrival_searches = arrival_searches
