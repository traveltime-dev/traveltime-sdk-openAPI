# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from app.openapi_server.models.base_model_ import Model
from app.openapi_server.models.coords import Coords  # noqa: F401,E501
from app.openapi_server.models.request_level_of_detail import RequestLevelOfDetail  # noqa: F401,E501
from app.openapi_server.models.request_range_no_max_results import RequestRangeNoMaxResults  # noqa: F401,E501
from app.openapi_server.models.request_time_map_property import RequestTimeMapProperty  # noqa: F401,E501
from app.openapi_server.models.request_transportation import RequestTransportation  # noqa: F401,E501
from openapi_server import util


class RequestTimeMapArrivalSearch(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, coords: Coords=None, transportation: RequestTransportation=None, travel_time: int=None, arrival_time: datetime=None, properties: List[RequestTimeMapProperty]=None, range: RequestRangeNoMaxResults=None, level_of_detail: RequestLevelOfDetail=None):  # noqa: E501
        """RequestTimeMapArrivalSearch - a model defined in Swagger

        :param id: The id of this RequestTimeMapArrivalSearch.  # noqa: E501
        :type id: str
        :param coords: The coords of this RequestTimeMapArrivalSearch.  # noqa: E501
        :type coords: Coords
        :param transportation: The transportation of this RequestTimeMapArrivalSearch.  # noqa: E501
        :type transportation: RequestTransportation
        :param travel_time: The travel_time of this RequestTimeMapArrivalSearch.  # noqa: E501
        :type travel_time: int
        :param arrival_time: The arrival_time of this RequestTimeMapArrivalSearch.  # noqa: E501
        :type arrival_time: datetime
        :param properties: The properties of this RequestTimeMapArrivalSearch.  # noqa: E501
        :type properties: List[RequestTimeMapProperty]
        :param range: The range of this RequestTimeMapArrivalSearch.  # noqa: E501
        :type range: RequestRangeNoMaxResults
        :param level_of_detail: The level_of_detail of this RequestTimeMapArrivalSearch.  # noqa: E501
        :type level_of_detail: RequestLevelOfDetail
        """
        self.swagger_types = {
            'id': str,
            'coords': Coords,
            'transportation': RequestTransportation,
            'travel_time': int,
            'arrival_time': datetime,
            'properties': List[RequestTimeMapProperty],
            'range': RequestRangeNoMaxResults,
            'level_of_detail': RequestLevelOfDetail
        }

        self.attribute_map = {
            'id': 'id',
            'coords': 'coords',
            'transportation': 'transportation',
            'travel_time': 'travel_time',
            'arrival_time': 'arrival_time',
            'properties': 'properties',
            'range': 'range',
            'level_of_detail': 'level_of_detail'
        }

        self._id = id
        self._coords = coords
        self._transportation = transportation
        self._travel_time = travel_time
        self._arrival_time = arrival_time
        self._properties = properties
        self._range = range
        self._level_of_detail = level_of_detail

    @classmethod
    def from_dict(cls, dikt) -> 'RequestTimeMapArrivalSearch':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RequestTimeMapArrivalSearch of this RequestTimeMapArrivalSearch.  # noqa: E501
        :rtype: RequestTimeMapArrivalSearch
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this RequestTimeMapArrivalSearch.


        :return: The id of this RequestTimeMapArrivalSearch.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this RequestTimeMapArrivalSearch.


        :param id: The id of this RequestTimeMapArrivalSearch.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def coords(self) -> Coords:
        """Gets the coords of this RequestTimeMapArrivalSearch.


        :return: The coords of this RequestTimeMapArrivalSearch.
        :rtype: Coords
        """
        return self._coords

    @coords.setter
    def coords(self, coords: Coords):
        """Sets the coords of this RequestTimeMapArrivalSearch.


        :param coords: The coords of this RequestTimeMapArrivalSearch.
        :type coords: Coords
        """
        if coords is None:
            raise ValueError("Invalid value for `coords`, must not be `None`")  # noqa: E501

        self._coords = coords

    @property
    def transportation(self) -> RequestTransportation:
        """Gets the transportation of this RequestTimeMapArrivalSearch.


        :return: The transportation of this RequestTimeMapArrivalSearch.
        :rtype: RequestTransportation
        """
        return self._transportation

    @transportation.setter
    def transportation(self, transportation: RequestTransportation):
        """Sets the transportation of this RequestTimeMapArrivalSearch.


        :param transportation: The transportation of this RequestTimeMapArrivalSearch.
        :type transportation: RequestTransportation
        """
        if transportation is None:
            raise ValueError("Invalid value for `transportation`, must not be `None`")  # noqa: E501

        self._transportation = transportation

    @property
    def travel_time(self) -> int:
        """Gets the travel_time of this RequestTimeMapArrivalSearch.


        :return: The travel_time of this RequestTimeMapArrivalSearch.
        :rtype: int
        """
        return self._travel_time

    @travel_time.setter
    def travel_time(self, travel_time: int):
        """Sets the travel_time of this RequestTimeMapArrivalSearch.


        :param travel_time: The travel_time of this RequestTimeMapArrivalSearch.
        :type travel_time: int
        """
        if travel_time is None:
            raise ValueError("Invalid value for `travel_time`, must not be `None`")  # noqa: E501
        if travel_time is not None and travel_time > 14400:  # noqa: E501
            raise ValueError("Invalid value for `travel_time`, must be a value less than or equal to `14400`")  # noqa: E501
        if travel_time is not None and travel_time < 60:  # noqa: E501
            raise ValueError("Invalid value for `travel_time`, must be a value greater than or equal to `60`")  # noqa: E501

        self._travel_time = travel_time

    @property
    def arrival_time(self) -> datetime:
        """Gets the arrival_time of this RequestTimeMapArrivalSearch.


        :return: The arrival_time of this RequestTimeMapArrivalSearch.
        :rtype: datetime
        """
        return self._arrival_time

    @arrival_time.setter
    def arrival_time(self, arrival_time: datetime):
        """Sets the arrival_time of this RequestTimeMapArrivalSearch.


        :param arrival_time: The arrival_time of this RequestTimeMapArrivalSearch.
        :type arrival_time: datetime
        """
        if arrival_time is None:
            raise ValueError("Invalid value for `arrival_time`, must not be `None`")  # noqa: E501

        self._arrival_time = arrival_time

    @property
    def properties(self) -> List[RequestTimeMapProperty]:
        """Gets the properties of this RequestTimeMapArrivalSearch.


        :return: The properties of this RequestTimeMapArrivalSearch.
        :rtype: List[RequestTimeMapProperty]
        """
        return self._properties

    @properties.setter
    def properties(self, properties: List[RequestTimeMapProperty]):
        """Sets the properties of this RequestTimeMapArrivalSearch.


        :param properties: The properties of this RequestTimeMapArrivalSearch.
        :type properties: List[RequestTimeMapProperty]
        """

        self._properties = properties

    @property
    def range(self) -> RequestRangeNoMaxResults:
        """Gets the range of this RequestTimeMapArrivalSearch.


        :return: The range of this RequestTimeMapArrivalSearch.
        :rtype: RequestRangeNoMaxResults
        """
        return self._range

    @range.setter
    def range(self, range: RequestRangeNoMaxResults):
        """Sets the range of this RequestTimeMapArrivalSearch.


        :param range: The range of this RequestTimeMapArrivalSearch.
        :type range: RequestRangeNoMaxResults
        """

        self._range = range

    @property
    def level_of_detail(self) -> RequestLevelOfDetail:
        """Gets the level_of_detail of this RequestTimeMapArrivalSearch.


        :return: The level_of_detail of this RequestTimeMapArrivalSearch.
        :rtype: RequestLevelOfDetail
        """
        return self._level_of_detail

    @level_of_detail.setter
    def level_of_detail(self, level_of_detail: RequestLevelOfDetail):
        """Sets the level_of_detail of this RequestTimeMapArrivalSearch.


        :param level_of_detail: The level_of_detail of this RequestTimeMapArrivalSearch.
        :type level_of_detail: RequestLevelOfDetail
        """

        self._level_of_detail = level_of_detail
