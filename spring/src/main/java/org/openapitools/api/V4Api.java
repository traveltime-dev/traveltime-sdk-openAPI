/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (5.2.0-SNAPSHOT).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package org.openapitools.api;

import org.openapitools.model.RequestRoutes;
import org.openapitools.model.RequestSupportedLocations;
import org.openapitools.model.RequestTimeFilter;
import org.openapitools.model.RequestTimeFilterFast;
import org.openapitools.model.RequestTimeFilterPostcodeDistricts;
import org.openapitools.model.RequestTimeFilterPostcodeSectors;
import org.openapitools.model.RequestTimeFilterPostcodes;
import org.openapitools.model.RequestTimeMap;
import org.openapitools.model.ResponseError;
import org.openapitools.model.ResponseGeocoding;
import org.openapitools.model.ResponseMapInfo;
import org.openapitools.model.ResponseRoutes;
import org.openapitools.model.ResponseSupportedLocations;
import org.openapitools.model.ResponseTimeFilter;
import org.openapitools.model.ResponseTimeFilterFast;
import org.openapitools.model.ResponseTimeFilterPostcodeDistricts;
import org.openapitools.model.ResponseTimeFilterPostcodeSectors;
import org.openapitools.model.ResponseTimeFilterPostcodes;
import org.openapitools.model.ResponseTimeMap;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;
import springfox.documentation.annotations.ApiIgnore;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-05-11T08:39:43.646Z[Etc/UTC]")
@Validated
@Api(value = "v4", description = "the v4 API")
public interface V4Api {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /v4/geocoding/reverse
     *
     * @param lat  (required)
     * @param lng  (required)
     * @param withinCountry  (optional)
     * @return Match a query string to geographic coordinates. [Docs link](http://docs.traveltime.com/reference/geocoding-search/) (status code 200)
     *         or The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response) (status code 200)
     * 
     * @see <a href="http://docs.traveltime.com/reference/geocoding-reverse"> Documentation</a>
     */
    @ApiOperation(value = "", nickname = "geocodingReverseSearch", notes = "", response = ResponseGeocoding.class, authorizations = {
        
        @Authorization(value = "ApiKey"),
        
        @Authorization(value = "ApplicationId")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Match a query string to geographic coordinates. [Docs link](http://docs.traveltime.com/reference/geocoding-search/)", response = ResponseGeocoding.class),
        @ApiResponse(code = 200, message = "The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response)", response = ResponseError.class) })
    @GetMapping(
        value = "/v4/geocoding/reverse",
        produces = { "application/json" }
    )
    default ResponseEntity<ResponseGeocoding> geocodingReverseSearch(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "lat", required = true) Double lat,@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "lng", required = true) Double lng,@ApiParam(value = "") @Valid @RequestParam(value = "within.country", required = false) String withinCountry) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"features\" : [ { \"geometry\" : { \"coordinates\" : [ 0.8008281904610115, 0.8008281904610115 ], \"type\" : \"type\" }, \"type\" : \"type\", \"properties\" : { \"continent\" : \"continent\", \"country\" : \"country\", \"city\" : \"city\", \"county\" : \"county\", \"postcode\" : \"postcode\", \"house_number\" : \"house_number\", \"label\" : \"label\", \"macroregion\" : \"macroregion\", \"score\" : 6.027456183070403, \"country_code\" : \"country_code\", \"features\" : { \"public_transport\" : { \"date_start\" : \"2000-01-23T04:56:07.000+00:00\", \"date_end\" : \"2000-01-23T04:56:07.000+00:00\" }, \"fares\" : true, \"postcodes\" : true }, \"street\" : \"street\", \"neighbourhood\" : \"neighbourhood\", \"name\" : \"name\", \"region\" : \"region\", \"region_code\" : \"region_code\" } }, { \"geometry\" : { \"coordinates\" : [ 0.8008281904610115, 0.8008281904610115 ], \"type\" : \"type\" }, \"type\" : \"type\", \"properties\" : { \"continent\" : \"continent\", \"country\" : \"country\", \"city\" : \"city\", \"county\" : \"county\", \"postcode\" : \"postcode\", \"house_number\" : \"house_number\", \"label\" : \"label\", \"macroregion\" : \"macroregion\", \"score\" : 6.027456183070403, \"country_code\" : \"country_code\", \"features\" : { \"public_transport\" : { \"date_start\" : \"2000-01-23T04:56:07.000+00:00\", \"date_end\" : \"2000-01-23T04:56:07.000+00:00\" }, \"fares\" : true, \"postcodes\" : true }, \"street\" : \"street\", \"neighbourhood\" : \"neighbourhood\", \"name\" : \"name\", \"region\" : \"region\", \"region_code\" : \"region_code\" } } ], \"type\" : \"type\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /v4/geocoding/search
     *
     * @param query  (required)
     * @param focusLat  (optional)
     * @param focusLng  (optional)
     * @param withinCountry  (optional)
     * @return Match a query string to geographic coordinates. [Docs link](http://docs.traveltime.com/reference/geocoding-search/) (status code 200)
     *         or The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response) (status code 200)
     * 
     * @see <a href="http://docs.traveltime.com/reference/geocoding-search"> Documentation</a>
     */
    @ApiOperation(value = "", nickname = "geocodingSearch", notes = "", response = ResponseGeocoding.class, authorizations = {
        
        @Authorization(value = "ApiKey"),
        
        @Authorization(value = "ApplicationId")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Match a query string to geographic coordinates. [Docs link](http://docs.traveltime.com/reference/geocoding-search/)", response = ResponseGeocoding.class),
        @ApiResponse(code = 200, message = "The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response)", response = ResponseError.class) })
    @GetMapping(
        value = "/v4/geocoding/search",
        produces = { "application/json" }
    )
    default ResponseEntity<ResponseGeocoding> geocodingSearch(@NotNull @ApiParam(value = "", required = true) @Valid @RequestParam(value = "query", required = true) String query,@ApiParam(value = "") @Valid @RequestParam(value = "focus.lat", required = false) Double focusLat,@ApiParam(value = "") @Valid @RequestParam(value = "focus.lng", required = false) Double focusLng,@ApiParam(value = "") @Valid @RequestParam(value = "within.country", required = false) String withinCountry) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"features\" : [ { \"geometry\" : { \"coordinates\" : [ 0.8008281904610115, 0.8008281904610115 ], \"type\" : \"type\" }, \"type\" : \"type\", \"properties\" : { \"continent\" : \"continent\", \"country\" : \"country\", \"city\" : \"city\", \"county\" : \"county\", \"postcode\" : \"postcode\", \"house_number\" : \"house_number\", \"label\" : \"label\", \"macroregion\" : \"macroregion\", \"score\" : 6.027456183070403, \"country_code\" : \"country_code\", \"features\" : { \"public_transport\" : { \"date_start\" : \"2000-01-23T04:56:07.000+00:00\", \"date_end\" : \"2000-01-23T04:56:07.000+00:00\" }, \"fares\" : true, \"postcodes\" : true }, \"street\" : \"street\", \"neighbourhood\" : \"neighbourhood\", \"name\" : \"name\", \"region\" : \"region\", \"region_code\" : \"region_code\" } }, { \"geometry\" : { \"coordinates\" : [ 0.8008281904610115, 0.8008281904610115 ], \"type\" : \"type\" }, \"type\" : \"type\", \"properties\" : { \"continent\" : \"continent\", \"country\" : \"country\", \"city\" : \"city\", \"county\" : \"county\", \"postcode\" : \"postcode\", \"house_number\" : \"house_number\", \"label\" : \"label\", \"macroregion\" : \"macroregion\", \"score\" : 6.027456183070403, \"country_code\" : \"country_code\", \"features\" : { \"public_transport\" : { \"date_start\" : \"2000-01-23T04:56:07.000+00:00\", \"date_end\" : \"2000-01-23T04:56:07.000+00:00\" }, \"fares\" : true, \"postcodes\" : true }, \"street\" : \"street\", \"neighbourhood\" : \"neighbourhood\", \"name\" : \"name\", \"region\" : \"region\", \"region_code\" : \"region_code\" } } ], \"type\" : \"type\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /v4/map-info
     *
     * @return Returns information about currently supported countries. [Docs link](http://docs.traveltime.com/reference/map-info/) (status code 200)
     *         or The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response) (status code 200)
     * 
     * @see <a href="http://docs.traveltime.com/reference/map-info"> Documentation</a>
     */
    @ApiOperation(value = "", nickname = "mapInfo", notes = "", response = ResponseMapInfo.class, authorizations = {
        
        @Authorization(value = "ApiKey"),
        
        @Authorization(value = "ApplicationId")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns information about currently supported countries. [Docs link](http://docs.traveltime.com/reference/map-info/)", response = ResponseMapInfo.class),
        @ApiResponse(code = 200, message = "The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response)", response = ResponseError.class) })
    @GetMapping(
        value = "/v4/map-info",
        produces = { "application/json" }
    )
    default ResponseEntity<ResponseMapInfo> mapInfo() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"maps\" : [ { \"features\" : { \"public_transport\" : { \"date_start\" : \"2000-01-23T04:56:07.000+00:00\", \"date_end\" : \"2000-01-23T04:56:07.000+00:00\" }, \"fares\" : true, \"postcodes\" : true }, \"name\" : \"name\" }, { \"features\" : { \"public_transport\" : { \"date_start\" : \"2000-01-23T04:56:07.000+00:00\", \"date_end\" : \"2000-01-23T04:56:07.000+00:00\" }, \"fares\" : true, \"postcodes\" : true }, \"name\" : \"name\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v4/routes
     *
     * @param requestRoutes  (required)
     * @return Returns routing information between source and destinations. [Docs link](http://docs.traveltime.com/reference/routes/) (status code 200)
     *         or The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response) (status code 200)
     * 
     * @see <a href="http://docs.traveltime.com/reference/routes"> Documentation</a>
     */
    @ApiOperation(value = "", nickname = "routes", notes = "", response = ResponseRoutes.class, authorizations = {
        
        @Authorization(value = "ApiKey"),
        
        @Authorization(value = "ApplicationId")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Returns routing information between source and destinations. [Docs link](http://docs.traveltime.com/reference/routes/)", response = ResponseRoutes.class),
        @ApiResponse(code = 200, message = "The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response)", response = ResponseError.class) })
    @PostMapping(
        value = "/v4/routes",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<ResponseRoutes> routes(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RequestRoutes requestRoutes) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"results\" : [ { \"unreachable\" : [ \"unreachable\", \"unreachable\" ], \"locations\" : [ { \"id\" : \"id\", \"properties\" : [ { \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] }, { \"id\" : \"id\", \"properties\" : [ { \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] } ], \"search_id\" : \"search_id\" }, { \"unreachable\" : [ \"unreachable\", \"unreachable\" ], \"locations\" : [ { \"id\" : \"id\", \"properties\" : [ { \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] }, { \"id\" : \"id\", \"properties\" : [ { \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] } ], \"search_id\" : \"search_id\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v4/supported-locations
     *
     * @param requestSupportedLocations  (required)
     * @return Find out what points are supported by our api. [Docs link](http://docs.traveltime.com/reference/supported-locations/) (status code 200)
     *         or The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response) (status code 200)
     * 
     * @see <a href="http://docs.traveltime.com/reference/supported-locations"> Documentation</a>
     */
    @ApiOperation(value = "", nickname = "supportedLocations", notes = "", response = ResponseSupportedLocations.class, authorizations = {
        
        @Authorization(value = "ApiKey"),
        
        @Authorization(value = "ApplicationId")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Find out what points are supported by our api. [Docs link](http://docs.traveltime.com/reference/supported-locations/)", response = ResponseSupportedLocations.class),
        @ApiResponse(code = 200, message = "The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response)", response = ResponseError.class) })
    @PostMapping(
        value = "/v4/supported-locations",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<ResponseSupportedLocations> supportedLocations(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RequestSupportedLocations requestSupportedLocations) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"unsupported_locations\" : [ \"unsupported_locations\", \"unsupported_locations\" ], \"locations\" : [ { \"map_name\" : \"map_name\", \"id\" : \"id\" }, { \"map_name\" : \"map_name\", \"id\" : \"id\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v4/time-filter
     *
     * @param requestTimeFilter  (required)
     * @return Given origin and destination points filter out points that cannot be reached within specified time limit. [Docs link](http://docs.traveltime.com/reference/time-filter) (status code 200)
     *         or The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response) (status code 200)
     * 
     * @see <a href="http://docs.traveltime.com/reference/time-filter"> Documentation</a>
     */
    @ApiOperation(value = "", nickname = "timeFilter", notes = "", response = ResponseTimeFilter.class, authorizations = {
        
        @Authorization(value = "ApiKey"),
        
        @Authorization(value = "ApplicationId")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Given origin and destination points filter out points that cannot be reached within specified time limit. [Docs link](http://docs.traveltime.com/reference/time-filter)", response = ResponseTimeFilter.class),
        @ApiResponse(code = 200, message = "The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response)", response = ResponseError.class) })
    @PostMapping(
        value = "/v4/time-filter",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<ResponseTimeFilter> timeFilter(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RequestTimeFilter requestTimeFilter) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"results\" : [ { \"unreachable\" : [ \"unreachable\", \"unreachable\" ], \"locations\" : [ { \"id\" : \"id\", \"properties\" : [ { \"distance_breakdown\" : [ { \"distance\" : 1 }, { \"distance\" : 1 } ], \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"distance_breakdown\" : [ { \"distance\" : 1 }, { \"distance\" : 1 } ], \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] }, { \"id\" : \"id\", \"properties\" : [ { \"distance_breakdown\" : [ { \"distance\" : 1 }, { \"distance\" : 1 } ], \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"distance_breakdown\" : [ { \"distance\" : 1 }, { \"distance\" : 1 } ], \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] } ], \"search_id\" : \"search_id\" }, { \"unreachable\" : [ \"unreachable\", \"unreachable\" ], \"locations\" : [ { \"id\" : \"id\", \"properties\" : [ { \"distance_breakdown\" : [ { \"distance\" : 1 }, { \"distance\" : 1 } ], \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"distance_breakdown\" : [ { \"distance\" : 1 }, { \"distance\" : 1 } ], \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] }, { \"id\" : \"id\", \"properties\" : [ { \"distance_breakdown\" : [ { \"distance\" : 1 }, { \"distance\" : 1 } ], \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"distance_breakdown\" : [ { \"distance\" : 1 }, { \"distance\" : 1 } ], \"route\" : { \"arrival_time\" : \"2000-01-23T04:56:07.000+00:00\", \"parts\" : [ { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" }, { \"departs_at\" : \"departs_at\", \"distance\" : 2, \"line\" : \"line\", \"num_stops\" : 2, \"turn\" : \"turn\", \"type\" : \"basic\", \"travel_time\" : 7, \"directions\" : \"directions\", \"arrives_at\" : \"arrives_at\", \"road\" : \"road\", \"departure_station\" : \"departure_station\", \"id\" : \"id\", \"arrival_station\" : \"arrival_station\", \"coords\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"direction\" : \"direction\" } ], \"departure_time\" : \"2000-01-23T04:56:07.000+00:00\" }, \"distance\" : 6, \"travel_time\" : 0, \"fares\" : { \"breakdown\" : [ { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] }, { \"modes\" : [ null, null ], \"tickets\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ], \"route_part_ids\" : [ 5, 5 ] } ], \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] } ], \"search_id\" : \"search_id\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v4/time-filter/fast
     *
     * @param requestTimeFilterFast  (required)
     * @return A very fast version of Time Filter. [Docs link](http://docs.traveltime.com/reference/time-filter-fast/) (status code 200)
     *         or The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response) (status code 200)
     * 
     * @see <a href="http://docs.traveltime.com/reference/time-filter-fast"> Documentation</a>
     */
    @ApiOperation(value = "", nickname = "timeFilterFast", notes = "", response = ResponseTimeFilterFast.class, authorizations = {
        
        @Authorization(value = "ApiKey"),
        
        @Authorization(value = "ApplicationId")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A very fast version of Time Filter. [Docs link](http://docs.traveltime.com/reference/time-filter-fast/)", response = ResponseTimeFilterFast.class),
        @ApiResponse(code = 200, message = "The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response)", response = ResponseError.class) })
    @PostMapping(
        value = "/v4/time-filter/fast",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<ResponseTimeFilterFast> timeFilterFast(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RequestTimeFilterFast requestTimeFilterFast) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"results\" : [ { \"unreachable\" : [ \"unreachable\", \"unreachable\" ], \"locations\" : [ { \"id\" : \"id\", \"properties\" : [ { \"travel_time\" : 0, \"fares\" : { \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"travel_time\" : 0, \"fares\" : { \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] }, { \"id\" : \"id\", \"properties\" : [ { \"travel_time\" : 0, \"fares\" : { \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"travel_time\" : 0, \"fares\" : { \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] } ], \"search_id\" : \"search_id\" }, { \"unreachable\" : [ \"unreachable\", \"unreachable\" ], \"locations\" : [ { \"id\" : \"id\", \"properties\" : [ { \"travel_time\" : 0, \"fares\" : { \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"travel_time\" : 0, \"fares\" : { \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] }, { \"id\" : \"id\", \"properties\" : [ { \"travel_time\" : 0, \"fares\" : { \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } }, { \"travel_time\" : 0, \"fares\" : { \"tickets_total\" : [ { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" }, { \"price\" : 5.637376656633329, \"currency\" : \"currency\", \"type\" : \"single\" } ] } } ] } ], \"search_id\" : \"search_id\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v4/time-filter/postcode-districts
     *
     * @param requestTimeFilterPostcodeDistricts  (required)
     * @return Find districts that have a certain coverage from origin and get statistics about postcodes within such districts. [Docs link](http://docs.traveltime.com/reference/postcode-district-filter/) (status code 200)
     *         or The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response) (status code 200)
     * 
     * @see <a href="http://docs.traveltime.com/reference/postcode-search"> Documentation</a>
     */
    @ApiOperation(value = "", nickname = "timeFilterPostcodeDistricts", notes = "", response = ResponseTimeFilterPostcodeDistricts.class, authorizations = {
        
        @Authorization(value = "ApiKey"),
        
        @Authorization(value = "ApplicationId")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Find districts that have a certain coverage from origin and get statistics about postcodes within such districts. [Docs link](http://docs.traveltime.com/reference/postcode-district-filter/)", response = ResponseTimeFilterPostcodeDistricts.class),
        @ApiResponse(code = 200, message = "The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response)", response = ResponseError.class) })
    @PostMapping(
        value = "/v4/time-filter/postcode-districts",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<ResponseTimeFilterPostcodeDistricts> timeFilterPostcodeDistricts(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RequestTimeFilterPostcodeDistricts requestTimeFilterPostcodeDistricts) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"results\" : [ { \"districts\" : [ { \"code\" : \"code\", \"properties\" : { \"coverage\" : 5.637376656633329, \"travel_time_all\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 }, \"travel_time_reachable\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 } } }, { \"code\" : \"code\", \"properties\" : { \"coverage\" : 5.637376656633329, \"travel_time_all\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 }, \"travel_time_reachable\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 } } } ], \"search_id\" : \"search_id\" }, { \"districts\" : [ { \"code\" : \"code\", \"properties\" : { \"coverage\" : 5.637376656633329, \"travel_time_all\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 }, \"travel_time_reachable\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 } } }, { \"code\" : \"code\", \"properties\" : { \"coverage\" : 5.637376656633329, \"travel_time_all\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 }, \"travel_time_reachable\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 } } } ], \"search_id\" : \"search_id\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v4/time-filter/postcode-sectors
     *
     * @param requestTimeFilterPostcodeSectors  (required)
     * @return Find sectors that have a certain coverage from origin and get statistics about postcodes within such sectors. [Docs link](http://docs.traveltime.com/reference/postcode-sector-filter/) (status code 200)
     *         or The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response) (status code 200)
     * 
     * @see <a href="http://docs.traveltime.com/reference/postcode-sector-filter"> Documentation</a>
     */
    @ApiOperation(value = "", nickname = "timeFilterPostcodeSectors", notes = "", response = ResponseTimeFilterPostcodeSectors.class, authorizations = {
        
        @Authorization(value = "ApiKey"),
        
        @Authorization(value = "ApplicationId")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Find sectors that have a certain coverage from origin and get statistics about postcodes within such sectors. [Docs link](http://docs.traveltime.com/reference/postcode-sector-filter/)", response = ResponseTimeFilterPostcodeSectors.class),
        @ApiResponse(code = 200, message = "The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response)", response = ResponseError.class) })
    @PostMapping(
        value = "/v4/time-filter/postcode-sectors",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<ResponseTimeFilterPostcodeSectors> timeFilterPostcodeSectors(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RequestTimeFilterPostcodeSectors requestTimeFilterPostcodeSectors) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"results\" : [ { \"sectors\" : [ { \"code\" : \"code\", \"properties\" : { \"coverage\" : 0.8008281904610115, \"travel_time_all\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 }, \"travel_time_reachable\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 } } }, { \"code\" : \"code\", \"properties\" : { \"coverage\" : 0.8008281904610115, \"travel_time_all\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 }, \"travel_time_reachable\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 } } } ], \"search_id\" : \"search_id\" }, { \"sectors\" : [ { \"code\" : \"code\", \"properties\" : { \"coverage\" : 0.8008281904610115, \"travel_time_all\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 }, \"travel_time_reachable\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 } } }, { \"code\" : \"code\", \"properties\" : { \"coverage\" : 0.8008281904610115, \"travel_time_all\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 }, \"travel_time_reachable\" : { \"min\" : 0, \"median\" : 5, \"max\" : 6, \"mean\" : 1 } } } ], \"search_id\" : \"search_id\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v4/time-filter/postcodes
     *
     * @param requestTimeFilterPostcodes  (required)
     * @return Find reachable postcodes from origin and get statistics about such postcodes. [Docs link](http://docs.traveltime.com/reference/postcode-search/) (status code 200)
     *         or The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response) (status code 200)
     * 
     * @see <a href="http://docs.traveltime.com/reference/postcode-search"> Documentation</a>
     */
    @ApiOperation(value = "", nickname = "timeFilterPostcodes", notes = "", response = ResponseTimeFilterPostcodes.class, authorizations = {
        
        @Authorization(value = "ApiKey"),
        
        @Authorization(value = "ApplicationId")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Find reachable postcodes from origin and get statistics about such postcodes. [Docs link](http://docs.traveltime.com/reference/postcode-search/)", response = ResponseTimeFilterPostcodes.class),
        @ApiResponse(code = 200, message = "The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response)", response = ResponseError.class) })
    @PostMapping(
        value = "/v4/time-filter/postcodes",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<ResponseTimeFilterPostcodes> timeFilterPostcodes(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RequestTimeFilterPostcodes requestTimeFilterPostcodes) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"results\" : [ { \"postcodes\" : [ { \"code\" : \"code\", \"properties\" : [ { \"distance\" : 6, \"travel_time\" : 0 }, { \"distance\" : 6, \"travel_time\" : 0 } ] }, { \"code\" : \"code\", \"properties\" : [ { \"distance\" : 6, \"travel_time\" : 0 }, { \"distance\" : 6, \"travel_time\" : 0 } ] } ], \"search_id\" : \"search_id\" }, { \"postcodes\" : [ { \"code\" : \"code\", \"properties\" : [ { \"distance\" : 6, \"travel_time\" : 0 }, { \"distance\" : 6, \"travel_time\" : 0 } ] }, { \"code\" : \"code\", \"properties\" : [ { \"distance\" : 6, \"travel_time\" : 0 }, { \"distance\" : 6, \"travel_time\" : 0 } ] } ], \"search_id\" : \"search_id\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /v4/time-map
     *
     * @param requestTimeMap  (required)
     * @return Given origin coordinates, find shapes of zones reachable within corresponding travel time. [Docs link](http://docs.traveltime.com/reference/time-map/) (status code 200)
     *         or The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response) (status code 200)
     * 
     * @see <a href="http://docs.traveltime.com/reference/time-map"> Documentation</a>
     */
    @ApiOperation(value = "", nickname = "timeMap", notes = "", response = ResponseTimeMap.class, authorizations = {
        
        @Authorization(value = "ApiKey"),
        
        @Authorization(value = "ApplicationId")
         }, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Given origin coordinates, find shapes of zones reachable within corresponding travel time. [Docs link](http://docs.traveltime.com/reference/time-map/)", response = ResponseTimeMap.class),
        @ApiResponse(code = 200, message = "The json body returned upon error. [Docs link](http://docs.traveltime.com/reference/error-response)", response = ResponseError.class) })
    @PostMapping(
        value = "/v4/time-map",
        produces = { "application/json", "application/vnd.wkt+json", "application/vnd.wkt-no-holes+json", "application/vnd.bounding-boxes+json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<ResponseTimeMap> timeMap(@ApiParam(value = "" ,required=true )  @Valid @RequestBody RequestTimeMap requestTimeMap) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"results\" : [ { \"shapes\" : [ { \"shell\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"holes\" : [ [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ] ] }, { \"shell\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"holes\" : [ [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ] ] } ], \"properties\" : { \"is_only_walking\" : true }, \"search_id\" : \"search_id\" }, { \"shapes\" : [ { \"shell\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"holes\" : [ [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ] ] }, { \"shell\" : [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], \"holes\" : [ [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ], [ { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 }, { \"lng\" : 3.616076749251911, \"lat\" : 9.301444243932576 } ] ] } ], \"properties\" : { \"is_only_walking\" : true }, \"search_id\" : \"search_id\" } ] }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
