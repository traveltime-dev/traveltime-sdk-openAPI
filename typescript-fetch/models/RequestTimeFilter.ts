/* tslint:disable */
/* eslint-disable */
/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    RequestLocation,
    RequestLocationFromJSON,
    RequestLocationFromJSONTyped,
    RequestLocationToJSON,
    RequestTimeFilterArrivalSearch,
    RequestTimeFilterArrivalSearchFromJSON,
    RequestTimeFilterArrivalSearchFromJSONTyped,
    RequestTimeFilterArrivalSearchToJSON,
    RequestTimeFilterDepartureSearch,
    RequestTimeFilterDepartureSearchFromJSON,
    RequestTimeFilterDepartureSearchFromJSONTyped,
    RequestTimeFilterDepartureSearchToJSON,
} from './';

/**
 * 
 * @export
 * @interface RequestTimeFilter
 */
export interface RequestTimeFilter {
    /**
     * 
     * @type {Array<RequestLocation>}
     * @memberof RequestTimeFilter
     */
    locations: Array<RequestLocation>;
    /**
     * 
     * @type {Array<RequestTimeFilterDepartureSearch>}
     * @memberof RequestTimeFilter
     */
    departureSearches?: Array<RequestTimeFilterDepartureSearch>;
    /**
     * 
     * @type {Array<RequestTimeFilterArrivalSearch>}
     * @memberof RequestTimeFilter
     */
    arrivalSearches?: Array<RequestTimeFilterArrivalSearch>;
}

export function RequestTimeFilterFromJSON(json: any): RequestTimeFilter {
    return RequestTimeFilterFromJSONTyped(json, false);
}

export function RequestTimeFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): RequestTimeFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'locations': ((json['locations'] as Array<any>).map(RequestLocationFromJSON)),
        'departureSearches': !exists(json, 'departure_searches') ? undefined : ((json['departure_searches'] as Array<any>).map(RequestTimeFilterDepartureSearchFromJSON)),
        'arrivalSearches': !exists(json, 'arrival_searches') ? undefined : ((json['arrival_searches'] as Array<any>).map(RequestTimeFilterArrivalSearchFromJSON)),
    };
}

export function RequestTimeFilterToJSON(value?: RequestTimeFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'locations': ((value.locations as Array<any>).map(RequestLocationToJSON)),
        'departure_searches': value.departureSearches === undefined ? undefined : ((value.departureSearches as Array<any>).map(RequestTimeFilterDepartureSearchToJSON)),
        'arrival_searches': value.arrivalSearches === undefined ? undefined : ((value.arrivalSearches as Array<any>).map(RequestTimeFilterArrivalSearchToJSON)),
    };
}


