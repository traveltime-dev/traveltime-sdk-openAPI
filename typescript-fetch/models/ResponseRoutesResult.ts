/* tslint:disable */
/* eslint-disable */
/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.3
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ResponseRoutesLocation,
    ResponseRoutesLocationFromJSON,
    ResponseRoutesLocationFromJSONTyped,
    ResponseRoutesLocationToJSON,
} from './';

/**
 * 
 * @export
 * @interface ResponseRoutesResult
 */
export interface ResponseRoutesResult {
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutesResult
     */
    searchId: string;
    /**
     * 
     * @type {Array<ResponseRoutesLocation>}
     * @memberof ResponseRoutesResult
     */
    locations: Array<ResponseRoutesLocation>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ResponseRoutesResult
     */
    unreachable: Array<string>;
}

export function ResponseRoutesResultFromJSON(json: any): ResponseRoutesResult {
    return ResponseRoutesResultFromJSONTyped(json, false);
}

export function ResponseRoutesResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): ResponseRoutesResult {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'searchId': json['search_id'],
        'locations': ((json['locations'] as Array<any>).map(ResponseRoutesLocationFromJSON)),
        'unreachable': json['unreachable'],
    };
}

export function ResponseRoutesResultToJSON(value?: ResponseRoutesResult | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'search_id': value.searchId,
        'locations': ((value.locations as Array<any>).map(ResponseRoutesLocationToJSON)),
        'unreachable': value.unreachable,
    };
}


