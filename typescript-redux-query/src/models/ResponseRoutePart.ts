// tslint:disable
/**
 * TravelTime API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.2.2
 * Contact: support@igeolise.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Coords,
    CoordsFromJSON,
    CoordsToJSON,
    ResponseTransportationMode,
    ResponseTransportationModeFromJSON,
    ResponseTransportationModeToJSON,
} from './';

/**
 * 
 * @export
 * @interface ResponseRoutePart
 */
export interface ResponseRoutePart  {
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutePart
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutePart
     */
    type: ResponseRoutePartTypeEnum;
    /**
     * 
     * @type {ResponseTransportationMode}
     * @memberof ResponseRoutePart
     */
    mode: ResponseTransportationMode;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutePart
     */
    directions: string;
    /**
     * 
     * @type {number}
     * @memberof ResponseRoutePart
     */
    distance: number;
    /**
     * 
     * @type {number}
     * @memberof ResponseRoutePart
     */
    travelTime: number;
    /**
     * 
     * @type {Array<Coords>}
     * @memberof ResponseRoutePart
     */
    coords: Array<Coords>;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutePart
     */
    direction?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutePart
     */
    road?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutePart
     */
    turn?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutePart
     */
    line?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutePart
     */
    departureStation?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutePart
     */
    arrivalStation?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutePart
     */
    departsAt?: string;
    /**
     * 
     * @type {string}
     * @memberof ResponseRoutePart
     */
    arrivesAt?: string;
    /**
     * 
     * @type {number}
     * @memberof ResponseRoutePart
     */
    numStops?: number;
}

export function ResponseRoutePartFromJSON(json: any): ResponseRoutePart {
    return {
        'id': json['id'],
        'type': json['type'],
        'mode': ResponseTransportationModeFromJSON(json['mode']),
        'directions': json['directions'],
        'distance': json['distance'],
        'travelTime': json['travel_time'],
        'coords': (json['coords'] as Array<any>).map(CoordsFromJSON),
        'direction': !exists(json, 'direction') ? undefined : json['direction'],
        'road': !exists(json, 'road') ? undefined : json['road'],
        'turn': !exists(json, 'turn') ? undefined : json['turn'],
        'line': !exists(json, 'line') ? undefined : json['line'],
        'departureStation': !exists(json, 'departure_station') ? undefined : json['departure_station'],
        'arrivalStation': !exists(json, 'arrival_station') ? undefined : json['arrival_station'],
        'departsAt': !exists(json, 'departs_at') ? undefined : json['departs_at'],
        'arrivesAt': !exists(json, 'arrives_at') ? undefined : json['arrives_at'],
        'numStops': !exists(json, 'num_stops') ? undefined : json['num_stops'],
    };
}

export function ResponseRoutePartToJSON(value?: ResponseRoutePart): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'id': value.id,
        'type': value.type,
        'mode': ResponseTransportationModeToJSON(value.mode),
        'directions': value.directions,
        'distance': value.distance,
        'travel_time': value.travelTime,
        'coords': (value.coords as Array<any>).map(CoordsToJSON),
        'direction': value.direction,
        'road': value.road,
        'turn': value.turn,
        'line': value.line,
        'departure_station': value.departureStation,
        'arrival_station': value.arrivalStation,
        'departs_at': value.departsAt,
        'arrives_at': value.arrivesAt,
        'num_stops': value.numStops,
    };
}

/**
* @export
* @enum {string}
*/
export enum ResponseRoutePartTypeEnum {
    Basic = 'basic',
    StartEnd = 'start_end',
    Road = 'road',
    PublicTransport = 'public_transport'
}


